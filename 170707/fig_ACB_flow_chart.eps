%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: ACB_flow_chart.pdf
%%Creator: Adobe Acrobat 10.1.15
%%For: connectivity
%%CreationDate: 2015/8/13, ¤W¤È 11:57:55
%%BoundingBox: -1 0 3038 2073
%%HiResBoundingBox: 0 0 3037.9249 2072.3309
%%CropBox: 0 0 3037.9249 2072.3309
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1177 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='ï»¿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2015-08-13T11:45:09+08:00"
   xmp:CreatorTool="MicrosoftÂ® VisioÂ® 2010"
   xmp:ModifyDate="2015-08-13T11:57:44+08:00"
   xmp:MetadataDate="2015-08-13T11:57:44+08:00"
   pdf:Keywords=""
   pdf:Producer="MicrosoftÂ® VisioÂ® 2010"
   xmpMM:DocumentID="uuid:45ce080f-f054-44e8-949e-1ef33e5076b0"
   xmpMM:InstanceID="uuid:9bb59106-c438-4e42-b7a0-15151f1228a7">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>weiHank</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_CoolType_Core/ps get exec
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /PBAAAA+CALIBRI def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-503 -307 1240 964} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC1C545DFC3C53F52C69233
4252531335C4AFD91E9493A7B9787114ADBF50CAD0D8D8F4E0FD112CA0EDC244
BC77AFB35E52902467E4B7D65BC23E8AB084EE08EDC3C9FE17948A4E93ECA5D5
D8A99AF099DAB98A96A7EEC3487AD5909F63F36A9F52E364FE794F0586CEACB0
693AEA3E3B131EDB924E9018AC085D5D058B3A8419D5096479413ADE107D9F53
02816818EECEB683CD82FAAA79E358EAA71283CC02664EE09C62BDF6E0D9BC98
D9F308DF8AEA61A9B7C090BD7FD96A3223C7AE0D3D1A8F2E623FA6B7C467CA6F
ECDBA0B792188DFEEBD3D01BCE6CC077D778842DE1B5E36F7F8EB4C68A439269
E0981B28AD1790AA058065E4B6AD27A659E12C7322A5BE1E7DF9729C0030192F
3688A380035351BB0945D5DC7515959F458727E2B8854977E466D6DDC900E997
B52F6BAB4C73A178A3B47EBB3C3FC842F51CC6E114336F3E4E5E72B20D8F94A7
BA3BA965E83BF37BAA664C34B8502BB9E9B9BEDD7EBC5DCBC4FFF5EBCA9C0324
49885D42A9DCCBA2A816B59D7978373DF4208E5608F69A2EAF492AC156CC637D
5A11AF573B17CF9F38> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI /PBAAAA+CALIBRI findfont ct_VMDictPut
true set_gvm
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Bold Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /HIBBAA+CALIBRI,Bold def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {-519 -306 1240 971} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B7A086528E2CBE7FD4F03CC6CDCA18E09BCC917FA5F1
19478AAC0A696931453BF661861F40ACE8D15EA0278E8F88478BB0248E8D1904
2FB8B7F2BB2D4ECFE961B3EEB80565197E481D427DFF375EC95F16C0E36FE28A
EC2A0702F6CB5ACA5B242B6593847C74B58C6FBE25BCF0D4AFF25D49578CAB0D
929B025DECF86FE8C45E91FC3804785896842CEEC7085BA98EF5BCC94B208BF4
3A5FA51448171853E476E618A0AB76D0CDCEE51B8CF3FCD6DA051824D7EFC40D
8D270BAD39624CE3E5CBFE64B165BA24EF48FCEC82F8DEB8BFCD829A07FF03FF
E381E622BF0967DB53309A79D2F393F52C4B535EC59CAFAAC152061A92D31A3A
6E83C18D63056F4453027EAA702C494809677EB8C59BD219046DE492EABC7DF1
9D085C93C98D2A8DDC68AF0F5D7D82447ED6165A8DE95E6965A0F15A3F7696EA
E508CE290FD5B2FFA8A49A20B157645C3C3FEFBC64E2B40E75B90474094AF159
9689FA1EAB0D131F6DB991FC0D5943DE54CA9E5ECDA986A63CDF0394AF79DB39
8CE8AC4F02FDBD88EE6AE535CFB6C3B33C157AAFFBEC52BA3DACE77ABDA0C787
220FBA75DA1E45C945> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/XNCYXO+CALIBRI,Bold /HIBBAA+CALIBRI,Bold findfont ct_VMDictPut
Adobe_CoolType_Core/pt get exec
%%EndPageSetup
1 -1 scale 0 -2072.33 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
-4.57764e-5 0 mo
-4.57764e-5 2072.33 li
3037.92 2072.33 li
3037.92 0 li
cp
clp
gsave
-.870026 2072.89 mo
3038.13 2072.89 li
3038.13 -.113683 li
-.870026 -.113683 li
-.870026 2072.89 li
clp
2099.38 668.637 mo
2086.23 668.637 li
2086.48 668.195 2086.63 667.683 2086.63 667.136 cv
2086.63 667.136 li
2097.88 667.136 li
2097.88 654.389 li
2097.88 654.389 li
2098.43 654.389 2098.94 654.242 2099.38 653.987 cv
2099.38 668.637 li
2081.03 668.637 mo
2056.23 668.637 li
2056.48 668.195 2056.63 667.683 2056.63 667.136 cv
2056.63 667.136 li
2080.63 667.136 li
2080.63 667.136 li
2080.63 667.683 2080.77 668.195 2081.03 668.637 cv
2009.03 668.637 mo
1984.23 668.637 li
1984.48 668.195 1984.63 667.683 1984.63 667.136 cv
1984.63 667.136 li
2008.63 667.136 li
2008.63 667.136 li
2008.63 667.683 2008.77 668.195 2009.03 668.637 cv
1979.03 668.637 mo
1954.23 668.637 li
1954.48 668.195 1954.63 667.683 1954.63 667.136 cv
1954.63 667.136 li
1978.63 667.136 li
1978.63 667.136 li
1978.63 667.683 1978.77 668.195 1979.03 668.637 cv
1907.03 668.637 mo
1882.23 668.637 li
1882.48 668.195 1882.63 667.683 1882.63 667.136 cv
1882.63 667.136 li
1906.63 667.136 li
1906.63 667.136 li
1906.63 667.683 1906.77 668.195 1907.03 668.637 cv
1877.03 668.637 mo
1852.23 668.637 li
1852.48 668.195 1852.63 667.683 1852.63 667.136 cv
1852.63 667.136 li
1876.63 667.136 li
1876.63 667.136 li
1876.63 667.683 1876.77 668.195 1877.03 668.637 cv
1805.03 668.637 mo
1780.23 668.637 li
1780.48 668.195 1780.63 667.683 1780.63 667.136 cv
1780.63 667.136 li
1804.63 667.136 li
1804.63 667.136 li
1804.63 667.683 1804.77 668.195 1805.03 668.637 cv
1775.03 668.637 mo
1750.23 668.637 li
1750.48 668.195 1750.63 667.683 1750.63 667.136 cv
1750.63 667.136 li
1774.63 667.136 li
1774.63 667.136 li
1774.63 667.683 1774.77 668.195 1775.03 668.637 cv
1703.03 668.637 mo
1678.23 668.637 li
1678.48 668.195 1678.63 667.683 1678.63 667.136 cv
1678.63 667.136 li
1702.63 667.136 li
1702.63 667.136 li
1702.63 667.683 1702.77 668.195 1703.03 668.637 cv
1673.03 668.637 mo
1648.23 668.637 li
1648.48 668.195 1648.63 667.683 1648.63 667.136 cv
1648.63 667.136 li
1672.63 667.136 li
1672.63 667.136 li
1672.63 667.683 1672.77 668.195 1673.03 668.637 cv
1601.03 668.637 mo
1576.23 668.637 li
1576.48 668.195 1576.63 667.683 1576.63 667.136 cv
1576.63 667.136 li
1600.63 667.136 li
1600.63 667.136 li
1600.63 667.683 1600.77 668.195 1601.03 668.637 cv
1571.03 668.637 mo
1546.23 668.637 li
1546.48 668.195 1546.63 667.683 1546.63 667.136 cv
1546.63 667.136 li
1570.63 667.136 li
1570.63 667.136 li
1570.63 667.683 1570.78 668.195 1571.03 668.637 cv
1499.03 668.637 mo
1474.23 668.637 li
1474.48 668.195 1474.63 667.683 1474.63 667.136 cv
1474.63 667.136 li
1498.63 667.136 li
1498.63 667.136 li
1498.63 667.683 1498.78 668.195 1499.03 668.637 cv
1469.03 668.637 mo
1444.23 668.637 li
1444.48 668.195 1444.63 667.683 1444.63 667.136 cv
1444.63 667.136 li
1468.63 667.136 li
1468.63 667.136 li
1468.63 667.683 1468.78 668.195 1469.03 668.637 cv
1397.03 668.637 mo
1372.23 668.637 li
1372.48 668.195 1372.63 667.683 1372.63 667.136 cv
1372.63 667.136 li
1396.63 667.136 li
1396.63 667.136 li
1396.63 667.683 1396.78 668.195 1397.03 668.637 cv
1367.03 668.637 mo
1342.23 668.637 li
1342.48 668.195 1342.63 667.683 1342.63 667.136 cv
1342.63 667.136 li
1366.63 667.136 li
1366.63 667.136 li
1366.63 667.683 1366.78 668.195 1367.03 668.637 cv
1295.03 668.637 mo
1270.23 668.637 li
1270.48 668.195 1270.63 667.683 1270.63 667.136 cv
1270.63 667.136 li
1294.63 667.136 li
1294.63 667.136 li
1294.63 667.683 1294.78 668.195 1295.03 668.637 cv
1265.03 668.637 mo
1240.23 668.637 li
1240.48 668.195 1240.63 667.683 1240.63 667.136 cv
1240.63 667.136 li
1264.63 667.136 li
1264.63 667.136 li
1264.63 667.683 1264.78 668.195 1265.03 668.637 cv
1193.03 668.637 mo
1168.23 668.637 li
1168.48 668.195 1168.63 667.683 1168.63 667.136 cv
1168.63 667.136 li
1192.63 667.136 li
1192.63 667.136 li
1192.63 667.683 1192.78 668.195 1193.03 668.637 cv
1163.03 668.637 mo
1138.23 668.637 li
1138.48 668.195 1138.63 667.683 1138.63 667.136 cv
1138.63 667.136 li
1162.63 667.136 li
1162.63 667.136 li
1162.63 667.683 1162.78 668.195 1163.03 668.637 cv
1091.03 668.637 mo
1066.23 668.637 li
1066.48 668.195 1066.63 667.683 1066.63 667.136 cv
1066.63 667.136 li
1090.63 667.136 li
1090.63 667.136 li
1090.63 667.683 1090.78 668.195 1091.03 668.637 cv
1061.03 668.637 mo
1036.23 668.637 li
1036.48 668.195 1036.63 667.683 1036.63 667.136 cv
1036.63 667.136 li
1060.63 667.136 li
1060.63 667.136 li
1060.63 667.683 1060.78 668.195 1061.03 668.637 cv
989.031 668.637 mo
964.228 668.637 li
964.483 668.195 964.629 667.683 964.629 667.136 cv
964.629 667.136 li
988.629 667.136 li
988.629 667.136 li
988.629 667.683 988.776 668.195 989.031 668.637 cv
959.031 668.637 mo
934.228 668.637 li
934.484 668.195 934.63 667.683 934.63 667.136 cv
934.63 667.136 li
958.63 667.136 li
958.63 667.136 li
958.63 667.683 958.776 668.195 959.031 668.637 cv
887.031 668.637 mo
862.228 668.637 li
862.484 668.195 862.63 667.683 862.63 667.136 cv
862.63 667.136 li
886.63 667.136 li
886.63 667.136 li
886.63 667.683 886.776 668.195 887.031 668.637 cv
857.031 668.637 mo
832.228 668.637 li
832.483 668.195 832.63 667.683 832.63 667.136 cv
832.63 667.136 li
856.63 667.136 li
856.63 667.136 li
856.63 667.683 856.776 668.195 857.031 668.637 cv
785.031 668.637 mo
781.016 668.637 li
783.253 667.136 li
784.63 667.136 li
784.63 667.136 li
784.63 667.683 784.776 668.195 785.031 668.637 cv
770.243 668.637 mo
760.228 668.637 li
760.483 668.195 760.63 667.683 760.63 667.136 cv
760.63 667.136 li
768.006 667.136 li
770.243 668.637 li
755.031 668.637 mo
730.229 668.637 li
730.484 668.195 730.63 667.683 730.63 667.136 cv
730.63 667.136 li
754.63 667.136 li
754.63 667.136 li
754.63 667.683 754.776 668.195 755.031 668.637 cv
683.031 668.637 mo
658.228 668.637 li
658.483 668.195 658.629 667.683 658.629 667.136 cv
658.629 667.136 li
682.629 667.136 li
682.629 667.136 li
682.629 667.683 682.776 668.195 683.031 668.637 cv
653.031 668.637 mo
628.228 668.637 li
628.484 668.195 628.63 667.683 628.63 667.136 cv
628.63 667.136 li
652.63 667.136 li
652.63 667.136 li
652.63 667.683 652.776 668.195 653.031 668.637 cv
581.031 668.637 mo
556.228 668.637 li
556.484 668.195 556.63 667.683 556.63 667.136 cv
556.63 667.136 li
580.63 667.136 li
580.63 667.136 li
580.63 667.683 580.776 668.195 581.031 668.637 cv
551.031 668.637 mo
526.228 668.637 li
526.483 668.195 526.63 667.683 526.63 667.136 cv
526.63 667.136 li
550.63 667.136 li
550.63 667.136 li
550.63 667.683 550.776 668.195 551.031 668.637 cv
479.031 668.637 mo
454.228 668.637 li
454.483 668.195 454.63 667.683 454.63 667.136 cv
454.63 667.136 li
478.63 667.136 li
478.63 667.136 li
478.63 667.683 478.776 668.195 479.031 668.637 cv
449.032 668.637 mo
424.229 668.637 li
424.484 668.195 424.63 667.683 424.63 667.136 cv
424.63 667.136 li
448.63 667.136 li
448.63 667.136 li
448.63 667.683 448.776 668.195 449.032 668.637 cv
377.031 668.637 mo
352.228 668.637 li
352.483 668.195 352.629 667.683 352.629 667.136 cv
352.629 667.136 li
376.629 667.136 li
376.629 667.136 li
376.629 667.683 376.776 668.195 377.031 668.637 cv
347.031 668.637 mo
322.228 668.637 li
322.484 668.195 322.63 667.683 322.63 667.136 cv
322.63 667.136 li
346.63 667.136 li
346.63 667.136 li
346.63 667.683 346.776 668.195 347.031 668.637 cv
2099.38 606.789 mo
2098.94 606.534 2098.43 606.388 2097.88 606.388 cv
2097.88 606.388 li
2097.88 582.388 li
2097.88 582.388 li
2098.43 582.388 2098.94 582.242 2099.38 581.987 cv
2099.38 606.789 li
2099.38 576.79 mo
2098.94 576.534 2098.43 576.388 2097.88 576.388 cv
2097.88 576.388 li
2097.88 552.388 li
2097.88 552.388 li
2098.43 552.388 2098.94 552.242 2099.38 551.987 cv
2099.38 576.79 li
2099.38 504.79 mo
2098.94 504.534 2098.43 504.388 2097.88 504.388 cv
2097.88 504.388 li
2097.88 480.388 li
2097.88 480.388 li
2098.43 480.388 2098.94 480.242 2099.38 479.987 cv
2099.38 504.79 li
2099.38 474.789 mo
2098.94 474.534 2098.43 474.388 2097.88 474.388 cv
2097.88 474.388 li
2097.88 450.388 li
2097.88 450.388 li
2098.43 450.388 2098.94 450.242 2099.38 449.987 cv
2099.38 474.789 li
2099.38 402.79 mo
2098.94 402.534 2098.43 402.388 2097.88 402.388 cv
2097.88 402.388 li
2097.88 378.388 li
2097.88 378.388 li
2098.43 378.388 2098.94 378.242 2099.38 377.987 cv
2099.38 402.79 li
2099.38 372.79 mo
2098.94 372.535 2098.43 372.389 2097.88 372.389 cv
2097.88 372.389 li
2097.88 348.388 li
2097.88 348.388 li
2098.43 348.388 2098.94 348.242 2099.38 347.986 cv
2099.38 372.79 li
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
279.13 331.886 mo
279.13 668.637 li
2099.38 668.637 li
2099.38 331.886 li
279.13 331.886 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
2085.13 671.636 mo
2083.91 671.636 2082.86 670.912 2082.39 669.871 cv
2082.77 670.041 2083.19 670.136 2083.63 670.136 cv
2084.74 670.136 2085.71 669.533 2086.23 668.637 cv
2088.13 668.637 li
2088.13 668.637 li
2088.13 670.293 2086.79 671.636 2085.13 671.636 cv
2055.13 671.636 mo
2013.13 671.636 li
2011.91 671.636 2010.86 670.912 2010.39 669.871 cv
2010.77 670.041 2011.19 670.136 2011.63 670.136 cv
2053.63 670.136 li
2054.74 670.136 2055.71 669.533 2056.23 668.637 cv
2058.13 668.637 li
2058.13 668.637 li
2058.13 670.293 2056.78 671.636 2055.13 671.636 cv
1983.13 671.636 mo
1981.91 671.636 1980.86 670.912 1980.39 669.871 cv
1980.77 670.041 1981.19 670.136 1981.63 670.136 cv
1982.74 670.136 1983.71 669.533 1984.23 668.637 cv
1986.13 668.637 li
1986.13 668.637 li
1986.13 670.293 1984.78 671.636 1983.13 671.636 cv
1953.13 671.636 mo
1911.13 671.636 li
1909.91 671.636 1908.86 670.912 1908.39 669.871 cv
1908.77 670.041 1909.19 670.136 1909.63 670.136 cv
1951.63 670.136 li
1952.74 670.136 1953.71 669.533 1954.23 668.637 cv
1956.13 668.637 li
1956.13 668.637 li
1956.13 670.293 1954.79 671.636 1953.13 671.636 cv
1881.13 671.636 mo
1879.91 671.636 1878.86 670.912 1878.39 669.871 cv
1878.77 670.041 1879.19 670.136 1879.63 670.136 cv
1880.74 670.136 1881.71 669.533 1882.23 668.637 cv
1884.13 668.637 li
1884.13 668.637 li
1884.13 670.293 1882.79 671.636 1881.13 671.636 cv
1851.13 671.636 mo
1809.13 671.636 li
1807.91 671.636 1806.86 670.912 1806.39 669.871 cv
1806.77 670.041 1807.19 670.136 1807.63 670.136 cv
1849.63 670.136 li
1850.74 670.136 1851.71 669.533 1852.23 668.637 cv
1854.13 668.637 li
1854.13 668.637 li
1854.13 670.293 1852.79 671.636 1851.13 671.636 cv
1779.13 671.636 mo
1777.91 671.636 1776.86 670.912 1776.39 669.871 cv
1776.77 670.041 1777.19 670.136 1777.63 670.136 cv
1778.74 670.136 1779.71 669.533 1780.23 668.637 cv
1782.13 668.637 li
1782.13 668.637 li
1782.13 670.293 1780.79 671.636 1779.13 671.636 cv
1749.13 671.636 mo
1707.13 671.636 li
1705.91 671.636 1704.86 670.912 1704.39 669.871 cv
1704.77 670.041 1705.19 670.136 1705.63 670.136 cv
1747.63 670.136 li
1748.74 670.136 1749.71 669.533 1750.23 668.637 cv
1752.13 668.637 li
1752.13 668.637 li
1752.13 670.293 1750.79 671.636 1749.13 671.636 cv
1677.13 671.636 mo
1675.91 671.636 1674.86 670.912 1674.39 669.871 cv
1674.77 670.041 1675.19 670.136 1675.63 670.136 cv
1676.74 670.136 1677.71 669.533 1678.23 668.637 cv
1680.13 668.637 li
1680.13 668.637 li
1680.13 670.293 1678.79 671.636 1677.13 671.636 cv
1647.13 671.636 mo
1605.13 671.636 li
1603.91 671.636 1602.86 670.912 1602.39 669.871 cv
1602.77 670.041 1603.19 670.136 1603.63 670.136 cv
1645.63 670.136 li
1646.74 670.136 1647.71 669.533 1648.23 668.637 cv
1650.13 668.637 li
1650.13 668.637 li
1650.13 670.293 1648.79 671.636 1647.13 671.636 cv
1575.13 671.636 mo
1573.91 671.636 1572.86 670.912 1572.39 669.871 cv
1572.77 670.041 1573.19 670.136 1573.63 670.136 cv
1574.74 670.136 1575.71 669.533 1576.23 668.637 cv
1578.13 668.637 li
1578.13 668.637 li
1578.13 670.293 1576.79 671.636 1575.13 671.636 cv
1545.13 671.636 mo
1503.13 671.636 li
1501.91 671.636 1500.86 670.912 1500.39 669.871 cv
1500.77 670.041 1501.19 670.136 1501.63 670.136 cv
1543.63 670.136 li
1544.74 670.136 1545.71 669.533 1546.23 668.637 cv
1548.13 668.637 li
1548.13 668.637 li
1548.13 670.293 1546.79 671.636 1545.13 671.636 cv
1473.13 671.636 mo
1471.91 671.636 1470.86 670.912 1470.39 669.871 cv
1470.77 670.041 1471.19 670.136 1471.63 670.136 cv
1472.74 670.136 1473.71 669.533 1474.23 668.637 cv
1476.13 668.637 li
1476.13 668.637 li
1476.13 670.293 1474.79 671.636 1473.13 671.636 cv
1443.13 671.636 mo
1401.13 671.636 li
1399.91 671.636 1398.86 670.912 1398.39 669.871 cv
1398.77 670.041 1399.19 670.136 1399.63 670.136 cv
1441.63 670.136 li
1442.74 670.136 1443.71 669.533 1444.23 668.637 cv
1446.13 668.637 li
1446.13 668.637 li
1446.13 670.293 1444.79 671.636 1443.13 671.636 cv
1371.13 671.636 mo
1369.91 671.636 1368.87 670.912 1368.39 669.871 cv
1368.77 670.041 1369.19 670.136 1369.63 670.136 cv
1370.74 670.136 1371.71 669.533 1372.23 668.637 cv
1374.13 668.637 li
1374.13 668.637 li
1374.13 670.293 1372.79 671.636 1371.13 671.636 cv
1341.13 671.636 mo
1299.13 671.636 li
1297.91 671.636 1296.87 670.912 1296.39 669.871 cv
1296.77 670.041 1297.19 670.136 1297.63 670.136 cv
1339.63 670.136 li
1340.74 670.136 1341.71 669.533 1342.23 668.637 cv
1344.13 668.637 li
1344.13 668.637 li
1344.13 670.293 1342.79 671.636 1341.13 671.636 cv
1269.13 671.636 mo
1267.91 671.636 1266.86 670.912 1266.39 669.871 cv
1266.77 670.041 1267.19 670.136 1267.63 670.136 cv
1268.74 670.136 1269.71 669.533 1270.23 668.637 cv
1272.13 668.637 li
1272.13 668.637 li
1272.13 670.293 1270.79 671.636 1269.13 671.636 cv
1239.13 671.636 mo
1197.13 671.636 li
1195.91 671.636 1194.87 670.912 1194.39 669.871 cv
1194.77 670.041 1195.19 670.136 1195.63 670.136 cv
1237.63 670.136 li
1238.74 670.136 1239.71 669.533 1240.23 668.637 cv
1242.13 668.637 li
1242.13 668.637 li
1242.13 670.293 1240.79 671.636 1239.13 671.636 cv
1167.13 671.636 mo
1165.91 671.636 1164.87 670.912 1164.39 669.871 cv
1164.77 670.041 1165.19 670.136 1165.63 670.136 cv
1166.74 670.136 1167.71 669.533 1168.23 668.637 cv
1170.13 668.637 li
1170.13 668.637 li
1170.13 670.293 1168.79 671.636 1167.13 671.636 cv
1137.13 671.636 mo
1095.13 671.636 li
1093.91 671.636 1092.86 670.912 1092.39 669.871 cv
1092.77 670.041 1093.19 670.136 1093.63 670.136 cv
1135.63 670.136 li
1136.74 670.136 1137.71 669.533 1138.23 668.637 cv
1140.13 668.637 li
1140.13 668.637 li
1140.13 670.293 1138.79 671.636 1137.13 671.636 cv
1065.13 671.636 mo
1063.91 671.636 1062.87 670.912 1062.39 669.871 cv
1062.77 670.041 1063.19 670.136 1063.63 670.136 cv
1064.74 670.136 1065.71 669.533 1066.23 668.637 cv
1068.13 668.637 li
1068.13 668.637 li
1068.13 670.293 1066.79 671.636 1065.13 671.636 cv
1035.13 671.636 mo
993.129 671.636 li
991.913 671.636 990.865 670.912 990.395 669.871 cv
990.771 670.041 991.19 670.136 991.63 670.136 cv
1033.63 670.136 li
1034.74 670.136 1035.71 669.533 1036.23 668.637 cv
1038.13 668.637 li
1038.13 668.637 li
1038.13 670.293 1036.79 671.636 1035.13 671.636 cv
963.13 671.636 mo
961.913 671.636 960.865 670.912 960.394 669.871 cv
960.771 670.041 961.189 670.136 961.63 670.136 cv
962.74 670.136 963.709 669.533 964.228 668.637 cv
966.13 668.637 li
966.13 668.637 li
966.13 670.293 964.786 671.636 963.13 671.636 cv
933.13 671.636 mo
891.13 671.636 li
889.913 671.636 888.865 670.912 888.394 669.871 cv
888.771 670.041 889.189 670.136 889.63 670.136 cv
931.629 670.136 li
932.74 670.136 933.709 669.533 934.228 668.637 cv
936.129 668.637 li
936.129 668.637 li
936.129 670.293 934.787 671.636 933.13 671.636 cv
861.13 671.636 mo
859.913 671.636 858.865 670.912 858.395 669.871 cv
858.771 670.041 859.189 670.136 859.629 670.136 cv
860.74 670.136 861.71 669.533 862.228 668.637 cv
864.129 668.637 li
864.129 668.637 li
864.129 670.293 862.787 671.636 861.13 671.636 cv
831.129 671.636 mo
789.13 671.636 li
787.913 671.636 786.865 670.912 786.395 669.871 cv
786.771 670.041 787.189 670.136 787.629 670.136 cv
829.63 670.136 li
830.74 670.136 831.709 669.533 832.228 668.637 cv
834.13 668.637 li
834.13 668.637 li
834.13 670.293 832.786 671.636 831.129 671.636 cv
759.129 671.636 mo
757.913 671.636 756.865 670.912 756.395 669.871 cv
756.771 670.041 757.189 670.136 757.63 670.136 cv
758.74 670.136 759.709 669.533 760.228 668.637 cv
762.13 668.637 li
762.13 668.637 li
762.13 670.293 760.787 671.636 759.129 671.636 cv
729.13 671.636 mo
687.129 671.636 li
685.913 671.636 684.865 670.912 684.395 669.871 cv
684.771 670.041 685.19 670.136 685.63 670.136 cv
727.63 670.136 li
728.74 670.136 729.71 669.533 730.229 668.637 cv
732.13 668.637 li
732.13 668.637 li
732.13 670.293 730.786 671.636 729.13 671.636 cv
657.13 671.636 mo
655.913 671.636 654.866 670.912 654.395 669.871 cv
654.772 670.041 655.19 670.136 655.63 670.136 cv
656.74 670.136 657.709 669.533 658.228 668.637 cv
660.13 668.637 li
660.13 668.637 li
660.13 670.293 658.786 671.636 657.13 671.636 cv
627.13 671.636 mo
585.13 671.636 li
583.913 671.636 582.865 670.912 582.394 669.871 cv
582.771 670.041 583.189 670.136 583.63 670.136 cv
625.63 670.136 li
626.74 670.136 627.71 669.533 628.228 668.637 cv
630.129 668.637 li
630.129 668.637 li
630.129 670.293 628.787 671.636 627.13 671.636 cv
555.13 671.636 mo
553.913 671.636 552.866 670.912 552.395 669.871 cv
552.772 670.041 553.19 670.136 553.63 670.136 cv
554.74 670.136 555.71 669.533 556.228 668.637 cv
558.129 668.637 li
558.129 668.637 li
558.129 670.293 556.787 671.636 555.13 671.636 cv
525.13 671.636 mo
483.13 671.636 li
481.913 671.636 480.866 670.912 480.395 669.871 cv
480.772 670.041 481.189 670.136 481.629 670.136 cv
523.63 670.136 li
524.74 670.136 525.709 669.533 526.228 668.637 cv
528.13 668.637 li
528.13 668.637 li
528.13 670.293 526.786 671.636 525.13 671.636 cv
453.129 671.636 mo
451.913 671.636 450.865 670.912 450.395 669.871 cv
450.771 670.041 451.19 670.136 451.63 670.136 cv
452.74 670.136 453.709 669.533 454.228 668.637 cv
456.13 668.637 li
456.13 668.637 li
456.13 670.293 454.787 671.636 453.129 671.636 cv
423.13 671.636 mo
381.13 671.636 li
379.913 671.636 378.866 670.912 378.395 669.871 cv
378.771 670.041 379.19 670.136 379.63 670.136 cv
421.63 670.136 li
422.74 670.136 423.71 669.533 424.229 668.637 cv
426.13 668.637 li
426.13 668.637 li
426.13 670.293 424.786 671.636 423.13 671.636 cv
351.13 671.636 mo
349.913 671.636 348.866 670.912 348.395 669.871 cv
348.772 670.041 349.19 670.136 349.63 670.136 cv
350.74 670.136 351.71 669.533 352.228 668.637 cv
354.13 668.637 li
354.13 668.637 li
354.13 670.293 352.786 671.636 351.13 671.636 cv
321.13 671.636 mo
279.13 671.636 li
279.13 671.636 li
277.912 671.636 276.864 670.911 276.394 669.869 cv
276.78 670.043 277.202 670.137 277.63 670.137 cv
319.63 670.136 li
320.74 670.136 321.71 669.533 322.228 668.637 cv
324.13 668.637 li
324.13 668.637 li
324.13 670.293 322.787 671.636 321.13 671.636 cv
2099.38 655.888 mo
2099.38 655.888 li
2099.38 653.987 li
2100.28 653.468 2100.88 652.499 2100.88 651.388 cv
2100.88 609.388 li
2100.88 608.948 2100.79 608.53 2100.61 608.154 cv
2101.66 608.624 2102.38 609.672 2102.38 610.888 cv
2102.38 652.888 li
2102.38 654.545 2101.04 655.888 2099.38 655.888 cv
277.63 611.232 mo
277.089 610.919 276.654 610.441 276.395 609.868 cv
276.772 610.038 277.19 610.133 277.63 610.133 cv
277.63 611.232 li
2099.38 583.888 mo
2099.38 583.888 li
2099.38 581.987 li
2100.28 581.468 2100.88 580.499 2100.88 579.388 cv
2100.88 578.948 2100.79 578.53 2100.62 578.154 cv
2101.66 578.625 2102.38 579.672 2102.38 580.888 cv
2102.38 582.545 2101.04 583.888 2099.38 583.888 cv
277.63 581.232 mo
277.089 580.919 276.655 580.442 276.395 579.868 cv
276.772 580.039 277.19 580.133 277.63 580.133 cv
277.63 581.232 li
2099.38 553.888 mo
2099.38 553.888 li
2099.38 551.987 li
2100.28 551.468 2100.88 550.499 2100.88 549.388 cv
2100.88 507.388 li
2100.88 506.948 2100.79 506.53 2100.61 506.153 cv
2101.66 506.624 2102.38 507.672 2102.38 508.888 cv
2102.38 550.888 li
2102.38 552.545 2101.04 553.888 2099.38 553.888 cv
277.63 509.232 mo
277.089 508.919 276.655 508.442 276.395 507.868 cv
276.772 508.039 277.19 508.134 277.63 508.134 cv
277.63 509.232 li
2099.38 481.888 mo
2099.38 481.888 li
2099.38 479.987 li
2100.28 479.468 2100.88 478.498 2100.88 477.388 cv
2100.88 476.948 2100.79 476.53 2100.62 476.154 cv
2101.66 476.625 2102.38 477.672 2102.38 478.888 cv
2102.38 480.545 2101.04 481.888 2099.38 481.888 cv
277.63 479.232 mo
277.089 478.919 276.654 478.441 276.395 477.868 cv
276.772 478.038 277.19 478.133 277.63 478.133 cv
277.63 479.232 li
2099.38 451.888 mo
2099.38 451.888 li
2099.38 449.987 li
2100.28 449.468 2100.88 448.499 2100.88 447.388 cv
2100.88 405.388 li
2100.88 404.948 2100.79 404.53 2100.62 404.154 cv
2101.66 404.625 2102.38 405.672 2102.38 406.888 cv
2102.38 448.889 li
2102.38 450.545 2101.04 451.888 2099.38 451.888 cv
277.63 407.232 mo
277.089 406.919 276.655 406.442 276.395 405.868 cv
276.772 406.039 277.19 406.133 277.63 406.133 cv
277.63 407.232 li
2099.38 379.888 mo
2099.38 379.888 li
2099.38 377.987 li
2100.28 377.468 2100.88 376.498 2100.88 375.388 cv
2100.88 374.948 2100.79 374.53 2100.61 374.153 cv
2101.66 374.624 2102.38 375.672 2102.38 376.888 cv
2102.38 378.545 2101.04 379.888 2099.38 379.888 cv
277.63 377.232 mo
277.089 376.919 276.654 376.441 276.395 375.868 cv
276.772 376.038 277.19 376.133 277.63 376.133 cv
277.63 377.232 li
2099.38 349.888 mo
2099.38 349.888 li
2099.38 347.986 li
2100.28 347.468 2100.88 346.498 2100.88 345.388 cv
2100.88 330.387 li
2100.88 329.96 2100.79 329.539 2100.61 329.153 cv
2100.94 329.302 2101.24 329.508 2101.5 329.765 cv
2102.06 330.324 2102.38 331.097 2102.38 331.886 cv
2102.38 346.888 li
2102.38 348.545 2101.04 349.888 2099.38 349.888 cv
2044.98 330.387 mo
2043.88 330.387 li
2043.88 329.946 2043.79 329.528 2043.62 329.151 cv
2044.19 329.411 2044.67 329.845 2044.98 330.387 cv
2014.98 330.387 mo
2013.88 330.387 li
2013.88 329.946 2013.79 329.528 2013.62 329.151 cv
2014.19 329.411 2014.67 329.845 2014.98 330.387 cv
1942.98 330.387 mo
1941.88 330.387 li
1941.88 329.946 1941.79 329.528 1941.62 329.151 cv
1942.19 329.411 1942.67 329.845 1942.98 330.387 cv
1912.98 330.387 mo
1911.88 330.387 li
1911.88 329.946 1911.79 329.528 1911.62 329.152 cv
1912.19 329.411 1912.67 329.845 1912.98 330.387 cv
1840.98 330.387 mo
1839.88 330.387 li
1839.88 329.946 1839.79 329.528 1839.62 329.151 cv
1840.19 329.411 1840.67 329.845 1840.98 330.387 cv
1810.98 330.387 mo
1809.88 330.387 li
1809.88 329.946 1809.79 329.528 1809.62 329.151 cv
1810.19 329.411 1810.67 329.845 1810.98 330.387 cv
1738.98 330.387 mo
1737.88 330.387 li
1737.88 329.946 1737.79 329.528 1737.62 329.152 cv
1738.19 329.411 1738.67 329.845 1738.98 330.387 cv
1708.98 330.387 mo
1707.88 330.387 li
1707.88 329.946 1707.79 329.528 1707.62 329.151 cv
1708.19 329.411 1708.67 329.845 1708.98 330.387 cv
1636.98 330.387 mo
1635.88 330.387 li
1635.88 329.946 1635.79 329.528 1635.62 329.151 cv
1636.19 329.411 1636.67 329.845 1636.98 330.387 cv
1606.98 330.387 mo
1605.88 330.387 li
1605.88 329.946 1605.79 329.528 1605.62 329.152 cv
1606.19 329.411 1606.67 329.845 1606.98 330.387 cv
1534.98 330.387 mo
1533.88 330.387 li
1533.88 329.946 1533.79 329.528 1533.62 329.151 cv
1534.19 329.411 1534.67 329.845 1534.98 330.387 cv
1504.98 330.387 mo
1503.88 330.387 li
1503.88 329.946 1503.79 329.528 1503.62 329.152 cv
1504.19 329.411 1504.67 329.845 1504.98 330.387 cv
1432.98 330.387 mo
1431.88 330.387 li
1431.88 329.946 1431.79 329.528 1431.62 329.151 cv
1432.19 329.411 1432.67 329.845 1432.98 330.387 cv
1402.98 330.387 mo
1401.88 330.387 li
1401.88 329.946 1401.79 329.528 1401.62 329.151 cv
1402.19 329.411 1402.67 329.845 1402.98 330.387 cv
1330.98 330.387 mo
1329.88 330.387 li
1329.88 329.946 1329.79 329.528 1329.62 329.151 cv
1330.19 329.411 1330.67 329.845 1330.98 330.387 cv
1300.98 330.387 mo
1299.88 330.387 li
1299.88 329.946 1299.79 329.528 1299.62 329.152 cv
1300.19 329.411 1300.67 329.845 1300.98 330.387 cv
1228.98 330.387 mo
1227.88 330.387 li
1227.88 329.946 1227.79 329.528 1227.62 329.152 cv
1228.19 329.411 1228.67 329.845 1228.98 330.387 cv
1198.98 330.387 mo
1197.88 330.387 li
1197.88 329.946 1197.79 329.528 1197.62 329.151 cv
1198.19 329.411 1198.67 329.845 1198.98 330.387 cv
1126.98 330.387 mo
1125.88 330.387 li
1125.88 329.946 1125.79 329.528 1125.62 329.151 cv
1126.19 329.411 1126.67 329.845 1126.98 330.387 cv
1096.98 330.387 mo
1095.88 330.387 li
1095.88 329.946 1095.79 329.528 1095.62 329.152 cv
1096.19 329.411 1096.67 329.845 1096.98 330.387 cv
1024.98 330.387 mo
1023.88 330.387 li
1023.88 329.946 1023.79 329.528 1023.62 329.152 cv
1024.19 329.411 1024.67 329.845 1024.98 330.387 cv
994.981 330.387 mo
993.882 330.387 li
993.882 329.946 993.787 329.528 993.617 329.151 cv
994.19 329.411 994.668 329.845 994.981 330.387 cv
922.981 330.387 mo
921.882 330.387 li
921.882 329.946 921.787 329.528 921.617 329.151 cv
922.19 329.411 922.668 329.845 922.981 330.387 cv
892.981 330.387 mo
891.883 330.387 li
891.883 329.946 891.788 329.528 891.617 329.152 cv
892.191 329.411 892.668 329.845 892.981 330.387 cv
820.981 330.387 mo
819.883 330.387 li
819.883 329.946 819.788 329.528 819.617 329.152 cv
820.191 329.411 820.668 329.845 820.981 330.387 cv
790.981 330.387 mo
789.882 330.387 li
789.882 329.946 789.787 329.528 789.617 329.151 cv
790.191 329.411 790.668 329.845 790.981 330.387 cv
718.981 330.387 mo
717.882 330.387 li
717.882 329.946 717.788 329.528 717.617 329.151 cv
718.191 329.411 718.668 329.845 718.981 330.387 cv
688.981 330.387 mo
687.883 330.387 li
687.883 329.946 687.788 329.528 687.618 329.152 cv
688.191 329.411 688.668 329.845 688.981 330.387 cv
616.981 330.387 mo
615.883 330.387 li
615.883 329.946 615.788 329.528 615.618 329.151 cv
616.191 329.411 616.668 329.845 616.981 330.387 cv
586.982 330.387 mo
585.883 330.387 li
585.883 329.946 585.788 329.528 585.617 329.151 cv
586.191 329.411 586.668 329.845 586.982 330.387 cv
514.982 330.387 mo
513.883 330.387 li
513.883 329.946 513.788 329.528 513.617 329.151 cv
514.191 329.411 514.668 329.845 514.982 330.387 cv
484.981 330.387 mo
483.883 330.387 li
483.883 329.946 483.788 329.528 483.618 329.152 cv
484.191 329.411 484.668 329.845 484.981 330.387 cv
412.981 330.387 mo
411.883 330.387 li
411.883 329.946 411.788 329.528 411.618 329.152 cv
412.191 329.411 412.668 329.845 412.981 330.387 cv
382.982 330.387 mo
381.883 330.387 li
381.883 329.946 381.788 329.528 381.618 329.151 cv
382.191 329.411 382.669 329.845 382.982 330.387 cv
310.982 330.387 mo
309.883 330.387 li
309.883 329.946 309.788 329.528 309.618 329.151 cv
310.191 329.411 310.669 329.845 310.982 330.387 cv
281.118 330.387 mo
280.536 330.387 li
280.493 330.218 280.435 330.054 280.365 329.898 cv
280.64 330.023 280.894 330.188 281.118 330.387 cv
f
grestore
277.63 667.136 mo
2097.88 667.136 li
2097.88 330.387 li
277.63 330.387 li
277.63 667.136 li
.216617 .223056 .0440375 0 cmyk
ef
349.63 664.136 mo
351.287 664.136 352.629 665.48 352.629 667.136 cv
352.629 668.793 351.287 670.136 349.63 670.136 cv
347.973 670.136 346.63 668.793 346.63 667.136 cv
346.63 665.48 347.973 664.136 349.63 664.136 cv
379.63 664.136 mo
421.63 664.136 li
423.287 664.136 424.63 665.48 424.63 667.136 cv
424.63 668.793 423.287 670.136 421.63 670.136 cv
379.63 670.136 li
377.973 670.136 376.629 668.793 376.629 667.136 cv
376.629 665.48 377.973 664.136 379.63 664.136 cv
451.63 664.136 mo
453.286 664.136 454.63 665.48 454.63 667.136 cv
454.63 668.793 453.286 670.136 451.63 670.136 cv
449.973 670.136 448.63 668.793 448.63 667.136 cv
448.63 665.48 449.973 664.136 451.63 664.136 cv
481.629 664.136 mo
523.63 664.136 li
525.286 664.136 526.63 665.48 526.63 667.136 cv
526.63 668.793 525.286 670.136 523.63 670.136 cv
481.629 670.136 li
479.973 670.136 478.63 668.793 478.63 667.136 cv
478.63 665.48 479.973 664.136 481.629 664.136 cv
553.63 664.136 mo
555.287 664.136 556.63 665.48 556.63 667.136 cv
556.63 668.793 555.287 670.136 553.63 670.136 cv
551.973 670.136 550.63 668.793 550.63 667.136 cv
550.63 665.48 551.973 664.136 553.63 664.136 cv
583.63 664.136 mo
625.63 664.136 li
627.286 664.136 628.63 665.48 628.63 667.136 cv
628.63 668.793 627.286 670.136 625.63 670.136 cv
583.63 670.136 li
581.973 670.136 580.63 668.793 580.63 667.136 cv
580.63 665.48 581.973 664.136 583.63 664.136 cv
655.63 664.136 mo
657.287 664.136 658.629 665.48 658.629 667.136 cv
658.629 668.793 657.287 670.136 655.63 670.136 cv
653.973 670.136 652.63 668.793 652.63 667.136 cv
652.63 665.48 653.973 664.136 655.63 664.136 cv
685.63 664.136 mo
727.63 664.136 li
729.287 664.136 730.63 665.48 730.63 667.136 cv
730.63 668.793 729.287 670.136 727.63 670.136 cv
685.63 670.136 li
683.973 670.136 682.629 668.793 682.629 667.136 cv
682.629 665.48 683.973 664.136 685.63 664.136 cv
757.63 664.136 mo
759.286 664.136 760.63 665.48 760.63 667.136 cv
760.63 668.793 759.286 670.136 757.63 670.136 cv
755.973 670.136 754.63 668.793 754.63 667.136 cv
754.63 665.48 755.973 664.136 757.63 664.136 cv
787.629 664.136 mo
829.63 664.136 li
831.286 664.136 832.63 665.48 832.63 667.136 cv
832.63 668.793 831.286 670.136 829.63 670.136 cv
787.629 670.136 li
785.973 670.136 784.63 668.793 784.63 667.136 cv
784.63 665.48 785.973 664.136 787.629 664.136 cv
859.629 664.136 mo
861.287 664.136 862.63 665.48 862.63 667.136 cv
862.63 668.793 861.287 670.136 859.629 670.136 cv
857.973 670.136 856.63 668.793 856.63 667.136 cv
856.63 665.48 857.973 664.136 859.629 664.136 cv
889.63 664.136 mo
931.629 664.136 li
933.286 664.136 934.63 665.48 934.63 667.136 cv
934.63 668.793 933.286 670.136 931.629 670.136 cv
889.63 670.136 li
887.972 670.136 886.63 668.793 886.63 667.136 cv
886.63 665.48 887.972 664.136 889.63 664.136 cv
961.63 664.136 mo
963.286 664.136 964.629 665.48 964.629 667.136 cv
964.629 668.793 963.286 670.136 961.63 670.136 cv
959.972 670.136 958.63 668.793 958.63 667.136 cv
958.63 665.48 959.972 664.136 961.63 664.136 cv
991.63 664.136 mo
1033.63 664.136 li
1035.29 664.136 1036.63 665.48 1036.63 667.136 cv
1036.63 668.793 1035.29 670.136 1033.63 670.136 cv
991.63 670.136 li
989.973 670.136 988.629 668.793 988.629 667.136 cv
988.629 665.48 989.973 664.136 991.63 664.136 cv
1063.63 664.136 mo
1065.29 664.136 1066.63 665.48 1066.63 667.136 cv
1066.63 668.793 1065.29 670.136 1063.63 670.136 cv
1061.97 670.136 1060.63 668.793 1060.63 667.136 cv
1060.63 665.48 1061.97 664.136 1063.63 664.136 cv
1093.63 664.136 mo
1135.63 664.136 li
1137.29 664.136 1138.63 665.48 1138.63 667.136 cv
1138.63 668.793 1137.29 670.136 1135.63 670.136 cv
1093.63 670.136 li
1091.97 670.136 1090.63 668.793 1090.63 667.136 cv
1090.63 665.48 1091.97 664.136 1093.63 664.136 cv
1165.63 664.136 mo
1167.29 664.136 1168.63 665.48 1168.63 667.136 cv
1168.63 668.793 1167.29 670.136 1165.63 670.136 cv
1163.97 670.136 1162.63 668.793 1162.63 667.136 cv
1162.63 665.48 1163.97 664.136 1165.63 664.136 cv
1195.63 664.136 mo
1237.63 664.136 li
1239.29 664.136 1240.63 665.48 1240.63 667.136 cv
1240.63 668.793 1239.29 670.136 1237.63 670.136 cv
1195.63 670.136 li
1193.97 670.136 1192.63 668.793 1192.63 667.136 cv
1192.63 665.48 1193.97 664.136 1195.63 664.136 cv
1267.63 664.136 mo
1269.29 664.136 1270.63 665.48 1270.63 667.136 cv
1270.63 668.793 1269.29 670.136 1267.63 670.136 cv
1265.97 670.136 1264.63 668.793 1264.63 667.136 cv
1264.63 665.48 1265.97 664.136 1267.63 664.136 cv
1297.63 664.136 mo
1339.63 664.136 li
1341.29 664.136 1342.63 665.48 1342.63 667.136 cv
1342.63 668.793 1341.29 670.136 1339.63 670.136 cv
1297.63 670.136 li
1295.97 670.136 1294.63 668.793 1294.63 667.136 cv
1294.63 665.48 1295.97 664.136 1297.63 664.136 cv
1369.63 664.136 mo
1371.29 664.136 1372.63 665.48 1372.63 667.136 cv
1372.63 668.793 1371.29 670.136 1369.63 670.136 cv
1367.97 670.136 1366.63 668.793 1366.63 667.136 cv
1366.63 665.48 1367.97 664.136 1369.63 664.136 cv
1399.63 664.136 mo
1441.63 664.136 li
1443.29 664.136 1444.63 665.48 1444.63 667.136 cv
1444.63 668.793 1443.29 670.136 1441.63 670.136 cv
1399.63 670.136 li
1397.97 670.136 1396.63 668.793 1396.63 667.136 cv
1396.63 665.48 1397.97 664.136 1399.63 664.136 cv
1471.63 664.136 mo
1473.29 664.136 1474.63 665.48 1474.63 667.136 cv
1474.63 668.793 1473.29 670.136 1471.63 670.136 cv
1469.97 670.136 1468.63 668.793 1468.63 667.136 cv
1468.63 665.48 1469.97 664.136 1471.63 664.136 cv
1501.63 664.136 mo
1543.63 664.136 li
1545.29 664.136 1546.63 665.48 1546.63 667.136 cv
1546.63 668.793 1545.29 670.136 1543.63 670.136 cv
1501.63 670.136 li
1499.97 670.136 1498.63 668.793 1498.63 667.136 cv
1498.63 665.48 1499.97 664.136 1501.63 664.136 cv
1573.63 664.136 mo
1575.29 664.136 1576.63 665.48 1576.63 667.136 cv
1576.63 668.793 1575.29 670.136 1573.63 670.136 cv
1571.97 670.136 1570.63 668.793 1570.63 667.136 cv
1570.63 665.48 1571.97 664.136 1573.63 664.136 cv
1603.63 664.136 mo
1645.63 664.136 li
1647.29 664.136 1648.63 665.48 1648.63 667.136 cv
1648.63 668.793 1647.29 670.136 1645.63 670.136 cv
1603.63 670.136 li
1601.97 670.136 1600.63 668.793 1600.63 667.136 cv
1600.63 665.48 1601.97 664.136 1603.63 664.136 cv
1675.63 664.136 mo
1677.29 664.136 1678.63 665.48 1678.63 667.136 cv
1678.63 668.793 1677.29 670.136 1675.63 670.136 cv
1673.97 670.136 1672.63 668.793 1672.63 667.136 cv
1672.63 665.48 1673.97 664.136 1675.63 664.136 cv
1705.63 664.136 mo
1747.63 664.136 li
1749.29 664.136 1750.63 665.48 1750.63 667.136 cv
1750.63 668.793 1749.29 670.136 1747.63 670.136 cv
1705.63 670.136 li
1703.97 670.136 1702.63 668.793 1702.63 667.136 cv
1702.63 665.48 1703.97 664.136 1705.63 664.136 cv
1777.63 664.136 mo
1779.29 664.136 1780.63 665.48 1780.63 667.136 cv
1780.63 668.793 1779.29 670.136 1777.63 670.136 cv
1775.97 670.136 1774.63 668.793 1774.63 667.136 cv
1774.63 665.48 1775.97 664.136 1777.63 664.136 cv
1807.63 664.136 mo
1849.63 664.136 li
1851.29 664.136 1852.63 665.48 1852.63 667.136 cv
1852.63 668.793 1851.29 670.136 1849.63 670.136 cv
1807.63 670.136 li
1805.97 670.136 1804.63 668.793 1804.63 667.136 cv
1804.63 665.48 1805.97 664.136 1807.63 664.136 cv
1879.63 664.136 mo
1881.29 664.136 1882.63 665.48 1882.63 667.136 cv
1882.63 668.793 1881.29 670.136 1879.63 670.136 cv
1877.97 670.136 1876.63 668.793 1876.63 667.136 cv
1876.63 665.48 1877.97 664.136 1879.63 664.136 cv
1909.63 664.136 mo
1951.63 664.136 li
1953.28 664.136 1954.63 665.48 1954.63 667.136 cv
1954.63 668.793 1953.28 670.136 1951.63 670.136 cv
1909.63 670.136 li
1907.97 670.136 1906.63 668.793 1906.63 667.136 cv
1906.63 665.48 1907.97 664.136 1909.63 664.136 cv
1981.63 664.136 mo
1983.28 664.136 1984.63 665.48 1984.63 667.136 cv
1984.63 668.793 1983.28 670.136 1981.63 670.136 cv
1979.97 670.136 1978.63 668.793 1978.63 667.136 cv
1978.63 665.48 1979.97 664.136 1981.63 664.136 cv
2011.63 664.136 mo
2053.63 664.136 li
2055.29 664.136 2056.63 665.48 2056.63 667.136 cv
2056.63 668.793 2055.29 670.136 2053.63 670.136 cv
2011.63 670.136 li
2009.97 670.136 2008.63 668.793 2008.63 667.136 cv
2008.63 665.48 2009.97 664.136 2011.63 664.136 cv
2083.63 664.136 mo
2085.28 664.136 2086.63 665.48 2086.63 667.136 cv
2086.63 668.793 2085.28 670.136 2083.63 670.136 cv
2081.97 670.136 2080.63 668.793 2080.63 667.136 cv
2080.63 665.48 2081.97 664.136 2083.63 664.136 cv
2094.88 651.388 mo
2094.88 609.388 li
2094.88 607.731 2096.22 606.388 2097.88 606.388 cv
2099.54 606.388 2100.88 607.731 2100.88 609.388 cv
2100.88 651.388 li
2100.88 653.045 2099.54 654.389 2097.88 654.389 cv
2096.22 654.389 2094.88 653.045 2094.88 651.388 cv
2094.88 579.388 mo
2094.88 577.732 2096.22 576.388 2097.88 576.388 cv
2099.54 576.388 2100.88 577.732 2100.88 579.388 cv
2100.88 581.045 2099.54 582.388 2097.88 582.388 cv
2096.22 582.388 2094.88 581.045 2094.88 579.388 cv
2094.88 549.388 mo
2094.88 507.388 li
2094.88 505.732 2096.22 504.388 2097.88 504.388 cv
2099.54 504.388 2100.88 505.732 2100.88 507.388 cv
2100.88 549.388 li
2100.88 551.045 2099.54 552.388 2097.88 552.388 cv
2096.22 552.388 2094.88 551.045 2094.88 549.388 cv
2094.88 477.388 mo
2094.88 475.731 2096.22 474.388 2097.88 474.388 cv
2099.54 474.388 2100.88 475.731 2100.88 477.388 cv
2100.88 479.045 2099.54 480.388 2097.88 480.388 cv
2096.22 480.388 2094.88 479.045 2094.88 477.388 cv
2094.88 447.388 mo
2094.88 405.388 li
2094.88 403.731 2096.22 402.388 2097.88 402.388 cv
2099.54 402.388 2100.88 403.731 2100.88 405.388 cv
2100.88 447.388 li
2100.88 449.045 2099.54 450.388 2097.88 450.388 cv
2096.22 450.388 2094.88 449.045 2094.88 447.388 cv
2094.88 375.388 mo
2094.88 373.731 2096.22 372.389 2097.88 372.389 cv
2099.54 372.389 2100.88 373.731 2100.88 375.388 cv
2100.88 377.045 2099.54 378.388 2097.88 378.388 cv
2096.22 378.388 2094.88 377.045 2094.88 375.388 cv
2094.88 345.388 mo
2094.88 333.386 li
2070.88 333.386 li
2069.22 333.386 2067.88 332.044 2067.88 330.387 cv
2067.88 328.729 2069.22 327.386 2070.88 327.386 cv
2097.88 327.387 li
2098.67 327.387 2099.44 327.707 2100 328.265 cv
2100.56 328.824 2100.88 329.596 2100.88 330.387 cv
2100.88 345.388 li
2100.88 347.045 2099.54 348.388 2097.88 348.388 cv
2096.22 348.388 2094.88 347.045 2094.88 345.388 cv
2040.88 333.386 mo
2039.22 333.386 2037.88 332.044 2037.88 330.387 cv
2037.88 328.729 2039.22 327.387 2040.88 327.387 cv
2042.54 327.387 2043.88 328.729 2043.88 330.387 cv
2043.88 332.044 2042.54 333.386 2040.88 333.386 cv
2010.88 333.386 mo
1968.88 333.386 li
1967.22 333.386 1965.88 332.044 1965.88 330.387 cv
1965.88 328.729 1967.22 327.387 1968.88 327.387 cv
2010.88 327.387 li
2012.54 327.387 2013.88 328.729 2013.88 330.387 cv
2013.88 332.044 2012.54 333.386 2010.88 333.386 cv
1938.88 333.386 mo
1937.22 333.386 1935.88 332.044 1935.88 330.387 cv
1935.88 328.729 1937.22 327.387 1938.88 327.387 cv
1940.54 327.387 1941.88 328.729 1941.88 330.387 cv
1941.88 332.044 1940.54 333.386 1938.88 333.386 cv
1908.88 333.386 mo
1866.88 333.386 li
1865.22 333.386 1863.88 332.044 1863.88 330.387 cv
1863.88 328.729 1865.22 327.387 1866.88 327.387 cv
1908.88 327.387 li
1910.54 327.387 1911.88 328.729 1911.88 330.387 cv
1911.88 332.044 1910.54 333.386 1908.88 333.386 cv
1836.88 333.386 mo
1835.22 333.386 1833.88 332.044 1833.88 330.387 cv
1833.88 328.729 1835.22 327.387 1836.88 327.387 cv
1838.54 327.387 1839.88 328.729 1839.88 330.387 cv
1839.88 332.044 1838.54 333.386 1836.88 333.386 cv
1806.88 333.386 mo
1764.88 333.386 li
1763.22 333.386 1761.88 332.044 1761.88 330.387 cv
1761.88 328.729 1763.22 327.387 1764.88 327.387 cv
1806.88 327.387 li
1808.54 327.387 1809.88 328.729 1809.88 330.387 cv
1809.88 332.044 1808.54 333.386 1806.88 333.386 cv
1734.88 333.386 mo
1733.22 333.386 1731.88 332.044 1731.88 330.387 cv
1731.88 328.729 1733.22 327.387 1734.88 327.387 cv
1736.54 327.387 1737.88 328.729 1737.88 330.387 cv
1737.88 332.044 1736.54 333.386 1734.88 333.386 cv
1704.88 333.386 mo
1662.88 333.386 li
1661.22 333.386 1659.88 332.044 1659.88 330.387 cv
1659.88 328.729 1661.22 327.387 1662.88 327.387 cv
1704.88 327.387 li
1706.54 327.387 1707.88 328.729 1707.88 330.387 cv
1707.88 332.044 1706.54 333.386 1704.88 333.386 cv
1632.88 333.386 mo
1631.22 333.386 1629.88 332.044 1629.88 330.387 cv
1629.88 328.729 1631.22 327.387 1632.88 327.387 cv
1634.54 327.387 1635.88 328.729 1635.88 330.387 cv
1635.88 332.044 1634.54 333.386 1632.88 333.386 cv
1602.88 333.386 mo
1560.88 333.386 li
1559.22 333.386 1557.88 332.044 1557.88 330.387 cv
1557.88 328.729 1559.22 327.387 1560.88 327.387 cv
1602.88 327.387 li
1604.54 327.387 1605.88 328.729 1605.88 330.387 cv
1605.88 332.044 1604.54 333.386 1602.88 333.386 cv
1530.88 333.386 mo
1529.22 333.386 1527.88 332.044 1527.88 330.387 cv
1527.88 328.729 1529.22 327.387 1530.88 327.387 cv
1532.54 327.387 1533.88 328.729 1533.88 330.387 cv
1533.88 332.044 1532.54 333.386 1530.88 333.386 cv
1500.88 333.386 mo
1458.88 333.386 li
1457.23 333.386 1455.88 332.044 1455.88 330.387 cv
1455.88 328.729 1457.23 327.387 1458.88 327.387 cv
1500.88 327.387 li
1502.54 327.387 1503.88 328.729 1503.88 330.387 cv
1503.88 332.044 1502.54 333.386 1500.88 333.386 cv
1428.88 333.386 mo
1427.22 333.386 1425.88 332.044 1425.88 330.387 cv
1425.88 328.729 1427.22 327.387 1428.88 327.387 cv
1430.54 327.387 1431.88 328.729 1431.88 330.387 cv
1431.88 332.044 1430.54 333.386 1428.88 333.386 cv
1398.88 333.386 mo
1356.88 333.386 li
1355.22 333.386 1353.88 332.044 1353.88 330.387 cv
1353.88 328.729 1355.22 327.387 1356.88 327.387 cv
1398.88 327.387 li
1400.54 327.387 1401.88 328.729 1401.88 330.387 cv
1401.88 332.044 1400.54 333.386 1398.88 333.386 cv
1326.88 333.386 mo
1325.22 333.386 1323.88 332.044 1323.88 330.387 cv
1323.88 328.729 1325.22 327.387 1326.88 327.387 cv
1328.54 327.387 1329.88 328.729 1329.88 330.387 cv
1329.88 332.044 1328.54 333.386 1326.88 333.386 cv
1296.88 333.386 mo
1254.88 333.386 li
1253.22 333.386 1251.88 332.044 1251.88 330.387 cv
1251.88 328.729 1253.22 327.387 1254.88 327.387 cv
1296.88 327.387 li
1298.54 327.387 1299.88 328.729 1299.88 330.387 cv
1299.88 332.044 1298.54 333.386 1296.88 333.386 cv
1224.88 333.386 mo
1223.22 333.386 1221.88 332.044 1221.88 330.387 cv
1221.88 328.729 1223.22 327.387 1224.88 327.387 cv
1226.54 327.387 1227.88 328.729 1227.88 330.387 cv
1227.88 332.044 1226.54 333.386 1224.88 333.386 cv
1194.88 333.386 mo
1152.88 333.386 li
1151.23 333.386 1149.88 332.044 1149.88 330.387 cv
1149.88 328.729 1151.23 327.387 1152.88 327.387 cv
1194.88 327.387 li
1196.54 327.387 1197.88 328.729 1197.88 330.387 cv
1197.88 332.044 1196.54 333.386 1194.88 333.386 cv
1122.88 333.386 mo
1121.22 333.386 1119.88 332.044 1119.88 330.387 cv
1119.88 328.729 1121.22 327.387 1122.88 327.387 cv
1124.54 327.387 1125.88 328.729 1125.88 330.387 cv
1125.88 332.044 1124.54 333.386 1122.88 333.386 cv
1092.88 333.386 mo
1050.88 333.386 li
1049.22 333.386 1047.88 332.044 1047.88 330.387 cv
1047.88 328.729 1049.22 327.387 1050.88 327.387 cv
1092.88 327.387 li
1094.54 327.387 1095.88 328.729 1095.88 330.387 cv
1095.88 332.044 1094.54 333.386 1092.88 333.386 cv
1020.88 333.386 mo
1019.23 333.386 1017.88 332.044 1017.88 330.387 cv
1017.88 328.729 1019.23 327.387 1020.88 327.387 cv
1022.54 327.387 1023.88 328.729 1023.88 330.387 cv
1023.88 332.044 1022.54 333.386 1020.88 333.386 cv
990.882 333.386 mo
948.882 333.386 li
947.225 333.386 945.882 332.044 945.882 330.387 cv
945.882 328.729 947.225 327.387 948.882 327.387 cv
990.882 327.387 li
992.539 327.387 993.882 328.729 993.882 330.387 cv
993.882 332.044 992.539 333.386 990.882 333.386 cv
918.882 333.386 mo
917.225 333.386 915.882 332.044 915.882 330.387 cv
915.882 328.729 917.225 327.387 918.882 327.387 cv
920.539 327.387 921.882 328.729 921.882 330.387 cv
921.882 332.044 920.539 333.386 918.882 333.386 cv
888.882 333.386 mo
846.882 333.386 li
845.225 333.386 843.883 332.044 843.883 330.387 cv
843.883 328.729 845.225 327.387 846.882 327.387 cv
888.882 327.387 li
890.539 327.387 891.883 328.729 891.883 330.387 cv
891.883 332.044 890.539 333.386 888.882 333.386 cv
816.882 333.386 mo
815.226 333.386 813.882 332.044 813.882 330.387 cv
813.882 328.729 815.226 327.387 816.882 327.387 cv
818.539 327.387 819.883 328.729 819.883 330.387 cv
819.883 332.044 818.539 333.386 816.882 333.386 cv
786.883 333.386 mo
744.882 333.386 li
743.226 333.386 741.882 332.044 741.882 330.387 cv
741.882 328.729 743.226 327.387 744.882 327.387 cv
786.883 327.387 li
788.539 327.387 789.882 328.729 789.882 330.387 cv
789.882 332.044 788.539 333.386 786.883 333.386 cv
714.883 333.386 mo
713.225 333.386 711.883 332.044 711.883 330.387 cv
711.883 328.729 713.225 327.387 714.883 327.387 cv
716.539 327.387 717.882 328.729 717.882 330.387 cv
717.882 332.044 716.539 333.386 714.883 333.386 cv
684.882 333.386 mo
642.883 333.386 li
641.225 333.386 639.883 332.044 639.883 330.387 cv
639.883 328.729 641.225 327.387 642.883 327.387 cv
684.882 327.387 li
686.539 327.387 687.883 328.729 687.883 330.387 cv
687.883 332.044 686.539 333.386 684.882 333.386 cv
612.882 333.386 mo
611.226 333.386 609.883 332.044 609.883 330.387 cv
609.883 328.729 611.226 327.387 612.882 327.387 cv
614.54 327.387 615.883 328.729 615.883 330.387 cv
615.883 332.044 614.54 333.386 612.882 333.386 cv
582.883 333.386 mo
540.882 333.386 li
539.226 333.386 537.883 332.044 537.883 330.387 cv
537.883 328.729 539.226 327.387 540.882 327.387 cv
582.883 327.387 li
584.539 327.387 585.883 328.729 585.883 330.387 cv
585.883 332.044 584.539 333.386 582.883 333.386 cv
510.883 333.386 mo
509.226 333.386 507.883 332.044 507.883 330.387 cv
507.883 328.729 509.226 327.387 510.883 327.387 cv
512.539 327.387 513.883 328.729 513.883 330.387 cv
513.883 332.044 512.539 333.386 510.883 333.386 cv
480.883 333.386 mo
438.883 333.386 li
437.226 333.386 435.883 332.044 435.883 330.387 cv
435.883 328.729 437.226 327.387 438.883 327.387 cv
480.883 327.387 li
482.54 327.387 483.883 328.729 483.883 330.387 cv
483.883 332.044 482.54 333.386 480.883 333.386 cv
408.883 333.386 mo
407.226 333.386 405.883 332.044 405.883 330.387 cv
405.883 328.729 407.226 327.387 408.883 327.387 cv
410.54 327.387 411.883 328.729 411.883 330.387 cv
411.883 332.044 410.54 333.386 408.883 333.386 cv
378.883 333.386 mo
336.883 333.386 li
335.226 333.386 333.883 332.044 333.883 330.387 cv
333.883 328.729 335.226 327.387 336.883 327.387 cv
378.883 327.387 li
380.54 327.387 381.883 328.729 381.883 330.387 cv
381.883 332.044 380.54 333.386 378.883 333.386 cv
306.883 333.386 mo
305.226 333.386 303.883 332.044 303.883 330.387 cv
303.883 328.729 305.226 327.387 306.883 327.387 cv
308.54 327.387 309.883 328.729 309.883 330.387 cv
309.883 332.044 308.54 333.386 306.883 333.386 cv
280.63 331.134 mo
280.63 373.133 li
280.63 374.79 279.287 376.133 277.63 376.133 cv
275.973 376.133 274.63 374.79 274.63 373.133 cv
274.63 331.134 li
274.63 329.476 275.973 328.133 277.63 328.133 cv
279.287 328.133 280.63 329.476 280.63 331.134 cv
280.63 403.133 mo
280.63 404.791 279.287 406.133 277.63 406.133 cv
275.973 406.133 274.63 404.791 274.63 403.133 cv
274.63 401.476 275.973 400.134 277.63 400.134 cv
279.287 400.134 280.63 401.476 280.63 403.133 cv
280.63 433.133 mo
280.63 475.133 li
280.63 476.791 279.287 478.133 277.63 478.133 cv
275.973 478.133 274.63 476.791 274.63 475.133 cv
274.63 433.133 li
274.63 431.477 275.973 430.133 277.63 430.133 cv
279.287 430.133 280.63 431.477 280.63 433.133 cv
280.63 505.133 mo
280.63 506.79 279.287 508.134 277.63 508.134 cv
275.973 508.134 274.63 506.79 274.63 505.133 cv
274.63 503.477 275.973 502.133 277.63 502.133 cv
279.287 502.133 280.63 503.477 280.63 505.133 cv
280.63 535.133 mo
280.63 577.133 li
280.63 578.79 279.287 580.133 277.63 580.133 cv
275.973 580.133 274.63 578.79 274.63 577.133 cv
274.63 535.133 li
274.63 533.476 275.973 532.133 277.63 532.133 cv
279.287 532.133 280.63 533.476 280.63 535.133 cv
280.63 607.133 mo
280.63 608.79 279.287 610.133 277.63 610.133 cv
275.973 610.133 274.63 608.79 274.63 607.133 cv
274.63 605.477 275.973 604.133 277.63 604.133 cv
279.287 604.133 280.63 605.477 280.63 607.133 cv
280.63 637.133 mo
280.63 664.136 li
319.63 664.136 li
321.287 664.136 322.63 665.48 322.63 667.136 cv
322.63 668.793 321.287 670.136 319.63 670.136 cv
277.63 670.137 li
276.84 670.137 276.067 669.817 275.508 669.258 cv
274.95 668.699 274.63 667.926 274.63 667.136 cv
274.63 637.133 li
274.63 635.476 275.973 634.133 277.63 634.133 cv
279.287 634.133 280.63 635.476 280.63 637.133 cv
1 .965942 .590387 .355383 cmyk
f
1968.88 289.136 mo
395.38 289.136 li
395.41 289.067 li
395.41 289.067 li
323.53 289.067 265.26 230.796 265.26 158.916 cv
265.26 87.0365 323.53 28.7667 395.41 28.7667 cv
395.38 28.8867 li
1968.88 28.8867 li
1969.13 28.7667 li
2041.01 28.7763 2099.28 87.0461 2099.28 158.927 cv
2099.28 230.796 2041.01 289.067 1969.13 289.067 cv
1968.88 289.136 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
395.41 28.7667 mo
323.53 28.7667 265.26 87.0365 265.26 158.916 cv
265.26 230.796 323.53 289.067 395.41 289.067 cv
395.38 289.136 li
1968.88 289.136 li
1969.13 289.067 li
2041.01 289.067 2099.28 230.796 2099.28 158.927 cv
2099.28 87.0461 2041.01 28.7763 1969.13 28.7667 cv
1968.88 28.8867 li
395.38 28.8867 li
395.41 28.7667 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
1968.88 292.136 mo
395.38 292.136 li
395.155 292.136 394.937 292.112 394.727 292.065 cv
358.239 291.882 325.195 277.009 301.258 253.068 cv
277.168 228.982 262.259 195.675 262.26 158.916 cv
262.259 122.157 277.168 88.8514 301.258 64.765 cv
325.343 40.676 358.65 25.7661 395.407 25.7661 cv
395.409 25.7661 395.407 25.7661 395.41 25.7661 cv
395.697 25.7661 395.98 25.8077 396.25 25.8869 cv
1968.29 25.8869 li
1968.56 25.8065 1968.84 25.7661 1969.13 25.7661 cv
2005.89 25.7701 2039.2 40.6818 2063.28 64.7738 cv
2087.37 88.861 2102.28 122.168 2102.28 158.927 cv
2102.28 195.681 2087.37 228.984 2063.28 253.069 cv
2039.28 277.072 2006.13 291.961 1969.53 292.066 cv
1969.32 292.114 1969.1 292.136 1968.88 292.136 cv
395.38 289.136 mo
395.38 289.136 li
1968.88 289.136 li
1969.13 289.067 li
2041.01 289.067 2099.28 230.796 2099.28 158.927 cv
2099.28 158.927 li
2099.28 158.927 li
2099.28 87.0461 2041.01 28.7763 1969.13 28.7667 cv
1968.88 28.8867 li
395.38 28.8867 li
395.41 28.7667 li
395.41 28.7667 li
323.53 28.7667 265.26 87.0365 265.26 158.916 cv
265.26 158.916 li
265.26 158.916 li
265.26 230.796 323.53 289.067 395.41 289.067 cv
395.38 289.136 li
f
grestore
gsave
393.88 287.636 mo
1967.38 287.636 li
1967.69 287.626 li
2039.57 287.626 2097.84 229.357 2097.84 157.486 cv
2097.84 85.6067 2039.57 27.3368 1967.69 27.3264 cv
1967.38 27.3864 li
393.88 27.3864 li
393.97 27.3264 li
322.09 27.3264 263.82 85.5962 263.82 157.477 cv
263.82 229.357 322.09 287.626 393.97 287.626 cv
393.88 287.636 li
eclp
263.07 288.376 mo
2098.59 288.376 li
2098.59 26.5764 li
263.07 26.5764 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [1333.7 2290.51 1333.7 2552.31 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!9!!!!8!!!!8!!!!8!!!!7!!!!7!!!!7!!!!6!!!!6!!!!6!!!!5!!!!5!!!!5!!!!4!!!!4!!!!4
!!!!3!!!!3!!!!2!!!!2!!!!2!!!!1!!!!1!!!!1!!!!0!!!!0!!!!0!!!!/!!!!/!!!!/!!!!.!!!!.
!!!!-!!!!-!!!!-!!!!,!!!!,!!!!+!!!!+!!!!+!!!!*!!!!*!!!!)!!!!)!!!!)!!!!(!!!!(!!!!'
!!!!'!!!!'!!!!&!!!!&!!!!%!!!!%!!!!%!!!!$!!!!$!!!!#!!!!#!!!!#!!!!"!!!!"z!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /0 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~(Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m'+toj&eYfi&eYfi
&eYcg&J5Te&J5Qc&.fBa&.fBa&.f?_%hB0]%hB0]%hB-[%LrsY%LrsY%LrpW%1NaU%1NaU%1N^S$k*OQ
$k*OP$O[=M$O[=M$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP88
"U,&5"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%zz!!!!!~>
]
>>
1333.7 2290.51 1333.7 2552.31 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/0 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
6 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
393.88 287.636 mo
1967.38 287.636 li
1967.69 287.626 li
2039.57 287.626 2097.84 229.356 2097.84 157.487 cv
2097.84 85.6064 2039.57 27.3364 1967.69 27.3264 cv
1967.38 27.3865 li
393.88 27.3865 li
393.97 27.3264 li
322.09 27.3264 263.82 85.5964 263.82 157.477 cv
263.82 229.356 322.09 287.626 393.97 287.626 cv
cp
/1 
<<
/Name (Black)
/1 
[/DeviceCMYK] /CSA add_res
/CSA /1 get_csa_by_name
/MappedCSA /1 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7A9C0DC897A849B356D31E2254DD2E5BDA9320580C3E0839C
715C00D9D27B634D4BEEF0FE1F6AD3CCFBCCE9FDE38A84A563FB744619F62FCB
F09ACBF7337FE050BE068BCA744FAC4471C4195B7CEC353B3CAECCCEC91AAE22
E8955469041D97A8837F9398CE520ABB35C688EEF4229957FD92C79439BF99D2
4AD4D8B3CAC5B975D966AB01856E8FAEAE3BEB03E1CC76DF299391134BFB02DD
61F6D73B2AAAA0D725ABCA9FE504FB3A1EC1E2449C5D921F0DE45A9278013CF0
832F39E3771D2B318D27AFF5849066ED5A64AA8E3E404B520DE5F08BE74DD8D5
8BD1B0FA461EBCBB4DC632B680CFAE62B61DD4FC04FC017D59147CB2E0FBEAAF
A402B5BFBD0C4F13F4BD9227D1353527A23B3EF7CA3E7F599CB51DDAF43A5674
78E4C81011D9D8D5DAD9CB1F948F5FCE67> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[101{/.notdef}rp /e 154{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
552.04 184.477 mo
(e)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B67B16EC17A11C9303513193038382E210A42B5CE850AFC118
B8F8E20755C8A90C95C89303B8AF97DF2083371B19301E0DB8111A384A8E035C
8C8FD179B5FF5DEE9371CE5D28447AD71E5F20621DEE2C342616335A1AAB1669
E519E232E79C4980DE37E3F1E4DCD25C4506A181A5E635190DDA595BDDE1573C
B44863FF5A83BD7D7E515B71492920EF87FE789C8908736F38EB074EA06C50C8
F913E2E6E48D5D36311F7C911CB6784E303E758C4B3B979518975255BBF01EB8
B827E2459ECECE07A833BA1FB2794232A02C9AD337BE827A573B5E9CE89F5D6E
BE26850BF2926DF1667989BD0A0C14BF6B80D7EA27888CC10DB4AF2B2A5C69A8
F8245C9A4E02EC85AC1422B48B35F04B8FEAA16155CD67FB40B03E773C1C5BCA
284053C42517C1397CDE066EE439C5025920AAC2AF0AA2792D9E710F7897AACD
F305> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[78{/.notdef}rp /N 22{/.notdef}rp /e 154{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
596.82 184.477 mo
(N)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B79B8E992413FDCA75477B9D7B9A04CD6123BB6F56A9FDECC0
0D9728A7991DA2934283AC0CEE01FC1FAAD5EB3AB0B14B54FBF8D20FFC398F59
61BF67E7A7D450EE96781B748894F7B28CFF64B6593527AFD517F2D837CA2212
7DD5B8B5DB428B5B30E96423884A9CB2092018BDE5D89DBC68D24BAE5CC3C4CA
2C637AD8EB033D5467D7A9D9BAF78FE973C94976565C5D2795A0EC3A3D0ED4B2
39AE94024C38DD5873724B970E93378B9D3D02710DDE1A505B0750256D404196
0A6F260BE121BC86BDB3FAD0FD5614281E7C400CB879F57DCE47C8620F9E0415
32988A66665B85DB89629C041308B88332F00521D970DDDCE6253C763E0D7021
6AA72D02079885B99C4A6EC9DBDE6F226727E35DA85B8B692471F60F36D72376
FBB59FD143F405DF154BEFC61E6D3D4E9DA3C9684B5A0AF0E5428EF3B3A4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[66{/.notdef}rp /B 11{/.notdef}rp /N 22{/.notdef}rp /e 154{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
654.916 184.477 mo
(B)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B888C146> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 22{/.notdef}rp /e 
154{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
703.871 184.477 mo
( )sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/b <1C60D8A8C9B78E05EA9D9733F4614DDE4F3CCBD772458631C06B9585CEC3
067196C085285D4EBCA830523DBA980A7903E7CCB9545952E933EA287D309550
0A08B5FF1250FB2472C48AA643F9948B713834174A32233FFD00CE8E2A02CD92
CD0EB36D86747ABA3C4EE4A7096B26460185FCF827CE5E1862348B87101A5C9D
384541120A40C8C71F0748956E48EF5E095EAD17FBE5B28249366E6BEAFC298E
E015C31B731D6166501448A2851B390CD5E1032DCB65F726222BA5085B034CFC
917DC36E2C73558D1FCD108B1B305D16C97136B39697A594C46D2F068CC61EBC
8B61EEBACA2E9B9971F359DB93A6910B3669C04870AE086A03B453BCE1E9F2C9
24C2B94631466A458EB1B3FD708C18C058A8B05845E2D231DD130E2BCA4DCE6C
A2C90256ED106A2B8A867758EB2E1D464AB1AA657324F30AFED658994E772592
420FD616D7BD6885B5350E3F2A59010B037CCEDD5B3D83A476690BED59BBD82D
D2D74F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 98 /b put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 19{/.notdef}rp /b 
2{/.notdef}rp /e 154{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
724.217 184.477 mo
(b)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B80F37F21112BA81A46E1A1A16E843530DEF66F6901DB9A722
A358478F1B0799F6041BFFF7D05EE602307D474F1DB84BF73C4EC1FF13A4D2D5
B370042C9A314A700782F944BCE36786AFBD72FA62259FABABA90F1F2BE008B7
993D5E1813324C60BD953524A1040FB1A790007846FA5DED6ACE6C7D436FF1C0
B97E4BBDDDA28F066E204B37F8321753E1473DDD8EE76C12A0011B04832F5C47
D3FF30EE31FE70EF82623D628622FAE52A70984ACD43F9718BC02CE5AA3F5832
FAB343FD6D53F2375C811D54E6B415E257D8BB3A2542930D7E0D6DF96FAA0688
822B6655966904164F87FA904C272BFAD51FAFF11CA14EBB5F6472235CA20889
D111211CF90F83807D99EF12B3B6827C1CA4720D03729BEEEA22A1313C4BDCE8
78453F5E6DCAD449D1F3B7D54D32C49DA0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 19{/.notdef}rp /b 
2{/.notdef}rp /e 12{/.notdef}rp /r 141{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
771.502 184.477 mo
(r)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B78C66ECF3075BCC0F7D87F2E9EA9E473D66D53E6D1735C12E
AC0562A2F6FB428E7F7051A3A7B2D4CA6ED90F77808579359B7E539B5388F6F5
4555E1422B5F329989100C1CD5239E87FECD85E14E914ADC27391A1F5624B31E
E69A68B9016D73D6A01A100E004523AC53318A2FC2260E74BA80D4ABD1433EC6
7800CC9F77763DCF8156EA5CA478ABF1FAF7864EAD55939BE7FA4A9E8660CE98
DDE8CBC35F3FFF4E5C2DA4A292CE30D82057E70A8562AFB17C90FC331A4C46B4
8C7BBCED55DB7F94D559D534C59FF211B5A85F0207876BD8D6B2C7BBBC06964A
16F72BBAE841F001B71209E6C81DC64817ADE625E8FF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 19{/.notdef}rp /b 
2{/.notdef}rp /e 9{/.notdef}rp /o 2{/.notdef}rp /r 141{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
802.879 184.477 mo
(o)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B75CBB53379352952B97D633633CE49B1F5650B8155AFDFA57
F94D359804093E4912F3B89577762AB5877203F1CDAD240C521DE74183EDA105
01967DB6487C182138B12C453C5DB9629F7EF021028117511EFEAB941896E32D
9CC68D6E66540771999A4E30C4826A52D7536EDDF7E00016C895CE43408B44BE
33E2D9A6163827E05AB8B1144BC909A74F6D7828DE6E08164A25E320920E3540
20A41D59E9E3B008A20EC107F9E18745DE21F9AF293EB0F319B529D840D8BA93
19522EDDCACA13336C059581181C082BF0D7F4117FAEB429D871E099AEE4394F
ED2FB3A1C712D1799055BA832AD846B95DA8BB4E63B103C908FA309FAA3B7814
0CE2A22AE06B2A1EA5BD3AA13DD1ED75DA4AD37493780FE662EF5D1B53C4AF41
845C0C77655CE94F0C9DEBE29248A1EAAF3A6EA79D5BB5C090457B818DD62F70
E197CEA94F90229AB4FD685A1ADB5E4E4C1DBDB28AA3854323EE2FD22692EC70> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 18{/.notdef}rp /a 
/b 2{/.notdef}rp /e 9{/.notdef}rp /o 2{/.notdef}rp /r 141{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
850.34 184.477 mo
(a)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d <1C60D8A8C9B78E05EAA3CECCCC7ABA6A35E55F211820F669BFFF2D107F3F
003F84456D947B5557966A2009812B81B51372EB70EB729C8C82B63A473DB516
1C83385AAD04B71C9D388B2F86E7C2E91E06E59E76C532F8A600B530589A218B
CA1E889366120C885033631C7850C65A7F9274D24F9BF6FA89E174B53B0E1A2C
F6D783F32D4C0BE4ACD3EEAF66A8BEC8DB7AC7ADBF3C9CDF5485D002662D310A
CCD320AD0234A2F2251E7C0B1667BFFC7E10EE40C7CB623518E3E168137CE699
E133B767C86E16CACCA64A58BD9D7F6E66BED6D6FE5D80E0381141549FFB2FBF
94ECD2D262EB097909F9092B71E3573FC9B4FD273505C685B327AE9095A2A155
45986A397AE2796BDB3888D16AF3DD82BF32621BC8C1393814540227FC926F77
872F2FAF5DD33717EB461ACFE3EE5C279294EBB5AADC09C8B10C3F2CB25CCD97
C6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 18{/.notdef}rp /a 
/b /.notdef /d /e 9{/.notdef}rp /o 2{/.notdef}rp /r 
141{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
893.45 184.477 mo
(d)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B714A578818061920CBD3BB0F0FEC7EB28869C0269DBFC0262
5554E339FA8F23FF202BF6BBA51F73386176CF41E41162B391BD65C46864E1ED
BE38C4A175836382F89D1B282918F37F6A98A1C310371E84DC05CA4D214BBF40
D0904F28663CAA2B1AF41B75D4680E3731D792C10C395648F8CE6283B6D2EA4E
A25EB0077385CC26E37C0D4F9F091C8BC196661820383DC1CFC26D318A92B139
8AE8D24532A475AF0A93A6DC660BFF9F07C9678F9C3412071B0DAC612FC7D6B5
FAE3214E7C7AB18E3145411FCE0CA8B75D2C8C25C05252A375257E1693A2B9D1
1EE377C95BA1746CBCD896C9D8284A96EC1B8BEF12D6460B6828EC26350E91CC
593B47372BD95FFBF8C2322BFC435A5494ED398AAAE3E6E4293369CDCFAC0147
8225F7C60BA6A2722907E6FF92F4B9457F52836FAB37F27C55593B43AB457EA2
91D6DE23> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 18{/.notdef}rp /a 
/b /c /d /e 9{/.notdef}rp /o 2{/.notdef}rp /r 
141{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
940.735 184.477 mo
(c)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
978.792 184.477 mo
(a)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B7347873EC11B675AA6F6B461106EA2C61A0AE571750A08267
9294B529694EFA74202690239BCD02BDE93B33BD8DE0F0F0056B04093EE6C4E8
3D6F00E22E61E0A53509E628E3614EF2EF2CA3A8502F22A560E46ED3E4AED0BF
D271CCE464114B6332D17C4A046EF74FFF1283283A642C8C06B85A0D72357B56
65CD862A8E3D30EFFEE242F88B9C12DF917A74252DB462B49970474974786963
8F8FD8E70AF4405F95B11DFD154B7101933A31068AA1E65CC021277CCB9EC0EA
A7B978A081D1A4252A6693984AAF2CEC4413666DCF8B310A71A67C6E7B1DB954
E186EA16C83551DD0516966C156876A3DE36ED7253FFBBC1504668DC98301370
300A04E6753189718288CD7EF0ED409765A888272FDB25977C8A74BC113E188B
3DF6A69F7851A7E60496291AA0B15532572787EAC7F32F09F1E72589E0E74E03
49313472D872E64E7DB78BAB05598FE04B70E52D818F2F7B0B56A5688299352E
62F16B011595A7D7701FD641BB2FCFCADB2E33263B8A208C4183E753AD5C2586
1BF542F2009EA70BB7A67B3BE61085D37469DCDCB97CB2B41A0E2B4DB3BE67C2
BA9A1482E51611AB708AAB8BC978B06758006F3287DD3A3CABA09A9F59A21B0D
386F88> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 18{/.notdef}rp /a 
/b /c /d /e 9{/.notdef}rp /o 2{/.notdef}rp /r 
/s 140{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1021.9 184.477 mo
(s)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B81D89610FFBFD2F87712D18AB3F2201A6640C86A2CD8B533C
9E9613B748962BD3321D998A13FF4A410946A55D4AE3CDBD806BF0BBD38F8435
DE762245288A30426FF012946D0E2E36D4EBD7E81C44D06926164FB6F91AA67E
EAF9AC4BC77C470E117D4634F7F90C1771292F30769DD575DD5B3F0D104730DE
CDCF41E7D59747B6A2D0EF143B06FA6BBA4F9E744BD6E4827C627C6619571415
1061BE64BA6B45A36E91B80557E1CF613697CA2B60F02790B7CBE3BBB5ABEC19
0F88D2844D8139B7D141D834706D11BA3108576C531B823977B908AC9FF80DF3
22060C351BA43A8EA770319D1AF8085E209B940EDEE1B85419EF87F01EED1C4E
0307B2BC95989AC0998A9EA8A0DFB99539E7D0B836F4EB9E9D6147AFB55082A1
E63F64D57A8E7F63465BA308FA03AEB2787221627AF8F99523DB260C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 18{/.notdef}rp /a 
/b /c /d /e 9{/.notdef}rp /o 2{/.notdef}rp /r 
/s /t 139{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1057.1 184.477 mo
(t)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1087.25 184.477 mo
( )sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B887F0644B8F9A77200B5B21E7A46843656F48CC872DF3AFB5
8D86B9B1B70DF0F8BF4F1A9D845350075385C2FAC40F64A57A633024956B42D2
D155265D68692B1DD96FCB1CFEA6F03B67B191D75D9251636A71B366F484AC7D
D61A648087A690F42FCD56728047D5F145B28180BC49A70304D616C17E08688B
C2AB34D235D029750826D6A02D57888DCAF080A15DCB2D8AE91CB7938E088D74
26B3BCAD6531F243F29763FBDE3F087E3965B6148DD52590D1BA20021D15293C
FC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 18{/.notdef}rp /a 
/b /c /d /e 3{/.notdef}rp /i 5{/.notdef}rp /o 
2{/.notdef}rp /r /s /t 139{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1107.59 184.477 mo
(i)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B78E05EAADB0123115B3BD5BA83FAABE276A1BF5A23DB55CF4
C30D8A20FB7C70B167834EB1FCB2A451DA55CBA774B9C40CA48F3B7AD8E41B3F
0C2665E2AF85619561E070ABE3E4EFEC9983825210D2A0599E48D162F3133798
2CE0D843D2D41F1F7924A343E37439CC75937984C88A0080C28B8BFBFB8F444A
FA11CBAA4BCF4C8D3087770F88F26B0A8B30E46AE29C6BF9720949C50E19D624
8BB58DE961D63651843F9B3B8EE9AA75CDE28D1F95D7703116FE7AA23945B580
8B97F9947888D114BE2523F872057145410E975A2CA83D430B49A7CAE2661901
2C2444BEBF6DC1397EFC38FADD0435CE6D4A1478744BC983827B31CF502C4487
AF1E48BBC2EB6153C1C5367B96A212BCD3FEE3B9DEC12C4E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 18{/.notdef}rp /a 
/b /c /d /e 3{/.notdef}rp /i 4{/.notdef}rp /n 
/o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1128.25 184.477 mo
(n)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B83BB8632FB1D3D91BD66E5512F6DD2CCB59074315803E2F43
0B096626F50C9126DF15B1D22935F28B97AB5D3B7DB8B1B8EC17F9868DFC8B9B
A6A909CA8727D3C9D8FCF13C3B6D5F4F33EA07DFD158F20416D4C6EEC8FD3EF1
4FC86346A94355FA1C2B6FA55C0124FFA9705858D4628EE39DA0E3A156A386DF
00613D8189EFFC0AEADC5BE3915D9C022BA6356303A46539775608C62B3D24CB
372AF4E663162E7C4ACC81D2F2C5F206BB702A5D73C1A974C0BFD7875757B79A
A73010AE51501D97B980E0F2ACE1EF1ED3F60A9C6E02B8D29057E3D98A685003
06E46C9A2B914F56A55773A150BF63B33B5E351FC714462135973FE682DBCBC0
C1B38B7A71A2F4C684D75344384C54C140B13A70313E2F4EDF68E127B4C55F26
525A530E7BB82AEC944EFDC27B6BB93FA6C499E5069AA3B6387EF0576DB7B6BE
E15BB0B269E8ACB562> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 18{/.notdef}rp /a 
/b /c /d /e /f 2{/.notdef}rp /i 4{/.notdef}rp 
/n /o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1175.53 184.477 mo
(f)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1203 184.477 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1250.46 184.477 mo
(r)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/m <1C60D8A8C9B6D24F7D3842850F4949AEB6B9100F2B78F4C8889450CED823
786FEB32A1B63E88AD56EE02413123CB64791A93EF92133FE4595DA2691E3035
F9F72C6031AE554C5E100D6D83A5170AEAC660F3CD2D2E423C32E393EEDCE69B
38CE6373F6B6777FFB71A30474298882FF21A6474EA00B23874CB701D4949FDA
B683EF52B401CF01FBFB5320858391C36D1B0A5131B6AD88B31FBA5AF7369B53
8683192205F94F973772FC0D1A80750F5CA55E65F4A8760D9FFB5A3E462EB76A
F894987A3AB123C31C6F61A2DE381C11A73194BB9FA663DEB4E0E047953FDCCB
40254C512459EA81EABD29705BEDA8917220B4CD736962EC932D0F91B2A5DC80
8623631D3854D7B6297589945BF94293721596CC4C62C71F5A8040654672D59A
8C73FC39F2C6919502A1FD8EB49A6BB72701DD42520B2F6CD223AC11A22A5CED
8614ABBE01C624D0AED39BB3AE4E8B513F61C37C6BA440280E139545B39C87A0
6867746DDC81F39BACA8E048A7276011988ACE081223D841AEA6DE2418F28BD5
9A30A454BE8DAE3786DDCC7D1BEEFB13E445F279EE7EA8CB61C194C9B25497E6
925AF3BEE4F64F897F4A57BD4C4A1E06EBC8223C35049061> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 109 /m put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 18{/.notdef}rp /a 
/b /c /d /e /f 2{/.notdef}rp /i 3{/.notdef}rp 
/m /n /o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1281.84 184.477 mo
(m)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1353.73 184.477 mo
(a)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1396.84 184.477 mo
(t)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1426.99 184.477 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1447.64 184.477 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1495.1 184.477 mo
(n)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1542.39 184.477 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1562.74 184.477 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1583.39 184.477 mo
(n)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1630.68 184.477 mo
( )sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B770DA42E8D37F1E32882D4AD6464D850106A0DE7A83B47F0E
C65143E84B8F9887D8EF560BBB7DAED9582F38B6974AE06071D74243DE04377A
9E38C603D44A0AA623BF84EDE575A39EAD4593C4B3F424F5317061A5AEF0FCBD
5198E5F9AB43FD8C228E541FA391BADB0ACDBD5FBBD08EBCA2700B6A1105DB45
395D242F8C44AC433C3725A9D5F6A91B5DF820F4E2F6E66101242BAA426ABA58
4BF91A7E8CBD825612324F28F3BB6B5F4B6A98D5678C5683C423898401C97DB6
AEBB3B08F0E49015B8C09294559F0324646775C30687BA8725A301A8E7ACA559
E180CD1BA525300AD3D8DFA8A8C34309FA6E01CA0BA9F33D60D410C3785C9A35
A4D33DC4DA697FAAF83556B3BAF038631153B21CFA05AC7F6B965B6C9DD580EC
DAA5E19D631487362428CB6C15F8951776CB9C454AE2ECDA7CED1F00599F6057
8050870FD9F672ABB02F7641BFFDFC908D98DE75282B9085EDCE585EED996ACD
325E186C6CC942676730FDB64EACBC2CC9670AC8631DB84FE5F13182767EAE21
F9BC28BA89B244DFD720C9DF35E92F57747BB59E5AF5F4663BAF9B03DC716D74
DBD0D4D1BB2703443369B43A50F5B2916833184106C2158995BEF98CEF08C3DF
5A6182> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 83 /S put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 11{/.notdef}rp /N 4{/.notdef}rp /S 
13{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp 
/i 3{/.notdef}rp /m /n /o 2{/.notdef}rp /r /s 
/t 139{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1651.02 184.477 mo
(S)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/I <1C60D8A8C9B86ED904793239D5A87846341C6685DE5ABE7704D2C21702B1
9492F988F7BDB944EF3CF61808A6DB9D1F22BBD335BB859C853102ABDC306BF0
344F58C180F59706796F6A9C1DD4450E8611E916B0A530128C4C5E0E96FFF301
F980705D57CD45F3B705E62B3216F34902178F51AC490CA8AF3698463F806A35
B46CD69D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 73 /I put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B 6{/.notdef}rp /I 4{/.notdef}rp /N 
4{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e 
/f 2{/.notdef}rp /i 3{/.notdef}rp /m /n /o 2{/.notdef}rp 
/r /s /t 139{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1692.38 184.477 mo
(I)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1715.05 184.477 mo
(B)sh
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A0860A3F41F4B5F8C84A302144D2A68052268BA33C08F1
4E9024203A43F9861DB1372AE620C85B5997156713B3D52B841947202E77B0C2
CB414A698B86ABC8A4E75821012456D5020DA227DFEF8C5D8DB95EBE919EE715
28F7186EAF21E351CBD957516793A596628548012B490542857EE9AD26B93BE0
9822488FFA92D417AEC74A1F7CD3F4086D2106FC51C85A2037F2B9A0C7F20F95
265886609863A1C5F24DF7B0A900E498DA2F78FC8847FC48711DA5F7718C543A
B1317AD922AE297322A814FAE4926A273690C557D10E81AE194D331B49C1AE8C
81F09FF9C6C0138B7CA170F398B4828657BCD8F518515EBEE88F3E7CAAF8D53D
FF51CD8B58FC43A0393FF3BAAC61C4C54BAED846AB03C5029732B46B642E71B9
F477640318C582068EEDAD42004E409178DCD37800E9D052502DD85B334EBD67
9CA70294673E8EE8A3969E138989BAAC7D6DF5921118D0D203FDC015CB80084F
99BE2DC9C90C6E2171BED79C2858C6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 15{/.notdef}rp /B 6{/.notdef}rp /I 
4{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a /b /c 
/d /e /f 2{/.notdef}rp /i 3{/.notdef}rp /m /n 
/o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1764.01 184.477 mo
(2)sh
981.129 1536.39 mo
237.13 1536.39 li
237.13 892.886 li
981.129 892.886 li
981.129 1536.39 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
237.13 892.886 mo
237.13 1536.39 li
981.129 1536.39 li
981.129 892.886 li
237.13 892.886 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
981.129 1539.39 mo
237.13 1539.39 li
237.13 1539.39 li
235.473 1539.39 234.13 1538.04 234.13 1536.39 cv
234.13 1536.39 li
234.13 1536.39 li
234.13 1536.39 li
234.13 892.886 li
234.13 892.097 234.45 891.324 235.008 890.765 cv
235.567 890.207 236.34 889.887 237.13 889.887 cv
981.129 889.887 li
981.92 889.887 982.692 890.207 983.251 890.766 cv
983.81 891.324 984.13 892.097 984.13 892.886 cv
984.13 1536.39 li
984.13 1537.18 983.81 1537.95 983.251 1538.51 cv
982.692 1539.07 981.92 1539.39 981.129 1539.39 cv
237.13 1536.39 mo
237.13 1536.39 li
981.129 1536.39 li
981.129 892.886 li
237.13 892.886 li
237.13 1536.39 li
f
grestore
gsave
235.63 1534.89 mo
979.63 1534.89 li
979.63 891.387 li
235.63 891.387 li
235.63 1534.89 li
eclp
234.73 1535.35 mo
980.32 1535.35 li
980.32 890.876 li
234.73 890.876 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [760.39 1043.54 760.39 1688.01 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!9!!!!8!!!!8!!!!8!!!!7!!!!7!!!!7!!!!6!!!!6!!!!6!!!!5!!!!5!!!!5!!!!4!!!!4!!!!4
!!!!3!!!!3!!!!2!!!!2!!!!2!!!!1!!!!1!!!!1!!!!0!!!!0!!!!0!!!!/!!!!/!!!!/!!!!.!!!!.
!!!!-!!!!-!!!!-!!!!,!!!!,!!!!+!!!!+!!!!+!!!!*!!!!*!!!!)!!!!)!!!!)!!!!(!!!!(!!!!'
!!!!'!!!!'!!!!&!!!!&!!!!%!!!!%!!!!%!!!!$!!!!$!!!!#!!!!#!!!!#!!!!"!!!!"z!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /1 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~(Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m'+toj&eYfi&eYfi
&eYcg&J5Te&J5Qc&.fBa&.fBa&.f?_%hB0]%hB0]%hB-[%LrsY%LrsY%LrpW%1NaU%1NaU%1N^S$k*OQ
$k*OP$O[=M$O[=M$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP88
"U,&5"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%zz!!!!!~>
]
>>
760.39 1043.54 760.39 1688.01 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/1 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
235.63 1534.89 mo
979.63 1534.89 li
979.63 891.386 li
235.63 891.386 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/D <1C60D8A8C9B7D4743405E233890E0A55534F43CA9133B29299791AB3DBBE
2A168EA78A7CB17DB0B060289D007AE138DDD7A874C20C0D1520156DF13FACE4
9220AECA91409AE8B52232B88DA851C2DCC83FF3926F0A798122A50015C04B7E
00C749CF9804781F643848BCD8EE92B57CB757A23284ECD5E56D8CA18327E984
54C09854624F1CB0E6F9646D20C4617F03B71EB8405F3505A5816E6439DF15D9
1294CE077BD16B66305872E9E54213ED4B2F> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 68 /D put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 15{/.notdef}rp /B /.notdef /D 
4{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a 
/b /c /d /e /f 2{/.notdef}rp /i 3{/.notdef}rp 
/m /n /o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
334.44 1045.12 mo
(D)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
383.658 1045.12 mo
(e)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/v <1C60D8A8C9B77771B09AD302B4CB2C18543FBB2E7E6342969838CF2C3340
35065E921A40A75882974808107F0F5C3AC1CD7A10BA6075C83F1DE48B37CB4A
8C976EF88D75006F44747CDCEE5069475B014DB29A6BE7A1F25A9ABA2642AE0B
12F169B7C26C5BB2C6831FDDDADD15DE53220C2A354D3DB65E39662BC3F52DBE
3E6F55BA2941DB48175EDD867619C5C4F72AF6BDE0336B64DD708A70A9B30434
46299A2061A5B31F71BCE056DDAEEEA357563374E361165ED57E4A9861B82CE2
6F9B6BF6D6DD8B8E105752A19647DA81C937CF2BEAF032E992A09CE082764919
EAB1094210448A121FEB79BB41C951E6B43D3384AE29644009EB9FEBB553A8B9
5EE31D86> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 118 /v put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 15{/.notdef}rp /B /.notdef /D 
4{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a 
/b /c /d /e /f 2{/.notdef}rp /i 3{/.notdef}rp 
/m /n /o 2{/.notdef}rp /r /s /t /.notdef 
/v 137{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
423.463 1045.12 mo
(v)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
459.596 1045.12 mo
(i)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
477.955 1045.12 mo
(c)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
511.783 1045.12 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
551.588 1045.12 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
569.673 1045.12 mo
(r)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
597.564 1045.12 mo
(a)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
635.884 1045.12 mo
(n)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
677.916 1045.12 mo
(d)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
719.947 1045.12 mo
(o)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
762.135 1045.12 mo
(m)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B887F0644B8EDF7E394B2B17D648B60040EB6DBE2B8847CEEB
752ACB6F5AD37E1FA4A050E94786AD18088ED8DC4464B0DE1BE6F00A802A61F4
A34EAA84659717045B37042963C71284B8AC29AE9E0F8305F213AE4489E2DB55
EC12AFE94E44F64596D135D1BEB997D5B9A0BB5A35AE0E0CE05B7B1F89372931
9FB81429> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 108 /l put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 15{/.notdef}rp /B /.notdef /D 
4{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a 
/b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o 2{/.notdef}rp /r /s /t 
/.notdef /v 137{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
826.041 1045.12 mo
(l)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B776A06C625D9575F6DBFFEE93EC1CB9A335325BD9E365428E
EA1BD5B7A305D96437BF24D2E59BF0DFE2360EDCA01120D4DA769624265DE986
6EA970971BD84B20E81D769B1F13D7A21674FB5E8C4844518680BB1DE710B743
8090302965C932285C6A137B1923CFCED74D1C71B686BDF1263BE348B2F06F53
4EDA8A2856376F820F03A76FD878686946B3B179B9CD823AA55541A535E0CCC6
D2D21B3D6A73597DDD43BBEFD829B55A26664F2F8221FA6814449CF6D0CFA134
92A2A7CF82E9D18F6E0413> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 15{/.notdef}rp /B /.notdef /D 
4{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a 
/b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o 2{/.notdef}rp /r /s /t 
/.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
844.4 1045.12 mo
(y)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
880.611 1045.12 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
276.51 1141.12 mo
(t)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
303.307 1141.12 mo
(r)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
331.198 1141.12 mo
(a)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
369.518 1141.12 mo
(n)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
411.55 1141.12 mo
(s)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
442.839 1141.12 mo
(m)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
506.744 1141.12 mo
(i)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
525.104 1141.12 mo
(t)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
551.901 1141.12 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
569.986 1141.12 mo
(a)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
608.307 1141.12 mo
( )sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/p <1C60D8A8C9B78E05EA9D973060387C73D1F6FC5283CF49F42B90E3572253
2C0305E99FC2B2F5E8253F0317294CB5BA6F51657EA79E1841CF363B43BBE54B
9E5F683986378119A60103220843BA6B4E1CF012F4407937B0EDEEE409EED971
ED71424C1DE9F58B3C06F2342302220C155C0C840BFB4693FFF8A2CFEEF274FF
E1F4AFBE9757FB2568EE33B9D585CBE0600A7110E1A53D85847EA919EFD9BF18
F44D7EE9518AE64D9DFE7C7267D6429C8F5FD0EF0AF9ABA737132F4E330A3308
77D5AECA1F6DF97EC1ACF219E33EDD988EC9A670EC23A43243C991A099EEE943
0EF67488C01ED11E3C4B1CEB11239FEDA600217AC3F2A3708004F1E2E90E2967
30C207690B19E7D8BB6E1920E2F46C4C2E0CC81AE0ED43696970A1FBC9D409BB
55BDECDE83A356A07B210C4055759107919A9C98A0B1493E8E6816D87FE47A8C
1A70E30E74BD97D6D39D9D984A0D52D9B81565B3C3A0B773497C465883E30959
64CC84> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 112 /p put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 17{/.notdef}rp /two 15{/.notdef}rp /B /.notdef /D 
4{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a 
/b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
626.392 1141.12 mo
(p)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
668.424 1141.12 mo
(r)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
696.315 1141.12 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
736.119 1141.12 mo
(a)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
774.44 1141.12 mo
(m)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
838.345 1141.12 mo
(b)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
880.377 1141.12 mo
(l)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
898.736 1141.12 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
938.541 1141.12 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
496.51 1237.11 mo
(t)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
523.307 1237.11 mo
(o)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
565.495 1237.11 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
583.58 1237.11 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
623.385 1237.11 mo
(N)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
675.025 1237.11 mo
(B)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenleft <1C60D8A8C9B83D5FF27DA8D8E6046A27BA23CC1486AB72A59E47
AACC8161CC74CDD95CC2A654D5856D60A8DC5F8C184EC1ABC4D1D2160575FE6D
70949B41A6CABCFACD73360CFC5DA53716AD56E7BCBA30E5CBADDBCE536F92B4
EFC10AF93D5AA400F7912003F9E093421F683C28EAAC53C2248A1C92A4ADDC6F
6F189A13C295B6CA124F9A4CA4E40FBBF41FDD3287A0301EBE9D805D7A4030F8
18C18B05D8592B2DBF59F7F26BA45EDE7B24A816E6CC3105B053A64C91913E22
DD3F66D2B695F53F3F722E2F8096827FF689C16601C625CCC1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 40 /parenleft put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 9{/.notdef}rp /two 15{/.notdef}rp /B 
/.notdef /D 4{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 
13{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /.notdef /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
259.09 1333.11 mo
(\()sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
283.34 1333.11 mo
(n)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/u <1C60D8A8C9B78E05EAA3CFED1A062DA00ACB6556B6D2C444D52FE211DC36
88D13631F07F87D2F0851361DDE2CB13BAE303424A55D9BD107D56D22322818F
C76F125ECA1DADD7E1E8164E2DF3A65B67CFAE338C319FC7D07BDCC1CF896B70
8E125021996E87E6805D1416B537CED172F9478027FB9FD1A978C49E725968E2
F5FFC6B56799F9B1D16FFE2085471316923AC7BFBC4E3BBEBA71950AD60EAA4B
EA84B8EB89079B6BEAD01C4E2BC5BF11F5FD2CB41D465D8AD649D765F2A952E2
2AC4EF1DF8297E4E5405180477A9E4F70BB10D787681535F61379438A6888E4F
660E2B1CD68547F69ECDD808A3CD50B9FBBDA239A40EE62332FADD878CD5F875
BAC27E0BDDA94455E030928A249A166F13D134EF255F5783> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 117 /u put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 9{/.notdef}rp /two 15{/.notdef}rp /B 
/.notdef /D 4{/.notdef}rp /I 4{/.notdef}rp /N 4{/.notdef}rp /S 
13{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
325.371 1333.11 mo
(u)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
367.403 1333.11 mo
(m)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
431.309 1333.11 mo
(b)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
473.34 1333.11 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
513.144 1333.11 mo
(r)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
541.035 1333.11 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
559.121 1333.11 mo
(o)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
601.308 1333.11 mo
(f)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
625.722 1333.11 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
643.808 1333.11 mo
(p)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
685.839 1333.11 mo
(r)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
713.73 1333.11 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
753.534 1333.11 mo
(a)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
791.855 1333.11 mo
(m)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
855.761 1333.11 mo
(b)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
897.792 1333.11 mo
(l)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
916.151 1333.11 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
955.956 1333.11 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
314.59 1429.11 mo
(t)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
341.387 1429.11 mo
(r)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
369.277 1429.11 mo
(a)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
407.598 1429.11 mo
(n)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
449.629 1429.11 mo
(s)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
480.919 1429.11 mo
(m)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
544.824 1429.11 mo
(i)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
563.184 1429.11 mo
(s)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
594.473 1429.11 mo
(s)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
625.762 1429.11 mo
(i)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
644.121 1429.11 mo
(o)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
686.309 1429.11 mo
(n)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
728.34 1429.11 mo
(s)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
759.629 1429.11 mo
( )sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/plus <1C60D8A8C9B7A9C0DCBFEFB9BEF1D45CBAAFC53646867D6BBE2F308C3
F9E3AD93A3745A244910D4AD54A7F99EEBE4F79977659E7A4CC5A6841AD974C1
86E1C655D5EBB2B734F7259A1A7EDA81F0B55CDA7E1D82E3662891F66E21E875
B907858E0DAAD53BFC174018197B7FE97C40953501C66C9FD2020D33B8CF22CC
3D5E15920EFA758DE83A6FCCE5C1E9FCF4C958FD4C564B2FB5A3D2104A14DC39
3972C58A6FDAB3735DCC01F5A819225ECBDCF1C64D29E77D5408AAA17685A9C0
B4727FB9F141C54AC6B9E8E41EC22D9E07A292DBFB5EC6C0BDD392EF763BD591
8487CD2665AEF89FB9EF9E73BD8566926B9782F2BABCD9B698C0DB0BD20822F8
ECCAEF5C7A17E22049425> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 43 /plus put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 2{/.notdef}rp /plus 6{/.notdef}rp /two 
15{/.notdef}rp /B /.notdef /D 4{/.notdef}rp /I 4{/.notdef}rp /N 
4{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d /e 
/f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 
/p /.notdef /r /s /t /u /v 2{/.notdef}rp 
/y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
777.72 1429.11 mo
(+)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
817.564 1429.11 mo
( )sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/one <1C60D8A8C9B7A0860A305D7D1540DECC7BE2F83965065BA1F58088FE75
1F51768999AF3CB0CBD98712B4A20A30CFDD23F3D718AE6664545AA64C90E87A
977C061638AE7B9844BD53D39E1CD919540EC0AFC0ADDD639213BAA3C2156ECF
4D5FEFDF4B77C92C9A62F21FEF596A47F254F30F662D97990A276CD1E50761DD
9D07D78B626617E74128BC5D647B42ED807FE6DD0588AD25D211834DAC9410A0
AEBD06E6565C1DCBD86013B11A7BE0A2010B12635869FAC3323D92D6BCCC10D0
2550F431D6753E5E6C65DB63D883AF6BCE4C75C5A66BF9AE47A5570BA4B61C57
63C152A7FDEC11C0C748631E999D604A7F2938BB57220CBE02AE758E60183316
61C475AA9DED7C59> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 49 /one put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft 2{/.notdef}rp /plus 5{/.notdef}rp /one 
/two 15{/.notdef}rp /B /.notdef /D 4{/.notdef}rp /I 4{/.notdef}rp 
/N 4{/.notdef}rp /S 13{/.notdef}rp /a /b /c /d 
/e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n 
/o /p /.notdef /r /s /t /u /v 
2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
835.65 1429.11 mo
(1)sh
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/parenright <1C60D8A8C9B83D5FF29F44B652980D05B9EE187D926BB2CE034
E7CDFB42233F20EA0B6A7D3053EB0C035C6C189F4DA6B49B40A0EB0636B7ACA2
CF42792FC2164693E9F6F7B6636D9708884EE48CE23B1AFB94FA912772ABED4A
B22E20E0410244F282681ABF0BF3F1FF921D275AD5C6D7F8F439D5D0B2BAD1CB
D8078F961EB6B7FB4BFFE77692BCE19880B8A84987A61F63B3F03252C231FCBB
5CB61DBA6789BB581DA0ED1802F2C6AAE0EF2092080B688E21E45FC07A90B21E
AB8701889CC58EAA06C962B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 41 /parenright put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 15{/.notdef}rp /B /.notdef /D 4{/.notdef}rp /I 
4{/.notdef}rp /N 4{/.notdef}rp /S 13{/.notdef}rp /a /b /c 
/d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n /o /p /.notdef /r /s /t /u 
/v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
876.2 1429.11 mo
(\))sh
609.13 1996.89 mo
364.63 1805.64 li
609.13 1614.39 li
849.617 1802.5 li
849.309 1802.97 849.13 1803.53 849.13 1804.14 cv
849.13 1805.66 850.269 1806.92 851.744 1807.11 cv
609.13 1996.89 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
609.13 1614.39 mo
364.63 1805.64 li
609.13 1996.89 li
853.63 1805.64 li
609.13 1614.39 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
609.13 1999.89 mo
608.477 1999.89 607.824 1999.67 607.281 1999.25 cv
362.833 1808.04 li
362.725 1807.96 362.622 1807.87 362.524 1807.77 cv
362.52 1807.77 362.516 1807.77 362.512 1807.76 cv
362.508 1807.76 362.504 1807.75 362.501 1807.75 cv
362.262 1807.51 362.072 1807.24 361.93 1806.95 cv
361.928 1806.94 361.926 1806.94 361.924 1806.93 cv
361.924 1806.93 361.923 1806.93 361.922 1806.93 cv
361.727 1806.52 361.631 1806.08 361.63 1805.65 cv
361.63 1805.64 361.63 1805.64 361.63 1805.64 cv
361.63 1805.63 361.63 1805.63 361.63 1805.62 cv
361.631 1805.19 361.727 1804.75 361.922 1804.34 cv
361.923 1804.34 361.923 1804.34 361.924 1804.34 cv
361.926 1804.33 361.928 1804.33 361.93 1804.33 cv
362.072 1804.03 362.262 1803.76 362.501 1803.52 cv
362.503 1803.52 362.505 1803.52 362.507 1803.52 cv
362.513 1803.51 362.519 1803.5 362.524 1803.5 cv
362.622 1803.4 362.725 1803.31 362.832 1803.23 cv
607.281 1612.02 li
607.824 1611.6 608.477 1611.39 609.13 1611.39 cv
609.783 1611.39 610.436 1611.6 610.979 1612.02 cv
852.747 1801.14 li
852.13 1801.14 li
851.078 1801.14 850.152 1801.68 849.617 1802.5 cv
609.13 1614.39 li
364.63 1805.64 li
609.13 1996.89 li
851.744 1807.11 li
851.871 1807.13 851.999 1807.14 852.13 1807.14 cv
856.227 1807.14 li
856.037 1807.47 855.784 1807.76 855.478 1808 cv
610.979 1999.25 li
610.436 1999.67 609.783 1999.89 609.13 1999.89 cv
f
grestore
gsave
363.13 1804.14 mo
607.63 1612.89 li
852.13 1804.14 li
607.63 1995.39 li
363.13 1804.14 li
eclp
362.29 1995.98 mo
852.77 1995.98 li
852.77 1612.34 li
362.29 1612.34 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [760.39 582.91 760.39 966.55 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!9!!!!8!!!!8!!!!8!!!!7!!!!7!!!!7!!!!6!!!!6!!!!6!!!!5!!!!5!!!!5!!!!4!!!!4!!!!4
!!!!3!!!!3!!!!2!!!!2!!!!2!!!!1!!!!1!!!!1!!!!0!!!!0!!!!0!!!!/!!!!/!!!!/!!!!.!!!!.
!!!!-!!!!-!!!!-!!!!,!!!!,!!!!+!!!!+!!!!+!!!!*!!!!*!!!!)!!!!)!!!!)!!!!(!!!!(!!!!'
!!!!'!!!!'!!!!&!!!!&!!!!%!!!!%!!!!%!!!!$!!!!$!!!!#!!!!#!!!!#!!!!"!!!!"z!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /2 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~(Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m'+toj&eYfi&eYfi
&eYcg&J5Te&J5Qc&.fBa&.fBa&.f?_%hB0]%hB0]%hB-[%LrsY%LrsY%LrpW%1NaU%1NaU%1N^S$k*OQ
$k*OP$O[=M$O[=M$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP88
"U,&5"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%zz!!!!!~>
]
>>
760.39 582.91 760.39 966.55 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/2 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
363.13 1804.14 mo
607.63 1612.89 li
852.13 1804.14 li
607.63 1995.39 li
363.13 1804.14 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B79C5FEE44F314FFC38CE4EF87FC1BC5BA498FDD47672E37A5
F29CF58ECF31C007FDE4A3817F15E647D623C8D6D1F4A73D7B6832B4D42989C1
A55BCD585ED57C222CC2F78A215F05F4E9A80BA1FCD1DB376BCE47D9921733E4
4EDE5BEAEC1D2153F2FA8A2E1C22E242D6C1A4BADF7B3C9D6692C8957849B7C7
57134864A498CBD963474EEA254A542992BCD7D23FC8C03B24B3B32CB8DE36B1
F672A455AF821729B85730506FEACB3392B97578F79A301DEE39865FDBFD8731
B3029E0DE4CAFE78BFA5CB852575D437DF1324ED582E9AF5A0234A2594A744CB
D8A820BF84E58BCFA0173DA6F4633F9CBE6F24B1E9A9AA3FBA2EC97D071CB6D5
A774FEB91C9639FD6744C0FCD372B9710A9F8B9537B94D2F3171FFE5B9719953
51C2AE63C69CA08EAE162057803FEFCA06736258DDA27C02FD926DA3B7BF59E5
B7BF6347045A4700726CA8EDCBC532E0E356415CE7BCA89E1BE403BD462A4226
BC0587B5B955AD2652D9A4B9A806727D8110> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 82 /R put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 15{/.notdef}rp /B /.notdef /D 4{/.notdef}rp /I 
4{/.notdef}rp /N 3{/.notdef}rp /R /S 13{/.notdef}rp /a /b 
/c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l 
/m /n /o /p /.notdef /r /s /t 
/u /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
431.46 1783.16 mo
(R)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
469.468 1783.16 mo
(e)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
504.297 1783.16 mo
(c)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
533.897 1783.16 mo
(e)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
568.726 1783.16 mo
(i)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
584.791 1783.16 mo
(v)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
616.407 1783.16 mo
(e)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
651.236 1783.16 mo
( )sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
667.062 1783.16 mo
(R)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B7F88C2B6CB105045FB5B2B32CEE3D567021E87FFA3A108F22
F0AD769D89AF310F9FA2A63D83B348F1CD4D9158D831C2637A040F2E3D2AD1E0
C1265C252DE42DC685024335218B88110082607887337A49D14691BEEC919D91
764E7A708708CD55D39F5C43F91BAAAD2C1BF631413626FEAC47C21B08151BEA
5901545C7204664D0C76E7A812FB56764BAC701D80F5CBA63A3746A10BE794CC
B8FEAE9714EDA1C180ECED7E77C8C4917875CE0D099349356F25861C18102A30
8F1467786491B4C86DDD6D90CF5B29B935592B1FC4BC1C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 65 /A put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 14{/.notdef}rp /A /B /.notdef /D 4{/.notdef}rp 
/I 4{/.notdef}rp /N 3{/.notdef}rp /R /S 13{/.notdef}rp /a 
/b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp 
/l /m /n /o /p /.notdef /r /s 
/t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
705.07 1783.16 mo
(A)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
745.573 1783.16 mo
(R)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
783.581 1783.16 mo
( )sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
455.05 1867.16 mo
(f)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
476.412 1867.16 mo
(r)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
500.817 1867.16 mo
(o)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
537.731 1867.16 mo
(m)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
593.649 1867.16 mo
( )sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
609.475 1867.16 mo
(e)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
644.304 1867.16 mo
(N)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
689.489 1867.16 mo
(B)sh
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/question <1C60D8A8C9B74CDD96F0E195DEA3C6C72CD66A0031ADD38C9CE12
076957A55B89C1699F6C63670D74D66F0A81CBE0446004EFF59031B1C7067B57
CBA7A4B446EB661B5E2581DB199879B7500C0FB41CADA4CC236498ECB2393FEA
01C410690AB32E921DF48A4AF0D7C0B5F106F35CA1344C09BAA09ABC00807BA4
B62A1ECB8D2C4A794C4C89A0AC93D2A89036E293B71E12117A40FD97E0E96A17
64724BC07B98C0339F3FCF953F85C880A4F3D5068EEF6976F3933D1F18956E2D
5EA6CC1E9B927A79689F4A8B22D8A71D0D5F62FA8D3576E3BF76A2E6FA1EEC91
3F618DA20E8AADE62453501238B27627CF1BC1AD324688EEB02ABF6D890AF5D9
A4576A29C7F43CCB7D10E29BDC49C69CED40D95C0DC4BA853C53449F8F56CE2C
5973ACDADD30387A4D6FAC383F1789195167BA7046B9F9557DA73665A2380EA2
5DF1F7ACC08C7778C8756E8AF57E6B579E8A788BDFC5B1705C6AF735D6EC65D4
32A8A46711A7A9714135DD4660F9FB4D5D077351FAB127A1FF2536A58DCF05A2
269BBE0FC3E4AAA0A24235BEA6FCD17B42ED38104616AC6349D26D93EB30220A
75C886B35F17F04BAAF7B6DB4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 63 /question put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 12{/.notdef}rp /question /.notdef /A /B /.notdef 
/D 4{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp /R /S 
13{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp 
/i 2{/.notdef}rp /l /m /n /o /p /.notdef 
/r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
727.56 1867.16 mo
(?)sh
2466.88 1084.14 mo
2121.88 782.637 li
2466.88 481.136 li
2811.13 782.637 li
2466.88 1084.14 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
2466.88 481.136 mo
2121.88 782.637 li
2466.88 1084.14 li
2811.13 782.637 li
2466.88 481.136 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
2466.88 1087.14 mo
2466.18 1087.14 2465.47 1086.89 2464.91 1086.4 cv
2119.91 784.895 li
2119.44 784.485 2119.13 783.962 2118.98 783.402 cv
2118.98 783.4 2118.98 783.398 2118.98 783.395 cv
2118.97 783.386 2118.97 783.377 2118.97 783.367 cv
2118.97 783.364 2118.97 783.36 2118.97 783.356 cv
2118.97 783.348 2118.96 783.341 2118.96 783.333 cv
2118.96 783.328 2118.96 783.324 2118.96 783.32 cv
2118.96 783.312 2118.95 783.305 2118.95 783.297 cv
2118.95 783.293 2118.95 783.289 2118.95 783.285 cv
2118.95 783.277 2118.95 783.27 2118.95 783.262 cv
2118.94 783.258 2118.94 783.254 2118.94 783.25 cv
2118.94 783.242 2118.94 783.234 2118.94 783.226 cv
2118.94 783.223 2118.94 783.221 2118.94 783.218 cv
2118.93 783.209 2118.93 783.199 2118.93 783.19 cv
2118.93 783.188 2118.93 783.186 2118.93 783.185 cv
2118.93 783.174 2118.93 783.164 2118.92 783.153 cv
2118.92 783.153 2118.92 783.153 2118.92 783.153 cv
2118.81 782.518 2118.91 781.851 2119.21 781.26 cv
2119.21 781.259 2119.21 781.259 2119.21 781.258 cv
2119.22 781.254 2119.22 781.25 2119.22 781.247 cv
2119.35 780.992 2119.52 780.754 2119.73 780.54 cv
2119.73 780.539 2119.73 780.539 2119.74 780.538 cv
2119.74 780.535 2119.74 780.532 2119.74 780.529 cv
2119.81 780.463 2119.88 780.4 2119.95 780.34 cv
2464.91 478.878 li
2465.47 478.384 2466.18 478.137 2466.88 478.137 cv
2467.58 478.137 2468.29 478.385 2468.86 478.88 cv
2813.11 780.38 li
2813.76 780.952 2814.13 781.768 2814.13 782.637 cv
2814.13 783.505 2813.76 784.321 2813.11 784.894 cv
2468.86 1086.39 li
2468.29 1086.89 2467.58 1087.14 2466.88 1087.14 cv
2121.88 782.637 mo
2121.88 782.637 li
2466.88 1084.14 li
2811.13 782.637 li
2466.88 481.136 li
2121.88 782.637 li
f
grestore
gsave
2120.38 781.137 mo
2465.38 479.637 li
2809.63 781.137 li
2465.38 1083.39 li
2120.38 781.137 li
eclp
2119.77 1083.81 mo
2810.59 1083.81 li
2810.59 479.056 li
2119.77 479.056 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [2618.05 1495.08 2618.05 2099.83 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!9!!!!8!!!!8!!!!8!!!!7!!!!7!!!!7!!!!6!!!!6!!!!6!!!!5!!!!5!!!!5!!!!4!!!!4!!!!4
!!!!3!!!!3!!!!2!!!!2!!!!2!!!!1!!!!1!!!!1!!!!0!!!!0!!!!0!!!!/!!!!/!!!!/!!!!.!!!!.
!!!!-!!!!-!!!!-!!!!,!!!!,!!!!+!!!!+!!!!+!!!!*!!!!*!!!!)!!!!)!!!!)!!!!(!!!!(!!!!'
!!!!'!!!!'!!!!&!!!!&!!!!%!!!!%!!!!%!!!!$!!!!$!!!!#!!!!#!!!!#!!!!"!!!!"z!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /3 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~(Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m'+toj&eYfi&eYfi
&eYcg&J5Te&J5Qc&.fBa&.fBa&.f?_%hB0]%hB0]%hB-[%LrsY%LrsY%LrpW%1NaU%1NaU%1N^S$k*OQ
$k*OP$O[=M$O[=M$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP88
"U,&5"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%zz!!!!!~>
]
>>
2618.05 1495.08 2618.05 2099.83 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/3 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
2120.38 781.136 mo
2465.38 479.636 li
2809.63 781.136 li
2465.38 1083.39 li
2120.38 781.136 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2339.59 661.437 mo
(R)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2383.03 661.437 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2422.83 661.437 mo
(c)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2456.66 661.437 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2496.46 661.437 mo
(i)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2514.82 661.437 mo
(v)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2550.96 661.437 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2590.76 661.437 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2287.15 757.437 mo
(c)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2320.98 757.437 mo
(o)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2363.17 757.437 mo
(n)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2405.2 757.437 mo
(t)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2431.99 757.437 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2471.8 757.437 mo
(n)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2513.83 757.437 mo
(t)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2540.63 757.437 mo
(i)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2558.99 757.437 mo
(o)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2601.17 757.437 mo
(n)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2643.21 757.437 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2211.47 853.437 mo
(r)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2239.36 853.437 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2279.17 853.437 mo
(s)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2310.45 853.437 mo
(o)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2352.64 853.437 mo
(l)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2371 853.437 mo
(u)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2413.03 853.437 mo
(t)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2439.83 853.437 mo
(i)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2458.19 853.437 mo
(o)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2500.38 853.437 mo
(n)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2542.41 853.437 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2560.49 853.437 mo
(f)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2584.91 853.437 mo
(r)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2612.8 853.437 mo
(o)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2654.99 853.437 mo
(m)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2718.89 853.437 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2379.16 949.437 mo
(e)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2418.96 949.437 mo
(N)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2470.6 949.437 mo
(B)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
2514.12 949.437 mo
(?)sh
2811.13 1890.39 mo
2121.88 1890.39 li
2121.88 1247.64 li
2811.13 1247.64 li
2811.13 1890.39 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
2121.88 1247.64 mo
2121.88 1890.39 li
2811.13 1890.39 li
2811.13 1247.64 li
2121.88 1247.64 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
2811.13 1893.39 mo
2121.88 1893.39 li
2120.24 1893.39 2118.9 1892.06 2118.88 1890.43 cv
2118.88 1890.41 2118.88 1890.4 2118.88 1890.39 cv
2118.88 1890.39 li
2118.88 1890.39 li
2118.88 1890.39 li
2118.88 1247.64 li
2118.88 1246.85 2119.2 1246.07 2119.76 1245.51 cv
2120.32 1244.96 2121.09 1244.64 2121.88 1244.64 cv
2811.13 1244.64 li
2811.92 1244.64 2812.69 1244.96 2813.25 1245.52 cv
2813.81 1246.07 2814.13 1246.85 2814.13 1247.64 cv
2814.13 1890.39 li
2814.13 1891.18 2813.81 1891.95 2813.25 1892.51 cv
2812.69 1893.07 2811.92 1893.39 2811.13 1893.39 cv
2121.88 1890.39 mo
2121.88 1890.39 li
2811.13 1890.39 li
2811.13 1247.64 li
2121.88 1247.64 li
2121.88 1890.39 li
f
grestore
gsave
2120.38 1888.89 mo
2809.63 1888.89 li
2809.63 1246.14 li
2120.38 1246.14 li
2120.38 1888.89 li
eclp
2119.77 1889.68 mo
2810.59 1889.68 li
2810.59 1245.21 li
2119.77 1245.21 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [2618.05 689.21 2618.05 1333.68 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!9!!!!8!!!!8!!!!8!!!!7!!!!7!!!!7!!!!6!!!!6!!!!6!!!!5!!!!5!!!!5!!!!4!!!!4!!!!4
!!!!3!!!!3!!!!2!!!!2!!!!2!!!!1!!!!1!!!!1!!!!0!!!!0!!!!0!!!!/!!!!/!!!!/!!!!.!!!!.
!!!!-!!!!-!!!!-!!!!,!!!!,!!!!+!!!!+!!!!+!!!!*!!!!*!!!!)!!!!)!!!!)!!!!(!!!!(!!!!'
!!!!'!!!!'!!!!&!!!!&!!!!%!!!!%!!!!%!!!!$!!!!$!!!!#!!!!#!!!!#!!!!"!!!!"z!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /4 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~(Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m'+toj&eYfi&eYfi
&eYcg&J5Te&J5Qc&.fBa&.fBa&.f?_%hB0]%hB0]%hB-[%LrsY%LrsY%LrpW%1NaU%1NaU%1N^S$k*OQ
$k*OP$O[=M$O[=M$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP88
"U,&5"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%zz!!!!!~>
]
>>
2618.05 689.21 2618.05 1333.68 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/4 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
2120.38 1888.89 mo
2809.63 1888.89 li
2809.63 1246.14 li
2120.38 1246.14 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2177.95 1432.45 mo
(D)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2233.32 1432.45 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2278.1 1432.45 mo
(v)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2318.75 1432.45 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2339.41 1432.45 mo
(c)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2377.46 1432.45 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2422.24 1432.45 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2442.59 1432.45 mo
(t)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2472.74 1432.45 mo
(r)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2504.11 1432.45 mo
(a)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2547.22 1432.45 mo
(n)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2594.51 1432.45 mo
(s)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2629.71 1432.45 mo
(m)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2701.6 1432.45 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2722.26 1432.45 mo
(t)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2752.4 1432.45 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2260.94 1540.45 mo
(c)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2299 1540.45 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2346.46 1540.45 mo
(n)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2393.74 1540.45 mo
(n)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2441.03 1540.45 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2485.81 1540.45 mo
(c)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2523.86 1540.45 mo
(t)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2554.01 1540.45 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2574.67 1540.45 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2622.13 1540.45 mo
(n)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2669.41 1540.45 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2189.68 1648.45 mo
(r)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2221.06 1648.45 mo
(e)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/q <1C60D8A8C9B78E05EAA3CFED1A062E7358B586AF05164722AD015C8CE0D8
BBE5ADC9B4274EF141088E8BC7A5519CC6F4CF8FAC14716641A1CBFC8A3C1FAE
730ABB73285F00C246C90485D48EE52326159584526EB20CF5ECF3A8F136119D
81E693D06F59FB756016DDA1809F71D795C46C230FC120FDA5AD6FA95AB8E6A4
70F36B3DA70C0CF52D582260ACEF64787A97848A2F116B221416D578037583D7
5EDF07A2E7D2CA285122F15F81D5EF1F5238BE09184291849770C6C0541B16B8
152F87E35B621861DD1ADF706153CA61CF27093B3F644FF3CBAA4800B11C9797
C686E616BE020290A908CE63875BF87479DA09514C9A037DB7C2932C55D8E278
F657B3659B5F0BD547DB1098867E70D8D3DFB6EA9C67031DD259213F55AFA344
4C26C4C5D57542F6262D7A38FB60D8D46EAA97637A896F0308BCCBA5D05A6252
320557ACE8E3075792F0257743ABCB84E60494B1F8AE8FDAF9A4A281D1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 113 /q put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 12{/.notdef}rp /question /.notdef /A /B /.notdef 
/D 4{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp /R /S 
13{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp 
/i 2{/.notdef}rp /l /m /n /o /p /q 
/r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2265.84 1648.45 mo
(q)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2313.12 1648.45 mo
(u)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2360.41 1648.45 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2405.19 1648.45 mo
(s)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2440.39 1648.45 mo
(t)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2470.54 1648.45 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2490.88 1648.45 mo
(t)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2521.03 1648.45 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2568.49 1648.45 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2588.84 1648.45 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2633.62 1648.45 mo
(N)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2691.71 1648.45 mo
(B)sh
607.63 1534.89 mo
607.63 1590.39 li
1 /1 /CSD get_res sepcs
.749 sep
@
607.63 1612.89 mo
592.63 1582.89 li
592.52 1583.09 li
601.97 1587.81 613.08 1587.81 622.52 1583.09 cv
622.63 1582.89 li
607.63 1612.89 li
cp
ef
607.63 1995.39 mo
607.63 2016.39 li
2465.38 2016.39 li
2465.38 1911.39 li
@
2465.38 1888.89 mo
2480.38 1918.89 li
2480.18 1918.93 li
2470.74 1914.21 2459.62 1914.21 2450.18 1918.93 cv
2450.38 1918.89 li
2465.38 1888.89 li
cp
ef
1541.38 2058.39 mo
1637.38 2058.39 li
1637.38 1974.39 li
1541.38 1974.39 li
cp
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Y <1C60D8A8C9B7544E0B0EEDED580362FBFA5F9C928B31561908068AC6EA81
0D41BF328FB52C8F8185A919735D4141C6312C08B74BCDFC43BB5C0AF474F9A1
C5EA0C0C155EE7B36D37A794E1533C655E77250E51F49FD898489ED0CE7D7541
FA14F0CD4E039C8FE17A99395014273B90AA8829999F538319CB056E53403067
E343000ED68D07D37737DB7C330DC79FDCE20B458BA4CE302561537AC812BF79
7748DDAAEA29E690448A1F4962E5FA03B4B53614BB7195D65DF457057513A87D
0E053625E8F7FD5E9842A40F2B7859BA77F4C18C6354870E95170ACFE3284838
2C4D9FC9946D7932D570> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 89 /Y put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 12{/.notdef}rp /question /.notdef /A /B /.notdef 
/D 4{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp /R /S 
5{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e 
/f 2{/.notdef}rp /i 2{/.notdef}rp /l /m /n /o 
/p /q /r /s /t /u /v 2{/.notdef}rp 
/y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1541.34 2037.49 mo
(Y)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1575.45 2037.49 mo
(e)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1610.28 2037.49 mo
(s)sh
2120.38 781.136 mo
2099.38 781.136 li
2099.38 1329.39 li
2001.13 1329.39 li
1 /1 /CSD get_res sepcs
.749 sep
@
1978.63 1329.39 mo
2008.63 1314.39 li
2008.78 1314.71 li
2004.06 1324.15 2004.06 1335.26 2008.78 1344.71 cv
2008.63 1344.39 li
1978.63 1329.39 li
ef
2058.13 1147.14 mo
2140.63 1147.14 li
2140.63 1063.14 li
2058.13 1063.14 li
cp
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
2058.21 1126.18 mo
(N)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
2103.4 1126.18 mo
(o)sh
2294.98 235.917 mo
2237.77 235.917 2191.4 189.547 2191.4 132.346 cv
2191.4 75.1462 2237.77 28.7667 2294.98 28.7667 cv
2295.13 28.8867 li
2638.63 28.8867 li
2638.26 28.7667 li
2695.46 28.7763 2741.83 75.1462 2741.83 132.346 cv
2741.83 132.346 li
2741.83 132.42 2741.83 132.493 2741.83 132.566 cv
2741.83 132.827 2741.83 133.089 2741.83 133.35 cv
2741.82 133.444 2741.82 133.54 2741.82 133.633 cv
2741.82 133.651 2741.82 133.666 2741.82 133.684 cv
2741.82 133.708 2741.82 133.735 2741.82 133.76 cv
2741.82 133.791 2741.82 133.82 2741.82 133.851 cv
2741.82 133.868 2741.82 133.888 2741.82 133.906 cv
2741.82 133.944 2741.82 133.98 2741.82 134.018 cv
2741.82 134.042 2741.82 134.066 2741.82 134.09 cv
2741.82 134.122 2741.81 134.153 2741.81 134.184 cv
2741.81 134.226 2741.81 134.271 2741.81 134.313 cv
2741.81 134.326 2741.81 134.336 2741.81 134.35 cv
2741.81 134.395 2741.81 134.443 2741.81 134.488 cv
2741.81 134.498 2741.81 134.506 2741.81 134.516 cv
2741.81 134.547 2741.81 134.582 2741.81 134.614 cv
2741.81 134.638 2741.8 134.66 2741.8 134.684 cv
2741.8 134.702 2741.8 134.712 2741.8 134.729 cv
2741.8 134.827 2741.8 134.919 2741.8 135.016 cv
2741.8 135.044 2741.79 135.07 2741.79 135.097 cv
2741.79 135.128 2741.79 135.153 2741.79 135.184 cv
2741.79 135.208 2741.79 135.226 2741.79 135.25 cv
2741.79 135.285 2741.79 135.315 2741.79 135.35 cv
2741.79 135.377 2741.79 135.402 2741.78 135.43 cv
2741.78 135.461 2741.78 135.485 2741.78 135.516 cv
2741.78 135.544 2741.78 135.565 2741.78 135.592 cv
2741.78 135.623 2741.78 135.651 2741.78 135.682 cv
2741.78 135.706 2741.78 135.728 2741.78 135.752 cv
2741.77 135.787 2741.77 135.815 2741.77 135.849 cv
2741.77 135.867 2741.77 135.881 2741.77 135.899 cv
2741.77 135.937 2741.77 135.978 2741.77 136.016 cv
2741.77 136.03 2741.77 136.035 2741.77 136.049 cv
2741.76 136.149 2741.76 136.249 2741.75 136.349 cv
2741.75 136.352 2741.75 136.364 2741.75 136.368 cv
2741.75 136.416 2741.75 136.467 2741.75 136.515 cv
2741.75 136.519 2741.75 136.522 2741.75 136.526 cv
2741.75 136.578 2741.74 136.627 2741.74 136.679 cv
2741.74 136.693 2741.74 136.71 2741.74 136.723 cv
2741.74 136.765 2741.74 136.805 2741.73 136.846 cv
2741.73 136.85 2741.73 136.859 2741.73 136.862 cv
2741.26 147.856 2739.08 158.404 2735.44 168.249 cv
2735.44 168.252 2735.44 168.256 2735.44 168.259 cv
2735.42 168.305 2735.4 168.349 2735.39 168.396 cv
2735.38 168.402 2735.38 168.403 2735.38 168.41 cv
2735.36 168.453 2735.35 168.497 2735.33 168.54 cv
2735.33 168.546 2735.32 168.557 2735.32 168.564 cv
2735.31 168.607 2735.29 168.643 2735.28 168.686 cv
2735.27 168.696 2735.27 168.704 2735.27 168.713 cv
2735.25 168.753 2735.24 168.794 2735.22 168.834 cv
2735.22 168.844 2735.21 168.853 2735.21 168.862 cv
2735.2 168.902 2735.18 168.941 2735.17 168.981 cv
2735.16 168.991 2735.16 169.002 2735.15 169.012 cv
2735.14 169.049 2735.13 169.085 2735.11 169.122 cv
2735.11 169.138 2735.1 169.154 2735.09 169.169 cv
2735.08 169.203 2735.07 169.235 2735.06 169.269 cv
2735.05 169.285 2735.04 169.301 2735.04 169.316 cv
2735.03 169.347 2735.01 169.383 2735 169.414 cv
2734.99 169.432 2734.99 169.451 2734.98 169.469 cv
2734.97 169.5 2734.96 169.527 2734.95 169.558 cv
2734.94 169.58 2734.93 169.596 2734.92 169.618 cv
2734.91 169.649 2734.9 169.674 2734.89 169.704 cv
2734.88 169.726 2734.87 169.749 2734.86 169.77 cv
2734.85 169.795 2734.84 169.824 2734.83 169.849 cv
2734.82 169.87 2734.81 169.897 2734.81 169.918 cv
2734.8 169.943 2734.79 169.969 2734.78 169.993 cv
2734.77 170.018 2734.76 170.048 2734.75 170.073 cv
2734.74 170.094 2734.73 170.114 2734.72 170.135 cv
2734.71 170.163 2734.7 170.194 2734.69 170.222 cv
2734.68 170.24 2734.67 170.261 2734.66 170.279 cv
2734.65 170.313 2734.64 170.345 2734.63 170.378 cv
2734.62 170.39 2734.61 170.408 2734.61 170.42 cv
2734.59 170.457 2734.58 170.489 2734.57 170.525 cv
2734.56 170.538 2734.56 170.554 2734.55 170.566 cv
2734.54 170.603 2734.52 170.637 2734.51 170.673 cv
2734.5 170.686 2734.5 170.7 2734.49 170.712 cv
2734.48 170.749 2734.46 170.786 2734.45 170.822 cv
2734.44 170.835 2734.44 170.842 2734.44 170.854 cv
2734.42 170.894 2734.4 170.94 2734.39 170.98 cv
2734.38 170.983 2734.38 170.989 2734.38 170.992 cv
2734.36 171.035 2734.34 171.084 2734.33 171.127 cv
2734.33 171.13 2734.32 171.135 2734.32 171.138 cv
2734.3 171.184 2734.28 171.232 2734.27 171.278 cv
2734.26 171.28 li
2734.24 171.329 2734.23 171.375 2734.21 171.424 cv
2734.21 171.426 li
2718.82 209.157 2681.83 235.773 2638.6 235.886 cv
2295.13 235.886 li
2294.98 235.917 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
2294.98 28.7667 mo
2237.77 28.7667 2191.4 75.1462 2191.4 132.346 cv
2191.4 189.547 2237.77 235.917 2294.98 235.917 cv
2295.13 235.886 li
2638.6 235.886 li
2638.26 235.917 li
2638.63 235.886 li
2638.6 235.886 li
2695.65 235.737 2741.83 189.436 2741.83 132.346 cv
2741.83 75.1462 2695.46 28.7763 2638.26 28.7667 cv
2638.63 28.8867 li
2295.13 28.8867 li
2294.98 28.7667 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
2638.28 238.917 mo
2638.28 238.917 2638.28 238.917 2638.28 238.917 cv
2638.19 238.916 2638.15 238.914 2638.14 238.914 cv
2638.04 238.91 2637.94 238.901 2637.84 238.887 cv
2295.4 238.887 li
2295.26 238.906 2295.12 238.916 2294.98 238.916 cv
2265.56 238.918 2238.89 226.984 2219.61 207.703 cv
2200.33 188.427 2188.4 161.766 2188.4 132.346 cv
2188.4 102.927 2200.33 76.2638 2219.61 56.9857 cv
2238.89 37.7032 2265.56 25.7661 2294.98 25.7661 cv
2294.98 25.7661 2294.98 25.7661 2294.98 25.7661 cv
2295.27 25.7661 2295.55 25.8074 2295.82 25.8869 cv
2637.42 25.8869 li
2637.69 25.8087 2637.97 25.7669 2638.26 25.7669 cv
2667.68 25.7701 2694.34 37.7068 2713.62 56.9889 cv
2732.9 76.2662 2744.83 102.927 2744.83 132.346 cv
2744.83 161.762 2732.9 188.424 2713.62 207.701 cv
2694.35 226.98 2667.69 238.917 2638.28 238.917 cv
2638.26 235.917 mo
2638.26 235.917 2638.27 235.917 2638.28 235.917 cv
2681.65 235.917 2718.78 209.255 2734.21 171.426 cv
2734.21 171.424 li
2734.23 171.375 2734.24 171.329 2734.26 171.28 cv
2734.27 171.278 li
2734.28 171.232 2734.3 171.184 2734.32 171.138 cv
2734.32 171.132 2734.32 171.133 2734.33 171.127 cv
2734.34 171.081 2734.36 171.038 2734.38 170.992 cv
2734.38 170.986 2734.38 170.986 2734.39 170.98 cv
2734.4 170.937 2734.42 170.897 2734.44 170.854 cv
2734.44 170.842 2734.44 170.835 2734.45 170.822 cv
2734.46 170.786 2734.48 170.749 2734.49 170.712 cv
2734.5 170.7 2734.5 170.686 2734.51 170.673 cv
2734.52 170.637 2734.54 170.603 2734.55 170.566 cv
2734.56 170.554 2734.56 170.538 2734.57 170.525 cv
2734.58 170.489 2734.59 170.457 2734.61 170.42 cv
2734.61 170.408 2734.62 170.39 2734.63 170.378 cv
2734.64 170.345 2734.65 170.313 2734.66 170.279 cv
2734.67 170.258 2734.68 170.243 2734.69 170.222 cv
2734.7 170.194 2734.71 170.163 2734.72 170.135 cv
2734.73 170.114 2734.74 170.094 2734.75 170.073 cv
2734.76 170.045 2734.77 170.021 2734.78 169.993 cv
2734.79 169.966 2734.8 169.946 2734.81 169.918 cv
2734.82 169.894 2734.82 169.874 2734.83 169.849 cv
2734.84 169.821 2734.85 169.798 2734.86 169.77 cv
2734.87 169.749 2734.88 169.726 2734.89 169.704 cv
2734.9 169.677 2734.91 169.646 2734.92 169.618 cv
2734.93 169.6 2734.94 169.577 2734.95 169.558 cv
2734.96 169.531 2734.97 169.497 2734.98 169.469 cv
2734.99 169.451 2734.99 169.433 2735 169.414 cv
2735.01 169.38 2735.03 169.35 2735.04 169.316 cv
2735.04 169.301 2735.05 169.285 2735.06 169.269 cv
2735.07 169.235 2735.08 169.203 2735.09 169.169 cv
2735.1 169.154 2735.11 169.138 2735.11 169.122 cv
2735.13 169.086 2735.14 169.049 2735.15 169.012 cv
2735.16 168.999 2735.16 168.994 2735.17 168.981 cv
2735.18 168.941 2735.2 168.902 2735.21 168.862 cv
2735.21 168.853 2735.22 168.844 2735.22 168.834 cv
2735.24 168.794 2735.25 168.753 2735.27 168.713 cv
2735.27 168.707 2735.27 168.693 2735.28 168.686 cv
2735.29 168.643 2735.31 168.607 2735.32 168.564 cv
2735.32 168.557 2735.33 168.547 2735.33 168.54 cv
2735.35 168.497 2735.36 168.453 2735.38 168.41 cv
2735.38 168.403 2735.38 168.402 2735.39 168.396 cv
2735.4 168.349 2735.42 168.305 2735.44 168.259 cv
2735.44 168.256 2735.44 168.252 2735.44 168.249 cv
2739.08 158.405 2741.26 147.855 2741.73 136.862 cv
2741.73 136.859 2741.73 136.85 2741.73 136.846 cv
2741.74 136.805 2741.74 136.765 2741.74 136.723 cv
2741.74 136.71 2741.74 136.693 2741.74 136.679 cv
2741.74 136.627 2741.75 136.578 2741.75 136.526 cv
2741.75 136.522 2741.75 136.519 2741.75 136.515 cv
2741.75 136.464 2741.75 136.42 2741.75 136.368 cv
2741.75 136.361 2741.75 136.356 2741.75 136.349 cv
2741.76 136.249 2741.76 136.149 2741.77 136.049 cv
2741.77 136.039 2741.77 136.026 2741.77 136.016 cv
2741.77 135.978 2741.77 135.937 2741.77 135.899 cv
2741.77 135.881 2741.77 135.867 2741.77 135.849 cv
2741.77 135.818 2741.77 135.783 2741.78 135.752 cv
2741.78 135.732 2741.78 135.703 2741.78 135.682 cv
2741.78 135.654 2741.78 135.62 2741.78 135.592 cv
2741.78 135.568 2741.78 135.54 2741.78 135.516 cv
2741.78 135.488 2741.78 135.458 2741.78 135.43 cv
2741.79 135.406 2741.79 135.374 2741.79 135.35 cv
2741.79 135.318 2741.79 135.281 2741.79 135.25 cv
2741.79 135.229 2741.79 135.205 2741.79 135.184 cv
2741.79 135.157 2741.79 135.125 2741.79 135.097 cv
2741.79 135.073 2741.8 135.041 2741.8 135.016 cv
2741.8 134.923 2741.8 134.823 2741.8 134.729 cv
2741.8 134.716 2741.8 134.698 2741.8 134.684 cv
2741.8 134.66 2741.81 134.638 2741.81 134.614 cv
2741.81 134.582 2741.81 134.547 2741.81 134.516 cv
2741.81 134.506 2741.81 134.498 2741.81 134.488 cv
2741.81 134.443 2741.81 134.395 2741.81 134.35 cv
2741.81 134.336 2741.81 134.326 2741.81 134.313 cv
2741.81 134.271 2741.81 134.226 2741.81 134.184 cv
2741.81 134.153 2741.82 134.122 2741.82 134.09 cv
2741.82 134.066 2741.82 134.042 2741.82 134.018 cv
2741.82 133.98 2741.82 133.944 2741.82 133.906 cv
2741.82 133.888 2741.82 133.868 2741.82 133.851 cv
2741.82 133.82 2741.82 133.791 2741.82 133.76 cv
2741.82 133.735 2741.82 133.708 2741.82 133.684 cv
2741.82 133.666 2741.82 133.651 2741.82 133.633 cv
2741.82 133.539 2741.82 133.444 2741.83 133.35 cv
2741.83 133.09 2741.83 132.827 2741.83 132.566 cv
2741.83 132.492 2741.83 132.42 2741.83 132.346 cv
2741.83 132.346 li
2741.83 132.346 li
2741.83 132.346 li
2741.83 75.1462 2695.46 28.7763 2638.26 28.7667 cv
2638.26 28.7667 li
2638.26 28.7667 li
2638.63 28.8867 li
2295.13 28.8867 li
2294.98 28.7667 li
2237.77 28.7667 2191.4 75.1462 2191.4 132.346 cv
2191.4 132.346 li
2191.4 132.346 li
2191.4 189.547 2237.77 235.917 2294.98 235.917 cv
2295.13 235.886 li
2638.6 235.886 li
2638.26 235.917 li
2638.26 235.917 li
f
2638.28 235.917 mo
2638.27 235.917 2638.26 235.917 2638.26 235.917 cv
2638.63 235.886 li
2638.6 235.886 li
2681.83 235.773 2718.82 209.157 2734.21 171.426 cv
2718.78 209.255 2681.65 235.917 2638.28 235.917 cv
2638.26 235.917 mo
2638.26 235.917 li
2734.21 171.424 mo
2734.23 171.375 2734.24 171.329 2734.26 171.28 cv
2734.24 171.329 2734.23 171.375 2734.21 171.424 cv
2734.27 171.278 mo
2734.28 171.232 2734.3 171.184 2734.32 171.138 cv
2734.3 171.184 2734.28 171.232 2734.27 171.278 cv
2734.33 171.127 mo
2734.34 171.084 2734.36 171.035 2734.38 170.992 cv
2734.36 171.038 2734.34 171.081 2734.33 171.127 cv
2734.39 170.98 mo
2734.4 170.94 2734.42 170.894 2734.44 170.854 cv
2734.42 170.897 2734.4 170.937 2734.39 170.98 cv
2734.45 170.822 mo
2734.46 170.786 2734.48 170.749 2734.49 170.712 cv
2734.48 170.749 2734.46 170.786 2734.45 170.822 cv
2734.51 170.673 mo
2734.52 170.637 2734.54 170.603 2734.55 170.566 cv
2734.54 170.603 2734.52 170.637 2734.51 170.673 cv
2734.57 170.525 mo
2734.58 170.489 2734.59 170.457 2734.61 170.42 cv
2734.59 170.457 2734.58 170.489 2734.57 170.525 cv
2734.63 170.378 mo
2734.64 170.345 2734.65 170.313 2734.66 170.279 cv
2734.65 170.313 2734.64 170.345 2734.63 170.378 cv
2734.69 170.222 mo
2734.7 170.194 2734.71 170.163 2734.72 170.135 cv
2734.71 170.163 2734.7 170.194 2734.69 170.222 cv
2734.75 170.073 mo
2734.76 170.048 2734.77 170.018 2734.78 169.993 cv
2734.77 170.021 2734.76 170.045 2734.75 170.073 cv
2734.81 169.918 mo
2734.81 169.897 2734.82 169.87 2734.83 169.849 cv
2734.82 169.874 2734.82 169.894 2734.81 169.918 cv
2734.86 169.77 mo
2734.87 169.749 2734.88 169.726 2734.89 169.704 cv
2734.88 169.726 2734.87 169.749 2734.86 169.77 cv
2734.92 169.618 mo
2734.93 169.596 2734.94 169.58 2734.95 169.558 cv
2734.94 169.577 2734.93 169.6 2734.92 169.618 cv
2734.98 169.469 mo
2734.99 169.451 2734.99 169.432 2735 169.414 cv
2734.99 169.433 2734.99 169.451 2734.98 169.469 cv
2735.04 169.316 mo
2735.04 169.301 2735.05 169.285 2735.06 169.269 cv
2735.05 169.285 2735.04 169.301 2735.04 169.316 cv
2735.09 169.169 mo
2735.1 169.154 2735.11 169.138 2735.11 169.122 cv
2735.11 169.138 2735.1 169.154 2735.09 169.169 cv
2735.15 169.012 mo
2735.16 169.002 2735.16 168.991 2735.17 168.981 cv
2735.16 168.994 2735.16 168.999 2735.15 169.012 cv
2735.21 168.862 mo
2735.21 168.853 2735.22 168.844 2735.22 168.834 cv
2735.22 168.844 2735.21 168.853 2735.21 168.862 cv
2735.27 168.713 mo
2735.27 168.704 2735.27 168.696 2735.28 168.686 cv
2735.27 168.693 2735.27 168.707 2735.27 168.713 cv
2735.32 168.564 mo
2735.32 168.557 2735.33 168.546 2735.33 168.54 cv
2735.33 168.547 2735.32 168.557 2735.32 168.564 cv
2735.38 168.41 mo
2735.38 168.403 2735.38 168.402 2735.39 168.396 cv
2735.38 168.402 2735.38 168.403 2735.38 168.41 cv
2735.44 168.259 mo
2735.44 168.256 2735.44 168.252 2735.44 168.249 cv
2735.44 168.252 2735.44 168.256 2735.44 168.259 cv
2741.73 136.862 mo
2741.73 136.859 2741.73 136.85 2741.73 136.846 cv
2741.73 136.85 2741.73 136.859 2741.73 136.862 cv
2741.74 136.723 mo
2741.74 136.71 2741.74 136.693 2741.74 136.679 cv
2741.74 136.693 2741.74 136.71 2741.74 136.723 cv
2741.75 136.526 mo
2741.75 136.522 2741.75 136.519 2741.75 136.515 cv
2741.75 136.519 2741.75 136.522 2741.75 136.526 cv
2741.75 136.368 mo
2741.75 136.364 2741.75 136.352 2741.75 136.349 cv
2741.75 136.356 2741.75 136.361 2741.75 136.368 cv
2741.77 136.049 mo
2741.77 136.035 2741.77 136.03 2741.77 136.016 cv
2741.77 136.026 2741.77 136.039 2741.77 136.049 cv
2741.77 135.899 mo
2741.77 135.881 2741.77 135.867 2741.77 135.849 cv
2741.77 135.867 2741.77 135.881 2741.77 135.899 cv
2741.78 135.752 mo
2741.78 135.728 2741.78 135.706 2741.78 135.682 cv
2741.78 135.703 2741.78 135.732 2741.78 135.752 cv
2741.78 135.592 mo
2741.78 135.565 2741.78 135.544 2741.78 135.516 cv
2741.78 135.54 2741.78 135.568 2741.78 135.592 cv
2741.78 135.43 mo
2741.79 135.402 2741.79 135.377 2741.79 135.35 cv
2741.79 135.374 2741.79 135.406 2741.78 135.43 cv
2741.79 135.25 mo
2741.79 135.226 2741.79 135.208 2741.79 135.184 cv
2741.79 135.205 2741.79 135.229 2741.79 135.25 cv
2741.79 135.097 mo
2741.79 135.07 2741.8 135.044 2741.8 135.016 cv
2741.8 135.041 2741.79 135.073 2741.79 135.097 cv
2741.8 134.729 mo
2741.8 134.712 2741.8 134.702 2741.8 134.684 cv
2741.8 134.698 2741.8 134.716 2741.8 134.729 cv
2741.81 134.614 mo
2741.81 134.582 2741.81 134.547 2741.81 134.516 cv
2741.81 134.547 2741.81 134.582 2741.81 134.614 cv
2741.81 134.488 mo
2741.81 134.443 2741.81 134.395 2741.81 134.35 cv
2741.81 134.395 2741.81 134.443 2741.81 134.488 cv
2741.81 134.313 mo
2741.81 134.271 2741.81 134.226 2741.81 134.184 cv
2741.81 134.226 2741.81 134.271 2741.81 134.313 cv
2741.82 134.09 mo
2741.82 134.066 2741.82 134.042 2741.82 134.018 cv
2741.82 134.042 2741.82 134.066 2741.82 134.09 cv
2741.82 133.906 mo
2741.82 133.888 2741.82 133.868 2741.82 133.851 cv
2741.82 133.868 2741.82 133.888 2741.82 133.906 cv
2741.82 133.76 mo
2741.82 133.735 2741.82 133.708 2741.82 133.684 cv
2741.82 133.708 2741.82 133.735 2741.82 133.76 cv
2741.82 133.633 mo
2741.82 133.54 2741.82 133.444 2741.83 133.35 cv
2741.82 133.444 2741.82 133.539 2741.82 133.633 cv
2741.83 132.566 mo
2741.83 132.493 2741.83 132.42 2741.83 132.346 cv
2741.83 132.42 2741.83 132.492 2741.83 132.566 cv
2741.83 132.346 mo
2741.83 75.1462 2695.46 28.7763 2638.26 28.7667 cv
2638.26 28.7667 li
2695.46 28.7763 2741.83 75.1462 2741.83 132.346 cv
2741.83 132.346 li
2191.4 132.346 mo
2191.4 132.346 li
2191.4 75.1462 2237.77 28.7667 2294.98 28.7667 cv
2295.13 28.8867 li
2638.63 28.8867 li
2295.13 28.8867 li
2294.98 28.7667 li
2237.77 28.7667 2191.4 75.1462 2191.4 132.346 cv
1 /0 /CSD get_res sepcs
.146867 sep
f
grestore
gsave
2293.63 234.387 mo
2637.13 234.387 li
2636.82 234.476 li
2694.02 234.487 2740.39 188.106 2740.39 130.906 cv
2740.39 73.7067 2694.02 27.3368 2636.82 27.3264 cv
2637.13 27.3864 li
2293.63 27.3864 li
2293.54 27.3264 li
2236.33 27.3264 2189.96 73.7067 2189.96 130.906 cv
2189.96 188.106 2236.33 234.476 2293.54 234.476 cv
2293.63 234.387 li
eclp
2189.21 235.227 mo
2741.14 235.227 li
2741.14 26.5767 li
2189.21 26.5767 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [2618.05 2343.66 2618.05 2552.31 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!9!!!!8!!!!8!!!!8!!!!7!!!!7!!!!7!!!!6!!!!6!!!!6!!!!5!!!!5!!!!5!!!!4!!!!4!!!!4
!!!!3!!!!3!!!!2!!!!2!!!!2!!!!1!!!!1!!!!1!!!!0!!!!0!!!!0!!!!/!!!!/!!!!/!!!!.!!!!.
!!!!-!!!!-!!!!-!!!!,!!!!,!!!!+!!!!+!!!!+!!!!*!!!!*!!!!)!!!!)!!!!)!!!!(!!!!(!!!!'
!!!!'!!!!'!!!!&!!!!&!!!!%!!!!%!!!!%!!!!$!!!!$!!!!#!!!!#!!!!#!!!!"!!!!"z!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /5 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~(Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m'+toj&eYfi&eYfi
&eYcg&J5Te&J5Qc&.fBa&.fBa&.f?_%hB0]%hB0]%hB-[%LrsY%LrsY%LrpW%1NaU%1NaU%1N^S$k*OQ
$k*OP$O[=M$O[=M$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP88
"U,&5"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%zz!!!!!~>
]
>>
2618.05 2343.66 2618.05 2552.31 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/5 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
2293.63 234.386 mo
2637.13 234.386 li
2636.82 234.477 li
2694.02 234.477 2740.39 188.106 2740.39 130.906 cv
2740.39 73.7065 2694.02 27.3264 2636.82 27.3264 cv
2637.13 27.3865 li
2293.63 27.3865 li
2293.54 27.3264 li
2236.33 27.3264 2189.96 73.7065 2189.96 130.906 cv
2189.96 188.106 2236.33 234.477 2293.54 234.477 cv
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/F <1C60D8A8C9B770DA42EB776051437272AB3109214F2F5AF299B91EDE1F76
8C5024668BC49B69066FA908CF8FE87EDFDF17A758EE488BEC994A194C62BD1C
9426343C7C81CA3B3F963FDAD914A0EC9F4FE665084402A52314B863A06B82A1
2C3F91EE9C0F2B145AA7D2782C4C7297D5A7A4C8227440D2EB6A6858EEAF3E8D
5172513D85C8059F336BE8B10563AA3DFEF476A6E0B2054B979D1F9B46798507
76A59C7497BC538F93679A65B973B2A534700FFE8CC98CDC2940E7759A9043FA
0F4AD602EBE420E53281F2FA075E541FDAF915055861D63FE68E0F45> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 70 /F put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 12{/.notdef}rp /question /.notdef /A /B /.notdef 
/D /.notdef /F 2{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp 
/R /S 5{/.notdef}rp /Y 7{/.notdef}rp /a /b /c 
/d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /m 
/n /o /p /q /r /s /t /u 
/v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2287.68 103.906 mo
(F)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2329.03 103.906 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2349.69 103.906 mo
(n)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2396.97 103.906 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2417.63 103.906 mo
(s)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/h <1C60D8A8C9B78E05EAADB0123115B3BD5BA83FAABE276A1BF5A23DB55CF4
C30D8A20FB7C70B167834EB7C5767A7762DBDEADBE99BB9DD1507EDF7CB5B44C
FB5AE7F50CE798A09AFFC2F8A1E21C8BA96A3248C2464366A8BF234A7465BA6B
08C9AB7474ED94583744D778660448C601BC1D9C2E8788B65F173F45C272BBE3
CD6AC55E870CEE94D478E3D51C8A2E608A02982A9D048914B7569407A83B9D3C
DA9FE7ECB2AF4F7816F117CC85330A774976280DEB1A8C317A8A170186F61B3F
5FC1D130A0DA1A6A5AE24C0FB08191CD76F47EDEDB0EAC8DE369D515B3B14661
497F94A2412A37D63D31ABC4AE50DD37B3DDB58CFDBCD2A17246A6058BA85E12
DAD2711083774A128264C809F70CFC31D164703798D4642E5D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 104 /h put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 12{/.notdef}rp /question /.notdef /A /B /.notdef 
/D /.notdef /F 2{/.notdef}rp /I 4{/.notdef}rp /N 3{/.notdef}rp 
/R /S 5{/.notdef}rp /Y 7{/.notdef}rp /a /b /c 
/d /e /f /.notdef /h /i 2{/.notdef}rp /l 
/m /n /o /p /q /r /s /t 
/u /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2452.83 103.906 mo
(h)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2500.11 103.906 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2520.46 103.906 mo
(t)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2550.61 103.906 mo
(h)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2597.89 103.906 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2642.67 103.906 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2275.33 211.906 mo
(p)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2322.62 211.906 mo
(r)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2353.99 211.906 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2401.45 211.906 mo
(c)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2439.51 211.906 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2484.29 211.906 mo
(d)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2531.58 211.906 mo
(u)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2578.86 211.906 mo
(r)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
2610.24 211.906 mo
(e)sh
775.629 668.637 mo
775.629 668.637 li
773.392 667.136 li
777.867 667.136 li
775.629 668.637 li
1 /0 /CSD get_res sepcs
.146867 sep
f
777.867 667.136 mo
773.392 667.136 li
582.13 538.886 li
775.629 408.386 li
969.129 538.886 li
777.867 667.136 li
.0784314 .0901961 0 .133333 cmyk
f
gsave
775.629 408.386 mo
582.13 538.886 li
775.629 668.637 li
969.129 538.886 li
775.629 408.386 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
775.63 671.635 mo
775.046 671.635 774.463 671.466 773.959 671.128 cv
770.243 668.637 li
775.629 668.637 li
781.016 668.637 li
777.3 671.128 li
776.797 671.466 776.213 671.635 775.63 671.635 cv
1 /0 /CSD get_res sepcs
.0976547 sep
f
781.016 668.637 mo
775.629 668.637 li
777.867 667.136 li
783.253 667.136 li
781.016 668.637 li
775.629 668.637 mo
770.243 668.637 li
768.006 667.136 li
773.392 667.136 li
775.629 668.637 li
1 /0 /CSD get_res sepcs
.146867 sep
f
783.253 667.136 mo
777.867 667.136 li
969.129 538.886 li
775.629 408.386 li
582.13 538.886 li
773.392 667.136 li
768.006 667.136 li
580.523 541.42 li
580.333 541.3 580.156 541.158 579.994 540.994 cv
579.99 540.989 579.984 540.984 579.98 540.979 cv
579.977 540.976 579.974 540.973 579.971 540.97 cv
579.732 540.723 579.542 540.442 579.404 540.139 cv
579.401 540.133 579.398 540.127 579.395 540.121 cv
579.395 540.119 579.394 540.118 579.393 540.116 cv
579.208 539.704 579.122 539.265 579.13 538.831 cv
579.13 538.826 579.13 538.822 579.13 538.817 cv
579.131 538.814 579.131 538.812 579.131 538.809 cv
579.14 538.446 579.214 538.082 579.359 537.736 cv
579.361 537.731 579.363 537.726 579.365 537.721 cv
579.366 537.719 579.367 537.716 579.368 537.713 cv
579.532 537.327 579.777 536.973 580.098 536.678 cv
580.103 536.674 580.107 536.67 580.112 536.666 cv
580.116 536.662 580.12 536.658 580.124 536.654 cv
580.241 536.549 580.365 536.455 580.494 536.371 cv
773.952 405.899 li
774.459 405.558 775.044 405.387 775.63 405.387 cv
776.215 405.387 776.801 405.558 777.307 405.899 cv
970.807 536.399 li
971.638 536.96 972.131 537.887 972.13 538.89 cv
972.128 539.894 971.634 540.82 970.8 541.378 cv
787.727 664.136 li
787.629 664.136 li
786.342 664.136 785.244 664.948 784.819 666.087 cv
783.253 667.136 li
.0784314 .0901961 0 .133333 cmyk
f
784.819 666.087 mo
785.244 664.948 786.342 664.136 787.629 664.136 cv
787.727 664.136 li
784.819 666.087 li
.321569 .301961 0 .392157 cmyk
f
grestore
gsave
580.63 537.386 mo
774.13 406.887 li
967.63 537.386 li
774.13 667.136 li
580.63 537.386 li
eclp
580.05 668.197 mo
968.07 668.197 li
968.07 406.396 li
580.05 406.396 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [926.93 1910.69 926.93 2172.49 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~4TIPD49.GC49.GC3rh;A3rh;A3rh8@3WM/?3WM/?3<2#=3<2#=3<1u<2ukl;2ukl;2ZP`92ZP`92ZP]8
2?5T72?5T72#oH52#oH51]T<31]T<31]T921B9011B9-01&s$/1&s!.0`Wm-0`Wm-0`Wj,0E<a+0E<^*
0*!U)0*!U)0*!R(/c[I'/c[F&/H@=%/H@=%/-%1#/-%1#.f_%!.f_%!.f_%!.KCmt.KCmt.0(ar.0(ar
-ibUp-ibUp-NGLo-NGIn-3,@m-3,=l,lf4k,lf1j,QK(i,QK%h,6/qg,6/nf+oiee+oibd+TNYc+TNYc
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /6 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~4?P_g4?GVd4$,Mc4$#D`3]];_3]];_3]T2\3B9)[3B/uX3&ilW3&ilW3&`cT2`EZS2`<QP2E!HO2E!HO
2E!EM2)R6K2)R3I1c.$G1c.!E1G^gC1G^gC1G^dA1,:U?1,:R=0ekC;0ek@90JG170JG170JG.50/"t3
0/"t2/hSb//hSb//hSb./M/P+/M/P*/1`>'/1`>&.k<,#.k<,".Olnt.Olnt.Olns.4H\p.4H\o-n$Jl
-n$Jl-RU8h-RU8h-71&d-71&d,pai`,pai`,U=W\,U=W\,9nEX,9nEX+sJ3T+sJ3T+X&!P+X&!P+<VdL
~>
0 <~3]];_3]];_3]];_3]T2\3B9)[3B/uX3&ilW3&ilW3&`cT2`EZS2`<QP2E!HO2E!HO2Dm?L2)R6K2)I-H
1c.$G1c.$G1c.!E1G^gC1G^dA1,:U?1,:R=0ekC;0ek@90JG170JG.50/"t30/"t30/"q1/hSb//hS_-
/M/P+/M/P+/M/P*/1`>'/1`>&.k<,#.k<,#.k<,".Olnt.Olns.4H\p.4H\p.4H\o-n$Jl-n$Jk-RU8h
-RU8h-71&d-71&d-71&d,pai`,pai`,U=W\,U=W\,9nEX,9nEX+sJ3T+sJ3T+X&!P+X&!P+<VdL+<VdL
~>
0 ]
>>
926.93 1910.69 926.93 2172.49 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/6 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
580.63 537.386 mo
774.13 406.886 li
967.63 537.386 li
774.13 667.136 li
580.63 537.386 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
633.28 561.297 mo
(I)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
653.436 561.297 mo
(f)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
677.85 561.297 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
695.936 561.297 mo
(q)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/less <1C60D8A8C9B7A9C0DC884E10B55EE8E37A7209588A7E667533FD1659C
59EE5A8649E16C9A6B3AB1D6FE6CF668C9581080527343BCB9B6C62B07028D48
B8B97177A0CF6FED3E2F2F88B539AA3E1738D62ED5E297FE94D0167169C5590D
8C5A8A31BD1EFAB8C236C0D0C9B885981FB207593DE2D2F86D30E7FBE59B8033
83105B55AC3AA1FE1D185D7696FF67D9844668B05EF69A3A4DABA3302B62E41A
99CEBAA6EA90D7C799DE8BF29AADAEBF549> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 60 /less put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 9{/.notdef}rp /less 2{/.notdef}rp /question /.notdef /A 
/B /.notdef /D /.notdef /F 2{/.notdef}rp /I 4{/.notdef}rp 
/N 3{/.notdef}rp /R /S 5{/.notdef}rp /Y 7{/.notdef}rp /a 
/b /c /d /e /f /.notdef /h /i 
2{/.notdef}rp /l /m /n /o /p /q /r 
/s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
737.97 561.297 mo
(<)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/equal <1C60D8A8C9B7A9C0DC8F9B7338FF6B63AA1670AFC8147E0CD433F08C
5474CAE852CF95D8BEF2933A0AC67D02F006C5EE66ED6AF10D191D0CA5E14F7D
1D5BF31125E3485CE5F272A5E1CBE632142ED17DE055EB41A08C9D91E3BBDE89
6311D75334C8FC29AB5D5A3A403F0A166D38532BF977EAA4D198B3FD9D3BC53D
D726926D4DD601386B9687A455DCF59F7A3F7C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 61 /equal put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 9{/.notdef}rp /less /equal /.notdef /question /.notdef 
/A /B /.notdef /D /.notdef /F 2{/.notdef}rp /I 
4{/.notdef}rp /N 3{/.notdef}rp /R /S 5{/.notdef}rp /Y 7{/.notdef}rp 
/a /b /c /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /m /n /o /p /q 
/r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
777.81 561.297 mo
(=)sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
817.654 561.297 mo
( )sh
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
835.74 561.297 mo
(p)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [79.9992 0 0 -79.9992 0 0 ]msf
877.77 561.297 mo
(?)sh
774.13 667.136 mo
774.13 688.886 li
607.63 688.886 li
607.63 868.886 li
1 /1 /CSD get_res sepcs
.749 sep
@
607.63 891.386 mo
592.63 861.386 li
592.52 861.626 li
601.97 866.346 613.08 866.346 622.52 861.626 cv
622.63 861.386 li
607.63 891.386 li
cp
ef
559.63 738.386 mo
655.63 738.386 li
655.63 654.386 li
559.63 654.386 li
cp
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
559.36 717.266 mo
(Y)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
593.471 717.266 mo
(e)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
628.301 717.266 mo
(s)sh
gsave
1943.38 633.387 mo
1254.13 633.387 li
1254.13 444.387 li
1943.38 444.387 li
1943.38 633.387 li
clp
1254.13 444.387 mo
1943.38 444.387 li
1943.38 633.387 li
1254.13 633.387 li
cp
.0784314 .0901961 0 .133333 cmyk
f
grestore
gsave
1254.13 444.387 mo
1254.13 633.387 li
1943.38 633.387 li
1943.38 444.387 li
1254.13 444.387 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
1943.38 636.387 mo
1254.13 636.387 li
1254.13 636.387 li
1254.07 636.387 1254 636.385 1253.94 636.38 cv
1252.37 636.281 1251.13 634.978 1251.13 633.387 cv
1251.13 633.364 1251.13 633.341 1251.13 633.319 cv
1251.13 444.387 li
1251.13 443.597 1251.45 442.824 1252.01 442.265 cv
1252.57 441.706 1253.34 441.387 1254.13 441.387 cv
1943.38 441.387 li
1944.17 441.387 1944.94 441.706 1945.5 442.265 cv
1946.06 442.824 1946.38 443.597 1946.38 444.387 cv
1946.38 633.387 li
1946.38 634.176 1946.06 634.949 1945.5 635.508 cv
1944.94 636.066 1944.17 636.387 1943.38 636.387 cv
1254.13 633.387 mo
1254.13 633.387 li
1943.38 633.387 li
1943.38 444.387 li
1254.13 444.387 li
1254.13 633.387 li
.0784314 .0901961 0 .133333 cmyk
f
grestore
gsave
1252.63 631.886 mo
1941.88 631.886 li
1941.88 442.887 li
1252.63 442.887 li
1252.63 631.886 li
eclp
1251.86 632.466 mo
1942.68 632.466 li
1942.68 442.116 li
1251.86 442.116 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [1750.14 1946.42 1750.14 2136.76 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~4TIPD49.GC49.GC3rh;A3rh;A3rh8@3WM/?3WM/?3<2#=3<2#=3<1u<2ukl;2ukl;2ZP`92ZP`92ZP]8
2?5T72?5T72#oH52#oH51]T<31]T<31]T921B9011B9-01&s$/1&s!.0`Wm-0`Wm-0`Wj,0E<a+0E<^*
0*!U)0*!U)0*!R(/c[I'/c[F&/H@=%/H@=%/-%1#/-%1#.f_%!.f_%!.f_%!.KCmt.KCmt.0(ar.0(ar
-ibUp-ibUp-NGLo-NGIn-3,@m-3,=l,lf4k,lf1j,QK(i,QK%h,6/qg,6/nf+oiee+oibd+TNYc+TNYc
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /7 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~4?P_g4?GVd4$,Mc4$#D`3]];_3]];_3]T2\3B9)[3B/uX3&ilW3&ilW3&`cT2`EZS2`<QP2E!HO2E!HO
2E!EM2)R6K2)R3I1c.$G1c.!E1G^gC1G^gC1G^dA1,:U?1,:R=0ekC;0ek@90JG170JG170JG.50/"t3
0/"t2/hSb//hSb//hSb./M/P+/M/P*/1`>'/1`>&.k<,#.k<,".Olnt.Olnt.Olns.4H\p.4H\o-n$Jl
-n$Jl-RU8h-RU8h-71&d-71&d,pai`,pai`,U=W\,U=W\,9nEX,9nEX+sJ3T+sJ3T+X&!P+X&!P+<VdL
~>
0 <~3]];_3]];_3]];_3]T2\3B9)[3B/uX3&ilW3&ilW3&`cT2`EZS2`<QP2E!HO2E!HO2Dm?L2)R6K2)I-H
1c.$G1c.$G1c.!E1G^gC1G^dA1,:U?1,:R=0ekC;0ek@90JG170JG.50/"t30/"t30/"q1/hSb//hS_-
/M/P+/M/P+/M/P*/1`>'/1`>&.k<,#.k<,#.k<,".Olnt.Olns.4H\p.4H\p.4H\o-n$Jl-n$Jk-RU8h
-RU8h-71&d-71&d-71&d,pai`,pai`,U=W\,U=W\,9nEX,9nEX+sJ3T+sJ3T+X&!P+X&!P+<VdL+<VdL
~>
0 ]
>>
1750.14 1946.42 1750.14 2136.76 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/7 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
1252.63 631.886 mo
1941.88 631.886 li
1941.88 442.886 li
1252.63 442.886 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1287.41 564.297 mo
(A)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B786996D057DD9ECF9C9FE8F34FA37C423F5980BE7D786896E
9EA4586FE497E33F39AB964ACDD89D26E486E7ED8F0DC4FBA51D700DEE7B191A
63C96E17E766A2327A1204635F41F9C49078958E183EEFB6984182E65EDA1F8B
441B6E4AB84D91335816B7734083F4F4FD892A7BCA407D109F62E4EE67EE6C6C
391D2BD510DDC6B5D5CC22D17AC103A7D2131E72C317F3BAC05393ECDC293B2E
CAB1568ADB4263F35E5423335599179483E82F60A5AD75F98D7415F42E948543
DCCF85D6B636864749244B612B22564859487973200635BA3DA904CEFECDBCC8
B01666891D22D161E426CFA4178953236E0C0CC024ABFD25C62F85F4D9DE2FD9
3AA1C37E4CC144A605E56698682CB24FC97AD3BD836F4B14863B5FD90FDACDF5
15F988F6144041EE6DE72D3696AC15A7CD39C4F2A134E2CF9BC30D1C6766E73F
C3D1AD93F0B1FE898AB1ACC306D4BD68327F6E0E6DF2C6B68065348695779B77
D4> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 67 /C put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 9{/.notdef}rp /less /equal /.notdef /question /.notdef 
/A /B /C /D /.notdef /F 2{/.notdef}rp /I 
4{/.notdef}rp /N 3{/.notdef}rp /R /S 5{/.notdef}rp /Y 7{/.notdef}rp 
/a /b /c /d /e /f /.notdef /h 
/i 2{/.notdef}rp /l /m /n /o /p /q 
/r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1339.49 564.297 mo
(C)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1387.47 564.297 mo
(B)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1436.43 564.297 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1456.77 564.297 mo
(b)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1504.06 564.297 mo
(a)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1547.17 564.297 mo
(c)sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B7741C17C040FAF49715AF86267B27DBAE3194A95B5AD38B89
D87080BE0BB58EB11BB1E803576225E95586AD26F7B3D48F1476D58A2A86ABCA
434890634DF0C762F9C7E8BF973278771D68A2AB608CE3A494AF06CB6B758E30
92B2656DD102F8A88BFE70D0C2C45E36E8C5A354AE77BB4C9BFE5EBC116B51C4
E77B42DAC17192DF74E54FF0A0E8E65A4C44D1E8C03486D513E268A349A6666B
8D2CDEA67E5546A4296B6217CED1A53C88AEB021F8A41388EB02CAFBBF0D0089
75299F905C6726B8AA428B45A937A574480AA1CF753F93A4428CB2EBA3931191
4898272650C4BA4DDD9656B5AC379C0EC3487701AF2D0DE9556D9F04967DEABC
542665F11772DF361C1B5D5C1660B923FBE08FB5DD4C469DDCE72B7887844550
CCFC42576B209CD2E7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 9{/.notdef}rp /less /equal /.notdef /question /.notdef 
/A /B /C /D /.notdef /F 2{/.notdef}rp /I 
4{/.notdef}rp /N 3{/.notdef}rp /R /S 5{/.notdef}rp /Y 7{/.notdef}rp 
/a /b /c /d /e /f /.notdef /h 
/i /.notdef /k /l /m /n /o /p 
/q /r /s /t /u /v 2{/.notdef}rp /y 
134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1585.23 564.297 mo
(k)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1626.14 564.297 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1673.6 564.297 mo
(f)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1701.07 564.297 mo
(f)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1728.53 564.297 mo
( )sh
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B63EE6FBAC6FE430D4C472A6935E9E4E2C9D9C4ACB16C71B03
2F18FE575C6256D49A59D28FA55A64B8F4250FF7EF0F6440082EA55E50C72515
DB779850B563F18307F56C5AA0381D53908E3AA5F7BCF9144924A2084F07EBED
39B22484214EF3445C58E2A31D32B14DA61C85069056233A7D69EDE7D6EAE909
5E582A487ACDCAAEC9B696D9F56177DFCBED54097D97E802545B35B3AFF09395
2061133C2164E4C99E14CC43C1C5FB57627E18AF07CB58B73BD1200A30349006
897A1314704F9560B7EE765A767050BD02ED4C3CB6891E5FA019219CAF9310B1
24D9AF8C5E5547F89705BF1E11BA18C8C6F80D46BFB4F08BBC66AE29B2E81702
937C5AB98472DEAC74C8794C288DBFA220B7F896E2B36F9ECF06883A45930B94
0AFF017D9F3C209761AB734C6F3F199505CD5974FFC0917AC4E2B317FA15146D
5F8C2D8B2A0366984D71D35A1EAF824F2AB69DDEEC3EC469FA5796A63F524D8E
C40E97981C19E148BD51BA03455ACA08443ED8962BD3AB9091> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 119 /w put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 9{/.notdef}rp /less /equal /.notdef /question /.notdef 
/A /B /C /D /.notdef /F 2{/.notdef}rp /I 
4{/.notdef}rp /N 3{/.notdef}rp /R /S 5{/.notdef}rp /Y 7{/.notdef}rp 
/a /b /c /d /e /f /.notdef /h 
/i /.notdef /k /l /m /n /o /p 
/q /r /s /t /u /v /w /.notdef 
/y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1748.88 564.297 mo
(w)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1813.21 564.297 mo
(a)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1856.32 564.297 mo
(i)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1876.98 564.297 mo
(t)sh
967.63 537.386 mo
985.63 537.386 li
985.58 537.297 li
985.58 535.636 986.92 534.297 988.58 534.297 cv
990.24 534.297 991.58 535.636 991.58 537.297 cv
991.63 537.386 li
1230.13 537.386 li
1 /1 /CSD get_res sepcs
.749 sep
@
1252.63 537.386 mo
1222.63 552.386 li
1222.61 552.297 li
1227.33 542.856 1227.33 531.736 1222.61 522.296 cv
1222.63 522.386 li
1252.63 537.386 li
cp
ef
1068.88 579.386 mo
1151.38 579.386 li
1151.38 495.386 li
1068.88 495.386 li
cp
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1068.91 558.297 mo
(N)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1114.09 558.297 mo
(o)sh
1873.63 958.136 mo
1323.13 958.136 li
1323.13 714.386 li
1873.63 714.386 li
1873.63 958.136 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
1323.13 714.386 mo
1323.13 958.136 li
1873.63 958.136 li
1873.63 714.386 li
1323.13 714.386 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
1873.63 961.136 mo
1323.13 961.136 li
1323.13 961.136 li
1321.47 961.136 1320.13 959.794 1320.13 958.136 cv
1320.13 958.136 li
1320.13 958.136 li
1320.13 958.136 li
1320.13 714.386 li
1320.13 713.597 1320.45 712.823 1321.01 712.265 cv
1321.57 711.706 1322.34 711.386 1323.13 711.386 cv
1873.63 711.386 li
1874.42 711.386 1875.19 711.706 1875.75 712.265 cv
1876.31 712.824 1876.63 713.597 1876.63 714.386 cv
1876.63 958.136 li
1876.63 958.927 1876.31 959.699 1875.75 960.258 cv
1875.19 960.816 1874.42 961.136 1873.63 961.136 cv
1323.13 958.136 mo
1323.13 958.136 li
1873.63 958.136 li
1873.63 714.386 li
1323.13 714.386 li
1323.13 958.136 li
f
grestore
gsave
1322.38 956.636 mo
1872.13 956.636 li
1872.13 712.887 li
1322.38 712.887 li
1322.38 956.636 li
eclp
1321.3 957.586 mo
1873.23 957.586 li
1873.23 712.306 li
1321.3 712.306 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [1750.14 1621.3 1750.14 1866.58 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!9!!!!8!!!!8!!!!8!!!!7!!!!7!!!!7!!!!6!!!!6!!!!6!!!!5!!!!5!!!!5!!!!4!!!!4!!!!4
!!!!3!!!!3!!!!2!!!!2!!!!2!!!!1!!!!1!!!!1!!!!0!!!!0!!!!0!!!!/!!!!/!!!!/!!!!.!!!!.
!!!!-!!!!-!!!!-!!!!,!!!!,!!!!+!!!!+!!!!+!!!!*!!!!*!!!!)!!!!)!!!!)!!!!(!!!!(!!!!'
!!!!'!!!!'!!!!&!!!!&!!!!%!!!!%!!!!%!!!!$!!!!$!!!!#!!!!#!!!!#!!!!"!!!!"z!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /8 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~(Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m'+toj&eYfi&eYfi
&eYcg&J5Te&J5Qc&.fBa&.fBa&.f?_%hB0]%hB0]%hB-[%LrsY%LrsY%LrpW%1NaU%1NaU%1N^S$k*OQ
$k*OP$O[=M$O[=M$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP88
"U,&5"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%zz!!!!!~>
]
>>
1750.14 1621.3 1750.14 1866.58 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/8 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
1322.38 956.636 mo
1872.13 956.636 li
1872.13 712.886 li
1322.38 712.886 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1443.26 807.947 mo
(C)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1491.25 807.947 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1538.71 807.947 mo
(l)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1559.36 807.947 mo
(l)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1580.02 807.947 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1600.67 807.947 mo
(s)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1635.87 807.947 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1656.53 807.947 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1703.99 807.947 mo
(n)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1751.27 807.947 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1372.09 915.947 mo
(b)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1419.38 915.947 mo
(a)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1462.49 915.947 mo
(c)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1500.54 915.947 mo
(k)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1541.45 915.947 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1588.92 915.947 mo
(f)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1616.38 915.947 mo
(f)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1643.85 915.947 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1664.19 915.947 mo
(w)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1728.53 915.947 mo
(a)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1771.64 915.947 mo
(i)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1792.29 915.947 mo
(t)sh
852.13 1801.14 mo
1191.13 1801.14 li
1191.13 1329.39 li
1191.13 1328.6 1191.45 1327.82 1192.01 1327.27 cv
1192.57 1326.71 1193.34 1326.39 1194.13 1326.39 cv
1215.88 1326.39 li
1217.54 1326.39 1218.88 1327.73 1218.88 1329.39 cv
1218.88 1331.04 1217.54 1332.39 1215.88 1332.39 cv
1197.13 1332.39 li
1197.13 1804.14 li
1197.13 1804.93 1196.81 1805.7 1196.25 1806.26 cv
1195.69 1806.82 1194.92 1807.14 1194.13 1807.14 cv
852.13 1807.14 li
850.473 1807.14 849.13 1805.79 849.13 1804.14 cv
849.13 1802.48 850.473 1801.14 852.13 1801.14 cv
1 /1 /CSD get_res sepcs
.749 sep
f
1215.88 1329.39 mo
1185.88 1344.39 li
1185.75 1344.71 li
1190.48 1335.26 1190.48 1324.15 1185.75 1314.71 cv
1185.88 1314.39 li
1215.88 1329.39 li
ef
1153.63 1769.64 mo
1235.38 1769.64 li
1235.38 1685.64 li
1153.63 1685.64 li
1153.63 1769.64 li
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1153.44 1748.54 mo
(N)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1198.63 1748.54 mo
(o)sh
1597.63 442.886 mo
1597.63 385.886 li
774.13 385.886 li
774.13 406.886 li
1 /1 /CSD get_res sepcs
.749 sep
@
774.13 406.886 mo
759.13 376.886 li
759.06 377.146 li
768.5 381.866 779.62 381.866 789.06 377.146 cv
789.13 376.886 li
774.13 406.886 li
cp
ef
1322.38 835.136 mo
988.63 835.136 li
988.63 385.886 li
774.13 385.886 li
774.13 406.886 li
@
774.13 406.886 mo
759.13 376.886 li
759.06 377.146 li
768.5 381.866 779.62 381.866 789.06 377.146 cv
789.13 376.886 li
774.13 406.886 li
cp
ef
2465.38 1246.14 mo
2465.38 1105.89 li
@
2465.38 1083.39 mo
2480.38 1113.39 li
2480.18 1113.06 li
2470.74 1108.34 2459.62 1108.34 2450.18 1113.06 cv
2450.38 1113.39 li
2465.38 1083.39 li
cp
ef
2465.38 479.636 mo
2465.38 256.886 li
@
2465.38 234.386 mo
2480.38 264.386 li
2480.18 264.477 li
2470.74 259.757 2459.62 259.757 2450.18 264.477 cv
2450.38 264.386 li
2465.38 234.386 li
cp
ef
2417.38 399.386 mo
2513.38 399.386 li
2513.38 315.386 li
2417.38 315.386 li
cp
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
2417.02 378.146 mo
(Y)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
2451.13 378.146 mo
(e)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
2485.96 378.146 mo
(s)sh
1180.63 287.636 mo
1180.63 308.636 li
774.13 308.636 li
774.13 384.386 li
1 /1 /CSD get_res sepcs
.749 sep
@
774.13 406.886 mo
759.13 376.886 li
759.06 377.146 li
768.5 381.866 779.62 381.866 789.06 377.146 cv
789.13 376.886 li
774.13 406.886 li
cp
ef
gsave
78.2095 174.076 mo
43.8595 174.076 li
43.8595 142.327 li
78.2095 142.327 li
78.2095 174.076 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/M <1C60D8A8C9B68A39A0A3DD2F1EDB806B8EBA2991979DEC8D258B1A02A190
6FD2B1CA205517F0A68C4C6A5BF2AC6E6CDCF7977F45552A42319D772D059495
9118289EBC1461685C8CF4E5DD263C4C1910B7D8FD4E5500044A8F06771B257F
C21C3072148523EDBD4AE8CCE0BCF86532F61410F6C0201E2ADF6D872A8FDBBE
97EA7C8789A51927AEAFFA42E03A39CC922DAB964B6BCFFA4430A330843D8297
EBD008ACDDBEFAE9E40226AF265DABF6CE80E6C4FB13353BC50063552BC66736
0325D0B42F7528AA00A89119A771AE5A7A3F69D8025BCAB7EBC18E2CEFCB7A52
A1D8652FE7D376D9B1F2CA62FEF82187CF27562517F2AA24976B64146E2D4DD2
87500E273B12ACFFC0C2B592A5CFA9E9511593BE31B739BECC693D9698B175F6
8FEC3CF86BC604ABD82815EBA74C3E98930057A86AF494D184AB704B672B8745> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 77 /M put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 9{/.notdef}rp /less /equal /.notdef /question /.notdef 
/A /B /C /D /.notdef /F 2{/.notdef}rp /I 
3{/.notdef}rp /M /N 3{/.notdef}rp /R /S 5{/.notdef}rp /Y 
7{/.notdef}rp /a /b /c /d /e /f /.notdef 
/h /i /.notdef /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/.notdef /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
39.6599 173.927 mo
(M)sh
grestore
gsave
99.9582 174.376 mo
84.4084 174.376 li
84.4084 150.227 li
99.9582 150.227 li
99.9582 174.376 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
82.4085 173.927 mo
(s)sh
grestore
gsave
124.064 182.826 mo
103.264 182.826 li
103.264 150.277 li
124.064 150.277 li
124.064 182.826 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7445140600976780BBEB6A3D2658D3A4C7F919C88C52D412C
8E364C5F7636792196FD221C121AC8A143979AFAA3A09359F0F2A21E651450F6
F05ACC0E82C2760ECA4A653600DE52AE0D5358458AF930D6BDEB0904E4313A0C
BCA78B5C6EE35CCCF928264F350C0A023EDD3B664C736748E408C524202A3326
D95C7DCABC59764E7D97C53C3E04189FF055F0A0F707215CE9EBCE6A5429EBED
17A701726A8DEDD69C85101530BFD06F1546D47732DA28D5440C29DB9FD39281
2122E25828F7402340CB2AAD1BBC054F22EBE3B4068E1189E1BBFDEDCE3380BE
2A1BC64D61665F8EA89BD12E55203D2F412C82771F2C0ABF3E56A249110A5F4D
FD7E943B7CBB3957D78564ABEBC14037C62116307C9CC2770007504568A496F0
E371B5E27EA91CE4ED6B158CDD56E512A87B38DA763ADE44907E57CB7229D283
C8A7D867519E31285088BE518A70B9193ED1297DE2FF3E929169124C3A44E72E
DA1A3B2C0E0DA57F0E79BC1C7BEFED8509DD8CC00683DBCDE9C2A776B95D5831
197913BF75A301F1EB13F5C4E48D99B31FDB0B54BB7B640060AFF7A1619C4EE7
C3CA0DE734198387C7205D8F2F952A1BC7A9DB628AB7F298888007AA604549FA
9EA5ECD6ED4A814A52FD636085B1A8D57F31E70472C30EB60858254A7B95E2F6
778797B84C60B2ED0823FE7265B0CE1B1A64D8F159C443134DC16E39D207947A
0FD5903276> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 5{/.notdef}rp 
/one /two 9{/.notdef}rp /less /equal /.notdef /question /.notdef 
/A /B /C /D /.notdef /F 2{/.notdef}rp /I 
3{/.notdef}rp /M /N 3{/.notdef}rp /R /S 5{/.notdef}rp /Y 
7{/.notdef}rp /a /b /c /d /e /f /g 
/h /i /.notdef /k /l /m /n /o 
/p /q /r /s /t /u /v /w 
/.notdef /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
101.964 173.927 mo
(g)sh
grestore
gsave
160.409 174.376 mo
138.559 174.376 li
138.559 141.877 li
160.409 141.877 li
160.409 174.376 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/zero <1C60D8A8C9B7A0860A0ABA2698AC8E090156BBF2C9C30ADDAE7DCB3D9
7848CC5D38A5C6D85B8937F2533AAB8D6BFA0DD62B7BCE11E4F148006AA53F16
B7661785227AEDEF098A1104625EF68DF52BAE87BC71C0E793E6FAD1A965E4D3
8BA9CF4CEDAADD0504EE4CE20EF80FE3B0F494717869AEF9FD48C1A316DF08AD
A9E5D4CE0C25CB68B43C1EB2B9FE55F89B0B22C758BDED5FDD580CE702C559F6
E1F276FBE929DD9A2C3557CE4E2CABBF3EDF814307556BE2579995A57ECC922B
3376DB39CC4DC2518F12025BDC7A3EE507BE357864FDBF8F62FBD571913B8657
13255C738D4AEB39D8820C2AC5F5D7DF55CB64B7CD192349742D481F16CF8009
5A893636D91177B06233710432F07D42A84BDDC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 48 /zero put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 4{/.notdef}rp 
/zero /one /two 9{/.notdef}rp /less /equal /.notdef /question 
/.notdef /A /B /C /D /.notdef /F 2{/.notdef}rp 
/I 3{/.notdef}rp /M /N 3{/.notdef}rp /R /S 5{/.notdef}rp 
/Y 7{/.notdef}rp /a /b /c /d /e /f 
/g /h /i /.notdef /k /l /m /n 
/o /p /q /r /s /t /u /v 
/w /.notdef /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
136.81 173.927 mo
(0)sh
grestore
175.301 205.511 mo
141.551 205.511 li
140.93 205.511 140.426 205.008 140.426 204.386 cv
140.426 203.765 140.93 203.262 141.551 203.262 cv
175.301 203.262 li
175.818 203.262 176.252 203.609 176.385 204.083 cv
176.484 203.563 176.941 203.171 177.49 203.171 cv
181.098 203.171 184.352 201.714 186.716 199.352 cv
188.917 197.149 190.332 194.172 190.515 190.855 cv
190.348 190.654 190.255 190.4 190.255 190.137 cv
190.255 178.936 li
190.255 178.315 190.758 177.811 191.38 177.811 cv
192.002 177.811 192.505 178.315 192.505 178.936 cv
192.505 189.384 li
192.685 189.588 192.785 189.853 192.785 190.126 cv
192.785 198.578 185.941 205.421 177.49 205.422 cv
176.973 205.422 176.538 205.074 176.406 204.6 cv
176.306 205.119 175.85 205.511 175.301 205.511 cv
121.301 205.511 mo
87.5515 205.511 li
86.9294 205.511 86.4259 205.008 86.4259 204.386 cv
86.4259 203.765 86.9294 203.262 87.5515 203.262 cv
121.301 203.262 li
121.922 203.262 122.426 203.765 122.426 204.386 cv
122.426 205.008 121.922 205.511 121.301 205.511 cv
67.3015 205.511 mo
33.5512 205.511 li
32.9299 205.511 32.4263 205.008 32.4263 204.386 cv
32.4263 203.765 32.9299 203.262 33.5512 203.262 cv
67.3015 203.262 li
67.9227 203.262 68.4263 203.765 68.4263 204.386 cv
68.4263 205.008 67.9227 205.511 67.3015 205.511 cv
14.6679 201.634 mo
14.3939 201.634 14.1192 201.534 13.9024 201.333 cv
11.0685 198.703 9.2318 195.001 9.03287 190.877 cv
8.85503 190.673 8.75462 190.409 8.75462 190.137 cv
8.75462 168.304 li
8.75462 167.683 9.25899 167.178 9.88025 167.178 cv
10.5015 167.178 11.0051 167.683 11.0051 168.304 cv
11.0051 189.408 li
11.1716 189.609 11.2653 189.864 11.2653 190.126 cv
11.2653 193.907 12.8672 197.299 15.4339 199.684 cv
15.8886 200.107 15.9151 200.819 15.4924 201.275 cv
15.2708 201.513 14.9698 201.634 14.6679 201.634 cv
191.38 159.811 mo
190.758 159.811 190.255 159.307 190.255 158.686 cv
190.255 127.886 li
190.255 127.614 190.352 127.357 190.523 127.157 cv
190.497 126.53 190.426 125.915 190.315 125.314 cv
190.201 124.703 190.605 124.116 191.215 124.003 cv
191.285 123.99 191.354 123.984 191.422 123.984 cv
191.954 123.984 192.426 124.362 192.527 124.903 cv
192.696 125.816 192.785 126.757 192.785 127.717 cv
192.785 127.995 192.684 128.258 192.505 128.46 cv
192.505 158.686 li
192.505 159.307 192.002 159.811 191.38 159.811 cv
9.88025 149.179 mo
9.25899 149.179 8.75462 148.675 8.75462 148.054 cv
8.75462 127.886 li
8.75462 127.615 8.85281 127.357 9.02495 127.156 cv
9.19891 122.335 11.6065 118.077 15.2394 115.396 cv
15.4404 115.248 15.6745 115.176 15.9067 115.176 cv
16.2516 115.176 16.5919 115.334 16.8125 115.633 cv
17.1816 116.133 17.0751 116.838 16.5755 117.207 cv
13.3524 119.588 11.2653 123.405 11.2653 127.717 cv
11.2653 127.983 11.1709 128.237 11.0051 128.436 cv
11.0051 148.054 li
11.0051 148.675 10.5015 149.179 9.88025 149.179 cv
176.906 114.762 mo
143.156 114.762 li
142.534 114.762 142.031 114.258 142.031 113.637 cv
142.031 113.016 142.534 112.511 143.156 112.511 cv
176.906 112.511 li
177.527 112.511 178.031 113.016 178.031 113.637 cv
178.031 114.258 177.527 114.762 176.906 114.762 cv
122.906 114.762 mo
89.1559 114.762 li
88.5346 114.762 88.0311 114.258 88.0311 113.637 cv
88.0311 113.016 88.5346 112.511 89.1559 112.511 cv
122.906 112.511 li
123.527 112.511 124.031 113.016 124.031 113.637 cv
124.031 114.258 123.527 114.762 122.906 114.762 cv
68.9059 114.762 mo
35.1555 114.762 li
34.5343 114.762 34.0307 114.258 34.0307 113.637 cv
34.0307 113.016 34.5343 112.511 35.1555 112.511 cv
68.9059 112.511 li
69.5271 112.511 70.0307 113.016 70.0307 113.637 cv
70.0307 114.258 69.5271 114.762 68.9059 114.762 cv
1 /0 /CSD get_res sepcs
.0976547 sep
f
2.25 lw
[33.75 20.25 ] 0 dsh
176.05 202.856 mo
183.88 202.856 190.22 196.516 190.22 188.687 cv
189.88 188.636 li
189.88 126.386 li
190.22 126.276 li
190.22 118.447 183.88 112.096 176.05 112.096 cv
176.38 112.136 li
22.6299 112.136 li
22.8799 112.096 li
15.0499 112.096 8.69994 118.447 8.69994 126.276 cv
8.37993 126.386 li
8.37993 188.636 li
8.69994 188.687 li
8.69994 196.516 15.0499 202.856 22.8799 202.856 cv
22.6299 202.886 li
176.38 202.886 li
.775753 .128634 1 0 cmyk
@
0 1 1 0 cmyk
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
38.2199 172.487 mo
(M)sh
80.9685 172.487 mo
(s)sh
100.524 172.487 mo
(g)sh
124.06 172.487 mo
( )sh
135.37 172.487 mo
(0)sh
gsave
388.586 523.886 mo
359.514 523.886 li
359.514 494.262 li
369.384 494.262 li
370.005 494.262 370.509 493.758 370.509 493.136 cv
370.509 492.516 370.005 492.011 369.384 492.011 cv
359.514 492.011 li
359.514 491.987 li
388.586 491.987 li
388.586 492.727 li
388.537 492.854 388.509 492.992 388.509 493.136 cv
388.509 493.281 388.537 493.419 388.586 493.546 cv
388.586 523.886 li
clp
359.514 491.987 mo
388.586 491.987 li
388.586 523.886 li
359.514 523.886 li
cp
.216617 .223056 .0440375 0 cmyk
f
.0784314 .0901961 0 .133333 cmyk
true set_gvm
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/A <1C60D8A8C9B7DDB68920BA932172B1499148A182E4E0E2EF78DBDBEEC6F5
2E0937C43799EEBB71FF689B6131266A457C81FF30F7FF7EBB30E51863467DCB
D28FE4B4C2B7091BA20F48D775B52AE015A417726578FFFF7D58968E5C957654
43C585F178FD6D4723D9DFE9FEC3370FED8ED508CCCBE152BC072DF4C5CBB932
6B03E214DD8865FCCF7DE5BAAD07E33C38BE3B0335D636FC50CFF6E14700E2A6
60D3C165A16A200BC57B83572B62314C80450F3226D83F7916F54AF40AF7E0FC
E1174C5501685FDA117D5A2044E5CEA0B3948A52353199CC> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXO+CALIBRI,Bold /Encoding get
dup 65 /A put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXO+CALIBRI,Bold*1 
[65{/.notdef}rp /A 190{/.notdef}rp]
XNCYXO+CALIBRI,Bold nf
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
358.88 523.737 mo
(A)sh
grestore
gsave
414.477 524.236 mo
391.126 524.236 li
391.126 494.262 li
414.477 494.262 li
414.477 524.236 li
414.477 492.011 mo
391.126 492.011 li
391.126 491.637 li
414.477 491.637 li
414.477 492.011 li
clp
391.126 491.637 mo
414.477 491.637 li
414.477 524.236 li
391.126 524.236 li
cp
.216617 .223056 .0440375 0 cmyk
f
.0784314 .0901961 0 .133333 cmyk
true set_gvm
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/C <1C60D8A8C9B78AC3254CB836613B50FEE731C2E5FF280A909853D6AAC757
04A475106F343DA61338D6EE17C81455E5E94E3F2741FBC5A7A55DD147D129E9
9F091EF153D9400A04C295AF15CFE8E5EF897CA1760331E3EC16FF6DDF59CBE4
B8B189FBC000E1020B39AD4C860C477A6DADD3B61FF9666F144B51FA295CD747
BE0B0975C46FB9A64CF31B5B38EC2E16C2393646605BF1D7CFFCC4A2898D2D56
C78772F400DB0DEED21E9AD336A75503A00BDBD615F8BA93E3CAB6C42A285B4A
EA5BF202EF5C37256592BD4040034E3A7EBDD1E055E2381646DDB411A05665A7
BE606403C9AFF5D744DFBFAE5AFB2DC42D9F6BC86ED0962C547BBABC78E279A5
3D52EEA95D4976CD7142776F2988E43A7BE44D2CDF85216C769CE74967C09EA4
8A353B8AE0C3F6529C709DBE56EBBF40E019180A2AC98F4F24B439D8B503726D
C1BB6799D23A36A5761BC46D9B39706FD587C314645EF07556EBA44DDF99582B
6E> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXO+CALIBRI,Bold /Encoding get
dup 67 /C put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXO+CALIBRI,Bold*1 
[65{/.notdef}rp /A /.notdef /C 188{/.notdef}rp]
XNCYXO+CALIBRI,Bold nf
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
389.178 523.737 mo
(C)sh
grestore
gsave
441.942 523.736 mo
419.092 523.736 li
419.092 494.262 li
423.384 494.262 li
424.005 494.262 424.509 493.758 424.509 493.136 cv
424.509 492.702 424.262 492.324 423.901 492.137 cv
441.942 492.137 li
441.942 523.736 li
clp
419.092 492.137 mo
441.942 492.137 li
441.942 523.736 li
419.092 523.736 li
cp
.216617 .223056 .0440375 0 cmyk
f
.0784314 .0901961 0 .133333 cmyk
true set_gvm
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/B <1C60D8A8C9B7EA3AB4AA72EA6C9D5822C36DC52B7506387C94A1506AC7A8
6F6C6E817505B93D6B1F29709160B4EF452103E7352B5CED61024312789493DA
B3A1688AC39E6903EA4A00E3E139036273229653E5808447AFAAD391AEFC3F4C
70E766347D8579A41765D38DA51DA0EF2D7BEB0451F92CB8E33AE964134753DE
AE0E5BB106164A8A9354B1BB848EFABCAD33366AABBC777436C5EB334C583856
A66F083B29A6362E3B41B25F7CC2F26283599EC14ED7CF660C2F0227F5936084
018183304E87A47F24A572F1381D6556499F96458CF482730D853BA67111A38A
C37D07C18A1AD81581AD700702DCBA687C421A9364E42F7A22415A5F2501C076
7C28D0EDE5CB57305E2F8EECCFDB4F291D92B72F0299EC24C0738625586CCDA8
E7BC7264AAD589C6D6C0DFC1333B66982AB1A07865F01153DF85CB0BF3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXO+CALIBRI,Bold /Encoding get
dup 66 /B put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXO+CALIBRI,Bold*1 
[65{/.notdef}rp /A /B /C 188{/.notdef}rp]
XNCYXO+CALIBRI,Bold nf
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
415.643 523.737 mo
(B)sh
grestore
gsave
361.899 582.762 mo
344.099 582.762 li
344.099 559.737 li
361.899 559.737 li
361.899 582.762 li
clp
344.099 559.737 mo
361.899 559.737 li
361.899 582.762 li
344.099 582.762 li
cp
.216617 .223056 .0440375 0 cmyk
f
.0784314 .0901961 0 .133333 cmyk
true set_gvm
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B719BD263F1C66E176AB1A9B9A5A3A8367D7DDD55624575D83
30769E89EDE2B210CAC0C33466D934E07EE8C5D0A40F156D15CC57AF923B2505
73D6A3F9259B0A3431793F366C2A4E1951E4FEDD7CFAEAA854A72A9831B3A189
34A1E3BA67B1825DD68D168A926FEDC2EA7260DFA821668535829AE8FBDD7974
81380CC39C4AF2C6ECADB05FF3DA8E4A111EB4A3E3B59FFB126A3A37C4B5A113
868987F4611BA41E12178776F476582469050F58D9C2434F2F75015CEE522ED8
E12899B67502531E8AB98B42F667383D35B65B55576BE7A1323FDACE70DEAB60
FF6C739F5C1FBD6BC404A862F611E798DE5F7D20626F50E2F0A84DB6262D7AA2
98F592743052BB8FB5A0340AD9FF86B3B347A6731F17F7E35046670F71F40967
A7BFAB9BA0179B380201FC6F3EA37CFED86A9E1255880201A87ECC18F17716BB
9085A306CE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXO+CALIBRI,Bold /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXO+CALIBRI,Bold*1 
[65{/.notdef}rp /A /B /C 31{/.notdef}rp /c 156{/.notdef}rp]
XNCYXO+CALIBRI,Bold nf
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
342.35 583.736 mo
(c)sh
grestore
gsave
387.172 583.886 mo
369.347 583.886 li
369.347 583.265 368.843 582.762 368.222 582.762 cv
366.373 582.762 li
366.373 549.737 li
387.172 549.737 li
387.172 583.886 li
clp
366.373 549.737 mo
387.172 549.737 li
387.172 583.886 li
366.373 583.886 li
cp
.216617 .223056 .0440375 0 cmyk
f
.0784314 .0901961 0 .133333 cmyk
true set_gvm
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/h <1C60D8A8C9B78256DD098552A13EB08FA6FA0D6709438B3D102551767CA1
A9E996A468589FBA293078984D3CE935CE0231F88F2DC01EAD3D4D7C30F367B4
FF8590AB3DC282E07D2BBA78BF8F6BA1A9D28C699F2490709333B2A7C7AB58F9
879C4857A63288F65938A4C40EF9DE33C4B5617CFAAAA9D228423A38CF0BAF30
AE63C9A38E0A50BB8D2C76240754A3BB0D75EA5E0E60276B334DD25FF24277F3
E187BAF4700B1AD1BCB29E368AE110915D56F0FC3F4CD7DD4385E5BCA564DCE4
92FAE459FD4A2AF8DF2CF0ED2C290B57C2260C120EFB0A6113A9C2037BAB7076
D8E7A3A0B41FAD04D3C3848E3E5A113E98F22BCEA62166624A15F5EE45C801EA
EAC69B6F067944425A7B9C87F60A063958733EC34ABF5DA43D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXO+CALIBRI,Bold /Encoding get
dup 104 /h put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXO+CALIBRI,Bold*1 
[65{/.notdef}rp /A /B /C 31{/.notdef}rp /c 4{/.notdef}rp /h 
151{/.notdef}rp]
XNCYXO+CALIBRI,Bold nf
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
363.273 583.736 mo
(h)sh
grestore
gsave
413.303 582.762 mo
391.904 582.762 li
391.904 559.737 li
413.303 559.737 li
413.303 582.762 li
clp
391.904 559.737 mo
413.303 559.737 li
413.303 582.762 li
391.904 582.762 li
cp
.216617 .223056 .0440375 0 cmyk
f
.0784314 .0901961 0 .133333 cmyk
true set_gvm
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7A4C86C545A4AC8A7D7F6C345E834CA1213E882E926387794
826A205EEEE689D37E8FC5A261291E47A8EB37515D6AFF3E8D4C2927EEA10BDE
E7B9C51B7C7E29EC21F969487478C80B6DD492C8CB06797735DBFAA0767835E1
6CF60557FF99669574049AC02AF815FE3A71EC95AE08115F25C3E55D5B1FD10C
A1E741534F0E60416081D7FA16D9DFEF57FF91FD82FC7BA4FB9689D718D9A71D
ED1EF9DCA51AF0BBC79B40093EF91CBC3D8C48A3FDFEA41B5047A65EAFDD5AF1
021F9C948AAB35D583226126C585E079DEB6D479075845CECA8ED7ED10944C11
C924501DD381B71E2F7690C30AF54ADDDF92DD4099EA219A54E3CF84E276FA78
71C8A6ED23473DBBAA6EDA7BEF929816C1760D14417F454980C243ACB7FEEE42
2DBAD62FF97870FD2250B1790169B64F76> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXO+CALIBRI,Bold /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXO+CALIBRI,Bold*1 
[65{/.notdef}rp /A /B /C 31{/.notdef}rp /c /.notdef /e 
2{/.notdef}rp /h 151{/.notdef}rp]
XNCYXO+CALIBRI,Bold nf
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
390.104 583.736 mo
(e)sh
grestore
gsave
434.824 584.286 mo
423.274 584.286 li
423.321 584.162 423.347 584.027 423.347 583.887 cv
423.347 583.265 422.843 582.762 422.222 582.762 cv
417.024 582.762 li
417.024 559.737 li
434.824 559.737 li
434.824 584.286 li
clp
417.024 559.737 mo
434.824 559.737 li
434.824 584.286 li
417.024 584.286 li
cp
.216617 .223056 .0440375 0 cmyk
f
.0784314 .0901961 0 .133333 cmyk
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
415.274 583.736 mo
(c)sh
grestore
gsave
441.347 583.886 mo
439.298 583.886 li
439.298 549.737 li
459.547 549.737 li
459.547 582.762 li
442.472 582.762 li
441.851 582.762 441.348 583.265 441.347 583.886 cv
clp
439.298 549.737 mo
459.547 549.737 li
459.547 583.886 li
439.298 583.886 li
cp
.216617 .223056 .0440375 0 cmyk
f
.0784314 .0901961 0 .133333 cmyk
true set_gvm
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/k <1C60D8A8C9B75BE516614667A44F22210CF918DF9A165CFB8629C0209826
948E2FE65D0531907EFC6CEE9C42A6A91B170DFC4ED3DD7BCEB75CB88E9360AA
9D4D85DFB44D1E13C666F7CA817F0FDAE1F579FDCBFEEB9592CD300CE9D556B2
F53959F62271AF5D1DF3429D8234194326CFD675093A33D991981074EB4DD78F
B0D37770E1F71B711EE4AF018F1F522346494682C2EAD080682B0E52DF015ED0
A296FFE2258127AF044B2FE1A912CDE7756B1EA66FD409081B5DF068C0AC94BA
5CB990B205A2BD94B057E7EE78C8378F119C5E011FF99D9DE7068C7B5ECC642E
DA7F8C91416E812321638125EC70A624036FB156287384EFFBD58909C3FD61B6
E64F99D702ACDB1D789CB3DCF15D8D723AD4089C14846FC87833AE90884B18A4
D911B4A0B9DA84A039> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXO+CALIBRI,Bold /Encoding get
dup 107 /k put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXO+CALIBRI,Bold*1 
[65{/.notdef}rp /A /B /C 31{/.notdef}rp /c /.notdef /e 
2{/.notdef}rp /h 2{/.notdef}rp /k 148{/.notdef}rp]
XNCYXO+CALIBRI,Bold nf
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
436.198 583.736 mo
(k)sh
grestore
477.86 585.242 mo
477.476 585.242 477.138 585.05 476.935 584.757 cv
476.741 584.916 476.492 585.011 476.222 585.011 cv
442.472 585.011 li
441.851 585.011 441.347 584.508 441.347 583.887 cv
441.347 583.886 441.347 583.886 441.347 583.886 cv
459.547 583.886 li
459.547 582.762 li
476.222 582.762 li
476.605 582.762 476.944 582.953 477.147 583.246 cv
477.341 583.087 477.589 582.991 477.86 582.991 cv
481.468 582.991 484.722 581.534 487.085 579.172 cv
489.447 576.809 490.904 573.555 490.905 569.947 cv
490.905 569.831 490.923 569.711 490.96 569.602 cv
491.005 569.459 li
491.005 558.482 li
491.005 557.86 491.509 557.356 492.13 557.356 cv
492.751 557.356 493.255 557.86 493.255 558.482 cv
493.255 569.636 li
493.255 569.752 493.236 569.872 493.2 569.982 cv
493.154 570.127 li
493.058 578.495 486.251 585.241 477.86 585.242 cv
422.222 585.011 mo
388.472 585.011 li
387.85 585.011 387.347 584.508 387.347 583.887 cv
387.347 583.265 387.85 582.762 388.472 582.762 cv
391.904 582.762 li
391.904 584.286 li
413.303 584.286 li
413.303 582.762 li
417.024 582.762 li
417.024 584.286 li
423.274 584.286 li
423.113 584.71 422.703 585.011 422.222 585.011 cv
368.222 585.011 mo
334.472 585.011 li
333.851 585.011 333.347 584.508 333.347 583.887 cv
333.347 583.265 333.851 582.762 334.472 582.762 cv
344.099 582.762 li
344.099 584.286 li
361.899 584.286 li
361.899 582.762 li
366.373 582.762 li
366.373 583.886 li
369.347 583.886 li
369.347 583.886 369.347 583.886 369.347 583.887 cv
369.347 584.508 368.843 585.011 368.222 585.011 cv
315.229 581.628 mo
314.962 581.628 314.694 581.533 314.479 581.341 cv
311.354 578.545 309.384 574.472 309.385 569.947 cv
309.385 569.805 309.41 569.673 309.461 569.541 cv
309.505 569.426 li
309.505 548.135 li
309.505 547.513 310.009 547.01 310.63 547.01 cv
311.251 547.01 311.755 547.513 311.755 548.135 cv
311.755 569.636 li
311.755 569.779 311.73 569.911 311.679 570.043 cv
311.636 570.153 li
311.696 573.935 313.359 577.316 315.979 579.665 cv
316.443 580.079 316.482 580.791 316.068 581.253 cv
315.845 581.501 315.538 581.628 315.229 581.628 cv
492.13 539.356 mo
491.509 539.356 491.005 538.853 491.005 538.232 cv
491.005 507.991 li
490.941 507.848 490.905 507.691 490.905 507.527 cv
490.905 506.67 490.823 505.834 490.666 505.026 cv
490.547 504.416 490.945 503.825 491.555 503.706 cv
491.628 503.692 491.7 503.685 491.771 503.685 cv
492.299 503.685 492.769 504.059 492.875 504.597 cv
493.02 505.345 493.11 506.113 493.142 506.895 cv
493.215 507.045 493.255 507.212 493.255 507.387 cv
493.255 538.232 li
493.255 538.853 492.751 539.356 492.13 539.356 cv
310.63 529.01 mo
310.009 529.01 309.505 528.506 309.505 527.885 cv
309.505 508.034 li
309.428 507.88 309.385 507.707 309.385 507.527 cv
309.385 502.558 311.763 498.133 315.44 495.343 cv
315.643 495.188 315.882 495.113 316.119 495.113 cv
316.459 495.113 316.795 495.267 317.016 495.558 cv
317.392 496.053 317.296 496.758 316.801 497.134 cv
313.813 499.405 311.835 502.922 311.649 506.909 cv
311.717 507.055 311.755 507.217 311.755 507.387 cv
311.755 527.885 li
311.755 528.506 311.251 529.01 310.63 529.01 cv
477.384 494.262 mo
443.634 494.262 li
443.012 494.262 442.509 493.758 442.509 493.136 cv
442.509 492.516 443.012 492.011 443.634 492.011 cv
477.384 492.011 li
478.005 492.011 478.509 492.516 478.509 493.136 cv
478.509 493.758 478.005 494.262 477.384 494.262 cv
419.092 494.262 mo
414.477 494.262 li
414.477 492.011 li
423.384 492.011 li
423.57 492.011 423.746 492.057 423.901 492.137 cv
419.092 492.137 li
419.092 494.262 li
391.126 494.262 mo
389.634 494.262 li
389.157 494.262 388.75 493.965 388.586 493.546 cv
388.586 492.727 li
388.75 492.308 389.157 492.011 389.634 492.011 cv
391.126 492.011 li
391.126 494.262 li
359.514 494.262 mo
335.634 494.262 li
335.013 494.262 334.509 493.758 334.509 493.136 cv
334.509 492.516 335.013 492.011 335.634 492.011 cv
359.514 492.011 li
359.514 494.262 li
.0784314 .0901961 0 .133333 cmyk
f
gsave
369.384 494.262 mo
359.514 494.262 li
359.514 492.011 li
369.384 492.011 li
370.005 492.011 370.509 492.516 370.509 493.136 cv
370.509 493.758 370.005 494.262 369.384 494.262 cv
388.586 493.546 mo
388.537 493.419 388.509 493.281 388.509 493.136 cv
388.509 492.992 388.537 492.854 388.586 492.727 cv
388.586 493.546 li
clp
359.514 492.011 mo
388.586 492.011 li
388.586 494.262 li
359.514 494.262 li
cp
f
.0392157 .0470588 0 .164706 cmyk
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
358.88 523.737 mo
(A)sh
grestore
gsave
414.477 494.262 mo
391.126 494.262 li
391.126 492.011 li
414.477 492.011 li
414.477 494.262 li
clp
391.126 492.011 mo
414.477 492.011 li
414.477 494.262 li
391.126 494.262 li
cp
f
.0392157 .0470588 0 .164706 cmyk
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
389.178 523.737 mo
(C)sh
grestore
gsave
423.384 494.262 mo
419.092 494.262 li
419.092 492.137 li
423.901 492.137 li
424.262 492.324 424.509 492.702 424.509 493.136 cv
424.509 493.758 424.005 494.262 423.384 494.262 cv
clp
419.092 492.137 mo
424.509 492.137 li
424.509 494.262 li
419.092 494.262 li
cp
f
.0392157 .0470588 0 .164706 cmyk
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
415.643 523.737 mo
(B)sh
grestore
gsave
361.899 584.286 mo
344.099 584.286 li
344.099 582.762 li
361.899 582.762 li
361.899 584.286 li
clp
344.099 582.762 mo
361.899 582.762 li
361.899 584.286 li
344.099 584.286 li
cp
f
.0392157 .0470588 0 .164706 cmyk
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
342.35 583.736 mo
(c)sh
grestore
gsave
369.347 583.886 mo
366.373 583.886 li
366.373 582.762 li
368.222 582.762 li
368.843 582.762 369.347 583.265 369.347 583.886 cv
clp
366.373 582.762 mo
369.347 582.762 li
369.347 583.886 li
366.373 583.886 li
cp
f
.0392157 .0470588 0 .164706 cmyk
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
363.273 583.736 mo
(h)sh
grestore
gsave
413.303 584.286 mo
391.904 584.286 li
391.904 582.762 li
413.303 582.762 li
413.303 584.286 li
clp
391.904 582.762 mo
413.303 582.762 li
413.303 584.286 li
391.904 584.286 li
cp
f
.0392157 .0470588 0 .164706 cmyk
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
390.104 583.736 mo
(e)sh
grestore
gsave
423.274 584.286 mo
417.024 584.286 li
417.024 582.762 li
422.222 582.762 li
422.843 582.762 423.347 583.265 423.347 583.887 cv
423.347 584.027 423.321 584.162 423.274 584.286 cv
clp
417.024 582.762 mo
423.347 582.762 li
423.347 584.286 li
417.024 584.286 li
cp
f
.0392157 .0470588 0 .164706 cmyk
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
415.274 583.736 mo
(c)sh
grestore
gsave
459.547 583.886 mo
441.347 583.886 li
441.348 583.265 441.851 582.762 442.472 582.762 cv
459.547 582.762 li
459.547 583.886 li
clp
441.347 582.762 mo
459.547 582.762 li
459.547 583.886 li
441.347 583.886 li
cp
f
.0392157 .0470588 0 .164706 cmyk
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
436.198 583.736 mo
(k)sh
grestore
476.42 582.677 mo
484.25 582.677 490.59 576.336 490.59 568.506 cv
490.63 568.136 li
490.63 505.886 li
490.59 506.086 li
490.59 498.266 484.25 491.917 476.42 491.917 cv
476.38 491.636 li
323.38 491.636 li
323.25 491.917 li
315.42 491.917 309.07 498.266 309.07 506.086 cv
309.13 505.886 li
309.13 568.136 li
309.07 568.506 li
309.07 576.336 315.42 582.677 323.25 582.677 cv
323.38 582.386 li
476.38 582.386 li
.775753 .128634 1 0 cmyk
@
1 /1 /CSD get_res sepcs
.749 sep
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
357.44 522.296 mo
(A)sh
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
387.738 522.296 mo
(C)sh
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
414.203 522.296 mo
(B)sh
true set_gvm
%ADOBeginSubsetFont: HIBBAA+CALIBRI,Bold AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXO+CALIBRI,Bold dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B888C146> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXO+CALIBRI,Bold /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXO+CALIBRI,Bold*1 
[32{/.notdef}rp /space 32{/.notdef}rp /A /B /C 31{/.notdef}rp /c 
/.notdef /e 2{/.notdef}rp /h 2{/.notdef}rp /k 148{/.notdef}rp]
XNCYXO+CALIBRI,Bold nf
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
442.23 522.296 mo
( )sh
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
340.91 582.297 mo
(c)sh
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
361.833 582.297 mo
(h)sh
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
388.664 582.297 mo
(e)sh
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
413.834 582.297 mo
(c)sh
XNCYXO+CALIBRI,Bold*1 [49.9997 0 0 -49.9997 0 0 ]msf
434.758 582.297 mo
(k)sh
gsave
78.2095 1229.71 mo
43.8595 1229.71 li
43.8595 1197.96 li
78.2095 1197.96 li
78.2095 1229.71 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
39.6599 1229.56 mo
(M)sh
grestore
gsave
99.9582 1230.01 mo
84.4084 1230.01 li
84.4084 1205.86 li
99.9582 1205.86 li
99.9582 1230.01 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
82.4085 1229.56 mo
(s)sh
grestore
gsave
124.064 1238.46 mo
103.264 1238.46 li
103.264 1205.91 li
124.064 1205.91 li
124.064 1238.46 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
101.964 1229.56 mo
(g)sh
grestore
gsave
159.459 1229.56 mo
141.059 1229.56 li
141.059 1197.76 li
159.459 1197.76 li
159.459 1229.56 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
136.81 1229.56 mo
(1)sh
grestore
177.49 1261.06 mo
176.869 1261.06 176.364 1260.56 176.364 1259.94 cv
176.364 1259.32 176.869 1258.81 177.49 1258.81 cv
181.098 1258.81 184.351 1257.35 186.715 1254.99 cv
188.996 1252.7 190.433 1249.59 190.53 1246.13 cv
190.483 1246.07 li
190.335 1245.87 190.255 1245.63 190.255 1245.39 cv
190.255 1234.38 li
190.255 1233.76 190.758 1233.25 191.38 1233.25 cv
192.002 1233.25 192.505 1233.76 192.505 1234.38 cv
192.505 1245.01 li
192.557 1245.08 li
192.705 1245.27 192.785 1245.51 192.785 1245.76 cv
192.785 1254.21 185.942 1261.06 177.49 1261.06 cv
174.514 1260.76 mo
140.764 1260.76 li
140.142 1260.76 139.638 1260.26 139.638 1259.64 cv
139.638 1259.02 140.142 1258.51 140.764 1258.51 cv
174.514 1258.51 li
175.135 1258.51 175.638 1259.02 175.638 1259.64 cv
175.638 1260.26 175.135 1260.76 174.514 1260.76 cv
120.514 1260.76 mo
86.7637 1260.76 li
86.1425 1260.76 85.6389 1260.26 85.6389 1259.64 cv
85.6389 1259.02 86.1425 1258.51 86.7637 1258.51 cv
120.514 1258.51 li
121.135 1258.51 121.639 1259.02 121.639 1259.64 cv
121.639 1260.26 121.135 1260.76 120.514 1260.76 cv
66.5137 1260.76 mo
32.7634 1260.76 li
32.1421 1260.76 31.6386 1260.26 31.6386 1259.64 cv
31.6386 1259.02 32.1421 1258.51 32.7634 1258.51 cv
66.5137 1258.51 li
67.1349 1258.51 67.6385 1259.02 67.6385 1259.64 cv
67.6385 1260.26 67.1349 1260.76 66.5137 1260.76 cv
14.209 1256.82 mo
13.9179 1256.82 13.627 1256.71 13.4068 1256.49 cv
10.7714 1253.81 9.11208 1250.15 9.019 1246.12 cv
8.95956 1246.03 li
8.82747 1245.85 8.75462 1245.62 8.75462 1245.39 cv
8.75462 1223.11 li
8.75462 1222.49 9.25899 1221.98 9.88025 1221.98 cv
10.5015 1221.98 11.0051 1222.49 11.0051 1223.11 cv
11.0051 1245.03 li
11.0603 1245.11 li
11.1924 1245.3 11.2653 1245.53 11.2653 1245.76 cv
11.2653 1249.32 12.6927 1252.55 15.0112 1254.91 cv
15.4467 1255.35 15.4411 1256.06 14.9984 1256.5 cv
14.7791 1256.71 14.4939 1256.82 14.209 1256.82 cv
191.38 1215.25 mo
190.758 1215.25 190.255 1214.75 190.255 1214.13 cv
190.255 1183.14 li
190.255 1182.87 190.345 1182.63 190.503 1182.43 cv
190.473 1181.99 190.421 1181.56 190.349 1181.14 cv
190.245 1180.52 190.657 1179.94 191.269 1179.84 cv
191.333 1179.83 191.396 1179.82 191.459 1179.82 cv
191.997 1179.82 192.474 1180.21 192.567 1180.76 cv
192.71 1181.6 192.785 1182.47 192.785 1183.35 cv
192.785 1183.63 192.683 1183.89 192.505 1184.09 cv
192.505 1214.13 li
192.505 1214.75 192.002 1215.25 191.38 1215.25 cv
9.88025 1203.99 mo
9.25899 1203.99 8.75462 1203.48 8.75462 1202.86 cv
8.75462 1183.14 li
8.75462 1182.85 8.86128 1182.59 9.04472 1182.38 cv
9.3446 1177.57 11.8761 1173.35 15.6132 1170.77 cv
15.8086 1170.63 16.0318 1170.57 16.2527 1170.57 cv
16.6093 1170.57 16.9599 1170.73 17.1784 1171.05 cv
17.5322 1171.56 17.405 1172.26 16.8934 1172.62 cv
13.4909 1174.97 11.2653 1178.89 11.2653 1183.35 cv
11.2653 1183.61 11.1701 1183.87 11.0051 1184.07 cv
11.0051 1202.86 li
11.0051 1203.48 10.5015 1203.99 9.88025 1203.99 cv
177.184 1170.06 mo
177.079 1170.06 176.974 1170.04 176.872 1170.01 cv
143.451 1170.01 li
142.829 1170.01 142.325 1169.51 142.325 1168.89 cv
142.325 1168.27 142.829 1167.76 143.451 1167.76 cv
177.13 1167.76 li
177.385 1167.76 177.637 1167.85 177.836 1168.01 cv
177.89 1168.05 li
178.375 1168.44 178.451 1169.15 178.061 1169.64 cv
177.839 1169.91 177.513 1170.06 177.184 1170.06 cv
123.201 1170.01 mo
89.4505 1170.01 li
88.8292 1170.01 88.3257 1169.51 88.3257 1168.89 cv
88.3257 1168.27 88.8292 1167.76 89.4505 1167.76 cv
123.201 1167.76 li
123.822 1167.76 124.326 1168.27 124.326 1168.89 cv
124.326 1169.51 123.822 1170.01 123.201 1170.01 cv
69.2005 1170.01 mo
35.4502 1170.01 li
34.8289 1170.01 34.3253 1169.51 34.3253 1168.89 cv
34.3253 1168.27 34.8289 1167.76 35.4502 1167.76 cv
69.2005 1167.76 li
69.8217 1167.76 70.3253 1168.27 70.3253 1168.89 cv
70.3253 1169.51 69.8217 1170.01 69.2005 1170.01 cv
1 /0 /CSD get_res sepcs
.0976547 sep
f
176.05 1258.5 mo
183.88 1258.5 190.22 1252.15 190.22 1244.32 cv
189.88 1244.64 li
189.88 1181.64 li
190.22 1181.91 li
190.22 1174.08 183.88 1167.74 176.05 1167.74 cv
176.38 1167.39 li
22.6299 1167.39 li
22.8799 1167.74 li
15.0499 1167.74 8.69994 1174.08 8.69994 1181.91 cv
8.37993 1181.64 li
8.37993 1244.64 li
8.69994 1244.32 li
8.69994 1252.15 15.0499 1258.5 22.8799 1258.5 cv
22.6299 1258.14 li
176.38 1258.14 li
.775753 .128634 1 0 cmyk
@
.827878 .528222 0 0 cmyk
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
38.2199 1228.12 mo
(M)sh
80.9685 1228.12 mo
(s)sh
100.524 1228.12 mo
(g)sh
124.06 1228.12 mo
( )sh
135.37 1228.12 mo
(1)sh
1598.38 1556.64 mo
1218.15 1331.34 li
1218.47 1330.98 1218.7 1330.53 1218.81 1330.04 cv
1598.38 1105.89 li
1980.13 1330.89 li
1598.38 1556.64 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
1218.15 1331.34 mo
1217.38 1330.89 li
1218.81 1330.04 li
1218.7 1330.53 1218.47 1330.98 1218.15 1331.34 cv
1 /0 /CSD get_res sepcs
.47451 sep
f
gsave
1598.38 1105.89 mo
1217.38 1330.89 li
1598.38 1556.64 li
1980.13 1330.89 li
1598.38 1105.89 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
1598.38 1559.63 mo
1597.85 1559.63 1597.32 1559.5 1596.85 1559.22 cv
1215.92 1333.51 li
1215.61 1333.33 1215.32 1333.1 1215.08 1332.81 cv
1215.08 1332.81 1215.07 1332.8 1215.07 1332.8 cv
1215.06 1332.8 1215.06 1332.79 1215.06 1332.79 cv
1214.95 1332.66 1214.86 1332.53 1214.78 1332.39 cv
1215.88 1332.39 li
1216.79 1332.39 1217.6 1331.98 1218.15 1331.34 cv
1598.38 1556.64 li
1980.13 1330.89 li
1598.38 1105.89 li
1218.81 1330.04 li
1218.85 1329.83 1218.88 1329.61 1218.88 1329.39 cv
1218.88 1328.48 1218.48 1327.67 1217.85 1327.12 cv
1596.85 1103.3 li
1597.32 1103.03 1597.85 1102.89 1598.38 1102.89 cv
1598.91 1102.89 1599.43 1103.03 1599.9 1103.3 cv
1981.26 1328.07 li
1978.63 1329.39 li
1983.05 1331.59 li
1982.86 1332.37 1982.36 1333.05 1981.66 1333.47 cv
1599.91 1559.22 li
1599.44 1559.5 1598.91 1559.63 1598.38 1559.63 cv
1 /0 /CSD get_res sepcs
.0976547 sep
f
1983.05 1331.59 mo
1978.63 1329.39 li
1981.26 1328.07 li
1981.65 1328.3 li
1982.57 1328.84 1983.13 1329.82 1983.13 1330.88 cv
1983.13 1331.13 1983.1 1331.36 1983.05 1331.59 cv
1 /0 /CSD get_res sepcs
.47451 sep
f
1215.88 1332.39 mo
1214.78 1332.39 li
1214.75 1332.33 1214.72 1332.27 1214.69 1332.22 cv
1214.69 1332.21 1214.69 1332.21 1214.68 1332.2 cv
1214.68 1332.2 1214.68 1332.2 1214.68 1332.2 cv
1214.48 1331.78 1214.38 1331.33 1214.38 1330.88 cv
1214.38 1330.88 1214.38 1330.87 1214.38 1330.87 cv
1214.38 1330.86 1214.38 1330.86 1214.38 1330.85 cv
1214.38 1330.59 1214.42 1330.34 1214.49 1330.08 cv
1215.88 1329.39 li
1215.06 1328.98 li
1215.14 1328.89 1215.21 1328.81 1215.29 1328.73 cv
1215.29 1328.73 1215.3 1328.73 1215.3 1328.73 cv
1215.31 1328.72 1215.31 1328.71 1215.32 1328.7 cv
1215.33 1328.7 1215.33 1328.69 1215.34 1328.69 cv
1215.34 1328.69 1215.34 1328.69 1215.34 1328.68 cv
1215.51 1328.53 1215.7 1328.39 1215.9 1328.28 cv
1217.85 1327.12 li
1218.48 1327.67 1218.88 1328.48 1218.88 1329.39 cv
1218.88 1329.61 1218.85 1329.83 1218.81 1330.04 cv
1217.38 1330.89 li
1218.15 1331.34 li
1217.6 1331.98 1216.79 1332.39 1215.88 1332.39 cv
f
1214.49 1330.08 mo
1214.53 1329.95 1214.57 1329.82 1214.63 1329.69 cv
1214.74 1329.44 1214.88 1329.2 1215.06 1328.98 cv
1215.88 1329.39 li
1214.49 1330.08 li
f
grestore
gsave
1215.88 1329.39 mo
1597.63 1104.39 li
1978.63 1329.39 li
1597.63 1555.14 li
1215.88 1329.39 li
eclp
1215 1555.93 mo
1979.53 1555.93 li
1979.53 1103.48 li
1215 1103.48 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [1750.14 1022.96 1750.14 1475.41 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!9!!!!8!!!!8!!!!8!!!!7!!!!7!!!!7!!!!6!!!!6!!!!6!!!!5!!!!5!!!!5!!!!4!!!!4!!!!4
!!!!3!!!!3!!!!2!!!!2!!!!2!!!!1!!!!1!!!!1!!!!0!!!!0!!!!0!!!!/!!!!/!!!!/!!!!.!!!!.
!!!!-!!!!-!!!!-!!!!,!!!!,!!!!+!!!!+!!!!+!!!!*!!!!*!!!!)!!!!)!!!!)!!!!(!!!!(!!!!'
!!!!'!!!!'!!!!&!!!!&!!!!%!!!!%!!!!%!!!!$!!!!$!!!!#!!!!#!!!!#!!!!"!!!!"z!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /9 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~(Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m'+toj&eYfi&eYfi
&eYcg&J5Te&J5Qc&.fBa&.fBa&.f?_%hB0]%hB0]%hB-[%LrsY%LrsY%LrpW%1NaU%1NaU%1N^S$k*OQ
$k*OP$O[=M$O[=M$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP88
"U,&5"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%zz!!!!!~>
]
>>
1750.14 1022.96 1750.14 1475.41 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/9 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
6 lw
[] 0 dsh
1215.88 1329.39 mo
1597.63 1104.39 li
1978.63 1329.39 li
1597.63 1555.14 li
1215.88 1329.39 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/P <1C60D8A8C9B7B6440707B4051A5DBE562555C57029EE089BD9C0449CBA1C
DE15C4825E58F476AE98F4F477E10D3D9627118D612BA7F36DE667A502083FA2
B5A87FB2329B4599145D540EE26CB50F350F1C24FBA25930C404B0478F3C579C
4E768F279D098F515881442D0DB18015E7A9640759CC77EC73BBCCD8C1932872
FD5A8725311BE90CFB90EBC81A1F03816E32CEC0A4E1DB1A22099D4FCE02BD53
A243FE7B67435108D6337E9414F0B3B9D88A863DF0DD8EDB216F3428E1C8EDAD
F4A32D7B4C28D91BCF9108C9794A650A0922E44EBCE859C2D94676859E04DBB6
727B1AB10957F28903A4930A> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 80 /P put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 4{/.notdef}rp 
/zero /one /two 9{/.notdef}rp /less /equal /.notdef /question 
/.notdef /A /B /C /D /.notdef /F 2{/.notdef}rp 
/I 3{/.notdef}rp /M /N /.notdef /P /.notdef /R 
/S 5{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d 
/e /f /g /h /i /.notdef /k /l 
/m /n /o /p /q /r /s /t 
/u /v /w /.notdef /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1422.08 1248.71 mo
(P)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1468.57 1248.71 mo
(r)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1499.95 1248.71 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1544.73 1248.71 mo
(a)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1587.84 1248.71 mo
(m)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1659.74 1248.71 mo
(b)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1707.02 1248.71 mo
(l)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1727.68 1248.71 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1772.46 1248.71 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1309.54 1356.71 mo
(t)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1339.69 1356.71 mo
(r)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1371.06 1356.71 mo
(a)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1414.17 1356.71 mo
(n)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1461.46 1356.71 mo
(s)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1496.66 1356.71 mo
(m)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1568.55 1356.71 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1589.21 1356.71 mo
(s)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1624.41 1356.71 mo
(s)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1659.61 1356.71 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1680.26 1356.71 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1727.72 1356.71 mo
(n)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1775.01 1356.71 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1795.35 1356.71 mo
(<)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1840.18 1356.71 mo
(=)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1885 1356.71 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1421.53 1464.71 mo
(t)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1451.68 1464.71 mo
(h)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1498.96 1464.71 mo
(r)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1530.34 1464.71 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1575.12 1464.71 mo
(s)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1610.32 1464.71 mo
(h)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1657.6 1464.71 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1705.07 1464.71 mo
(l)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1725.72 1464.71 mo
(d)sh
1597.63 1104.39 mo
1597.63 979.886 li
1 /1 /CSD get_res sepcs
.749 sep
@
1597.63 956.636 mo
1612.63 986.636 li
1612.27 986.836 li
1602.83 982.116 1591.71 982.116 1582.27 986.836 cv
1582.63 986.636 li
1597.63 956.636 li
cp
ef
1548.88 1072.89 mo
1645.63 1072.89 li
1645.63 988.886 li
1548.88 988.886 li
cp
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1549.11 1051.54 mo
(Y)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1583.22 1051.54 mo
(e)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1618.05 1051.54 mo
(s)sh
1677.93 1892.86 mo
1677.88 1892.64 li
1316.38 1892.64 li
1316.35 1892.86 li
1264.2 1892.86 1221.93 1850.59 1221.93 1798.44 cv
1221.93 1788.39 1223.5 1778.72 1226.4 1769.64 cv
1235.38 1769.64 li
1235.38 1749.83 li
1251.89 1722.37 1281.97 1704.01 1316.35 1704.01 cv
1316.38 1703.64 li
1677.88 1703.64 li
1677.93 1704.01 li
1730.08 1704.01 1772.36 1746.29 1772.36 1798.44 cv
1772.36 1850.59 1730.08 1892.86 1677.93 1892.86 cv
1 /0 /CSD get_res sepcs
.0976547 sep
f
1235.38 1769.64 mo
1226.4 1769.64 li
1228.64 1762.65 1231.67 1756.01 1235.38 1749.83 cv
1235.38 1769.64 li
1 /0 /CSD get_res sepcs
.0980392 sep
f
gsave
1316.38 1703.64 mo
1316.35 1704.01 li
1264.2 1704.01 1221.93 1746.29 1221.93 1798.44 cv
1221.93 1850.59 1264.2 1892.86 1316.35 1892.86 cv
1316.38 1892.64 li
1677.88 1892.64 li
1677.93 1892.86 li
1730.08 1892.86 1772.36 1850.59 1772.36 1798.44 cv
1772.36 1746.29 1730.08 1704.01 1677.93 1704.01 cv
1677.88 1703.64 li
1316.38 1703.64 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
1677.94 1895.86 mo
1677.93 1895.86 1677.93 1895.86 1677.93 1895.86 cv
1677.53 1895.86 1677.15 1895.78 1676.8 1895.64 cv
1317.48 1895.64 li
1317.13 1895.78 1316.75 1895.86 1316.35 1895.86 cv
1289.46 1895.86 1265.08 1884.95 1247.46 1867.32 cv
1229.84 1849.7 1218.93 1825.33 1218.93 1798.44 cv
1218.93 1788.41 1220.44 1778.74 1223.26 1769.64 cv
1226.4 1769.64 li
1223.5 1778.72 1221.93 1788.39 1221.93 1798.44 cv
1221.93 1798.44 li
1221.93 1798.44 li
1221.93 1850.59 1264.2 1892.86 1316.35 1892.86 cv
1316.38 1892.64 li
1677.88 1892.64 li
1677.93 1892.86 li
1730.08 1892.86 1772.36 1850.59 1772.36 1798.44 cv
1772.36 1798.44 li
1772.36 1798.44 li
1772.36 1746.29 1730.08 1704.01 1677.93 1704.01 cv
1677.88 1703.64 li
1316.38 1703.64 li
1316.35 1704.01 li
1281.97 1704.01 1251.89 1722.37 1235.38 1749.83 cv
1235.38 1744.24 li
1238.93 1738.95 1242.98 1734.03 1247.46 1729.54 cv
1264.77 1712.23 1288.59 1701.4 1314.91 1701.02 cv
1315.35 1700.77 1315.85 1700.64 1316.38 1700.64 cv
1677.88 1700.64 li
1678.41 1700.64 1678.91 1700.77 1679.34 1701.02 cv
1705.68 1701.39 1729.51 1712.23 1746.82 1729.54 cv
1764.45 1747.17 1775.36 1771.54 1775.36 1798.44 cv
1775.36 1825.33 1764.45 1849.7 1746.82 1867.32 cv
1729.2 1884.95 1704.83 1895.86 1677.94 1895.86 cv
1 /0 /CSD get_res sepcs
.0976547 sep
f
1226.4 1769.64 mo
1223.26 1769.64 li
1225.49 1762.42 1228.53 1755.56 1232.29 1749.17 cv
1232.43 1749.17 li
1232.43 1748.92 li
1233.37 1747.33 1234.36 1745.77 1235.38 1744.24 cv
1235.38 1749.83 li
1231.67 1756.01 1228.64 1762.65 1226.4 1769.64 cv
1 /0 /CSD get_res sepcs
.0980392 sep
f
gsave
1232.43 1749.17 mo
1232.29 1749.17 li
1232.34 1749.08 1232.39 1749 1232.43 1748.92 cv
1232.43 1749.17 li
clp
1232.29 1748.92 mo
1232.43 1748.92 li
1232.43 1749.17 li
1232.29 1749.17 li
cp
f
1 /0 /CSD get_res sepcs
.6 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1198.63 1748.54 mo
(o)sh
grestore
grestore
gsave
1314.88 1891.14 mo
1676.38 1891.14 li
1676.49 1891.42 li
1728.64 1891.42 1770.92 1849.15 1770.92 1797 cv
1770.92 1744.85 1728.64 1702.57 1676.49 1702.57 cv
1676.38 1702.89 li
1314.88 1702.89 li
1314.91 1702.57 li
1262.76 1702.57 1220.49 1744.85 1220.49 1797 cv
1220.49 1849.15 1262.76 1891.42 1314.91 1891.42 cv
1314.88 1891.14 li
eclp
1219.74 1892.17 mo
1771.67 1892.17 li
1771.67 1701.82 li
1219.74 1701.82 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [1648.57 686.72 1648.57 877.07 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!9!!!!8!!!!8!!!!8!!!!7!!!!7!!!!7!!!!6!!!!6!!!!6!!!!5!!!!5!!!!5!!!!4!!!!4!!!!4
!!!!3!!!!3!!!!2!!!!2!!!!2!!!!1!!!!1!!!!1!!!!0!!!!0!!!!0!!!!/!!!!/!!!!/!!!!.!!!!.
!!!!-!!!!-!!!!-!!!!,!!!!,!!!!+!!!!+!!!!+!!!!*!!!!*!!!!)!!!!)!!!!)!!!!(!!!!(!!!!'
!!!!'!!!!'!!!!&!!!!&!!!!%!!!!%!!!!%!!!!$!!!!$!!!!#!!!!#!!!!#!!!!"!!!!"z!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /10 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~(Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m'+toj&eYfi&eYfi
&eYcg&J5Te&J5Qc&.fBa&.fBa&.f?_%hB0]%hB0]%hB-[%LrsY%LrsY%LrpW%1NaU%1NaU%1N^S$k*OQ
$k*OP$O[=M$O[=M$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP88
"U,&5"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%zz!!!!!~>
]
>>
1648.57 686.72 1648.57 877.07 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/10 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
1314.88 1891.14 mo
1676.38 1891.14 li
1676.49 1891.42 li
1728.64 1891.42 1770.92 1849.15 1770.92 1797 cv
1770.92 1744.85 1728.64 1702.57 1676.49 1702.57 cv
1676.38 1702.89 li
1314.88 1702.89 li
1314.91 1702.57 li
1262.76 1702.57 1220.49 1744.85 1220.49 1797 cv
1220.49 1849.15 1262.76 1891.42 1314.91 1891.42 cv
cp
1 /1 /CSD get_res sepcs
.749 sep
@
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1361.54 1770 mo
(F)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1402.89 1770 mo
(a)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1446 1770 mo
(i)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1466.66 1770 mo
(l)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1487.31 1770 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1507.66 1770 mo
(t)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1537.8 1770 mo
(h)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1585.09 1770 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1629.87 1770 mo
( )sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1306.25 1878 mo
(P)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1352.74 1878 mo
(r)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1384.12 1878 mo
(o)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1431.58 1878 mo
(c)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1469.64 1878 mo
(e)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1514.42 1878 mo
(d)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1561.7 1878 mo
(u)sh
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1608.99 1878 mo
(r)sh
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [90 0 0 -90 0 0 ]msf
1640.37 1878 mo
(e)sh
1597.63 1555.14 mo
1597.63 1576.14 li
1495.63 1576.14 li
1495.63 1679.64 li
1 /1 /CSD get_res sepcs
.749 sep
@
1495.63 1702.89 mo
1480.63 1672.89 li
1480.7 1672.57 li
1490.14 1677.3 1501.26 1677.3 1510.7 1672.57 cv
1510.63 1672.89 li
1495.63 1702.89 li
cp
ef
1454.38 1620.39 mo
1536.88 1620.39 li
1536.88 1536.39 li
1454.38 1536.39 li
cp
1 /1 /CSD get_res sepcs
0 sep
ef
1 /1 /CSD get_res sepcs
1 sep
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1454.65 1599.09 mo
(N)sh
XNCYXN+CALIBRI*1 [69.9998 0 0 -69.9998 0 0 ]msf
1499.83 1599.09 mo
(o)sh
gsave
78.2095 1820.75 mo
43.8595 1820.75 li
43.8595 1789 li
78.2095 1789 li
78.2095 1820.75 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
39.6599 1820.6 mo
(M)sh
grestore
gsave
99.9582 1821.05 mo
84.4084 1821.05 li
84.4084 1796.9 li
99.9582 1796.9 li
99.9582 1821.05 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
82.4085 1820.6 mo
(s)sh
grestore
gsave
124.064 1829.5 mo
103.264 1829.5 li
103.264 1796.95 li
124.064 1796.95 li
124.064 1829.5 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
101.964 1820.6 mo
(g)sh
grestore
gsave
159.41 1820.6 mo
139.61 1820.6 li
139.61 1788.55 li
159.41 1788.55 li
159.41 1820.6 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
136.81 1820.6 mo
(2)sh
grestore
177.49 1852.1 mo
176.869 1852.1 176.364 1851.6 176.364 1850.98 cv
176.364 1850.36 176.869 1849.85 177.49 1849.85 cv
181.098 1849.85 184.352 1848.39 186.715 1846.03 cv
188.851 1843.89 190.247 1841.02 190.495 1837.83 cv
190.343 1837.64 190.255 1837.39 190.255 1837.14 cv
190.255 1826.09 li
190.255 1825.46 190.758 1824.96 191.38 1824.96 cv
192.002 1824.96 192.505 1825.46 192.505 1826.09 cv
192.505 1836.06 li
192.682 1836.26 192.785 1836.53 192.785 1836.81 cv
192.785 1845.25 185.942 1852.1 177.49 1852.1 cv
172.949 1851.76 mo
139.199 1851.76 li
138.578 1851.76 138.074 1851.26 138.074 1850.64 cv
138.074 1850.01 138.578 1849.51 139.199 1849.51 cv
172.949 1849.51 li
173.57 1849.51 174.074 1850.01 174.074 1850.64 cv
174.074 1851.26 173.57 1851.76 172.949 1851.76 cv
118.949 1851.76 mo
85.1986 1851.76 li
84.5773 1851.76 84.0737 1851.26 84.0737 1850.64 cv
84.0737 1850.01 84.5773 1849.51 85.1986 1849.51 cv
118.949 1849.51 li
119.57 1849.51 120.074 1850.01 120.074 1850.64 cv
120.074 1851.26 119.57 1851.76 118.949 1851.76 cv
64.9485 1851.76 mo
31.1991 1851.76 li
30.5778 1851.76 30.0742 1851.26 30.0742 1850.64 cv
30.0742 1850.01 30.5778 1849.51 31.1991 1849.51 cv
64.9485 1849.51 li
65.5706 1849.51 66.0742 1850.01 66.0742 1850.64 cv
66.0742 1851.26 65.5706 1851.76 64.9485 1851.76 cv
13.197 1846.72 mo
12.865 1846.72 12.5362 1846.57 12.314 1846.29 cv
10.4615 1843.95 9.27672 1841.05 9.0533 1837.9 cv
8.86566 1837.7 8.75462 1837.43 8.75462 1837.14 cv
8.75462 1813.29 li
8.75462 1812.67 9.25899 1812.16 9.88025 1812.16 cv
10.5015 1812.16 11.0051 1812.67 11.0051 1813.29 cv
11.0051 1836.09 li
11.1694 1836.28 11.2653 1836.54 11.2653 1836.81 cv
11.2653 1839.86 12.3156 1842.67 14.0777 1844.89 cv
14.4636 1845.38 14.3819 1846.09 13.8944 1846.47 cv
13.6879 1846.64 13.4416 1846.72 13.197 1846.72 cv
191.38 1806.96 mo
190.758 1806.96 190.255 1806.46 190.255 1805.84 cv
190.255 1774.14 li
190.255 1773.87 190.344 1773.63 190.501 1773.43 cv
190.486 1773.24 190.468 1773.04 190.445 1772.85 cv
190.373 1772.23 190.814 1771.67 191.432 1771.6 cv
191.476 1771.59 191.52 1771.59 191.563 1771.59 cv
192.127 1771.59 192.613 1772.01 192.68 1772.58 cv
192.749 1773.18 192.785 1773.78 192.785 1774.39 cv
192.785 1774.67 192.682 1774.93 192.505 1775.13 cv
192.505 1805.84 li
192.505 1806.46 192.002 1806.96 191.38 1806.96 cv
9.88025 1794.16 mo
9.25899 1794.16 8.75462 1793.66 8.75462 1793.04 cv
8.75462 1774.14 li
8.75462 1773.85 8.86269 1773.58 9.04753 1773.38 cv
9.37976 1768.28 12.214 1763.86 16.3314 1761.34 cv
16.5147 1761.22 16.7175 1761.17 16.9178 1761.17 cv
17.2965 1761.17 17.6663 1761.36 17.8789 1761.71 cv
18.2031 1762.24 18.0366 1762.93 17.5066 1763.26 cv
13.7615 1765.55 11.2645 1769.67 11.2653 1774.39 cv
11.2653 1774.66 11.1699 1774.91 11.0051 1775.11 cv
11.0051 1793.04 li
11.0051 1793.66 10.5015 1794.16 9.88025 1794.16 cv
177.834 1761.35 mo
177.825 1761.35 177.816 1761.35 177.807 1761.35 cv
177.701 1761.34 177.596 1761.34 177.49 1761.34 cv
177.207 1761.34 176.939 1761.24 176.73 1761.05 cv
176.692 1761.01 li
144.212 1761.01 li
143.591 1761.01 143.087 1760.51 143.087 1759.89 cv
143.087 1759.27 143.591 1758.76 144.212 1758.76 cv
177.13 1758.76 li
177.413 1758.76 177.681 1758.87 177.89 1759.06 cv
177.938 1759.1 li
178.522 1759.15 178.972 1759.65 178.958 1760.25 cv
178.943 1760.86 178.442 1761.35 177.834 1761.35 cv
123.962 1761.01 mo
90.2118 1761.01 li
89.5906 1761.01 89.087 1760.51 89.087 1759.89 cv
89.087 1759.27 89.5906 1758.76 90.2118 1758.76 cv
123.962 1758.76 li
124.583 1758.76 125.087 1759.27 125.087 1759.89 cv
125.087 1760.51 124.583 1761.01 123.962 1761.01 cv
69.9618 1761.01 mo
36.2123 1761.01 li
35.5911 1761.01 35.0867 1760.51 35.0867 1759.89 cv
35.0867 1759.27 35.5911 1758.76 36.2123 1758.76 cv
69.9618 1758.76 li
70.5831 1758.76 71.0866 1759.27 71.0866 1759.89 cv
71.0866 1760.51 70.5831 1761.01 69.9618 1761.01 cv
1 /0 /CSD get_res sepcs
.0976547 sep
f
2.25 lw
[33.75 20.25 ] 0 dsh
176.05 1849.54 mo
183.88 1849.54 190.22 1843.19 190.22 1835.37 cv
189.88 1835.64 li
189.88 1772.64 li
190.22 1772.95 li
190.22 1765.12 183.88 1758.78 176.05 1758.78 cv
176.38 1759.14 li
22.6299 1759.14 li
22.8799 1758.78 li
15.0499 1758.78 8.69994 1765.12 8.69994 1772.95 cv
8.37993 1772.64 li
8.37993 1835.64 li
8.69994 1835.37 li
8.69994 1843.19 15.0499 1849.54 22.8799 1849.54 cv
22.6299 1849.89 li
176.38 1849.89 li
.775753 .128634 1 0 cmyk
@
0 1 1 0 cmyk
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
38.2199 1819.16 mo
(M)sh
80.9685 1819.16 mo
(s)sh
100.524 1819.16 mo
(g)sh
124.06 1819.16 mo
( )sh
135.37 1819.16 mo
(2)sh
gsave
2904.25 798.026 mo
2869.9 798.026 li
2869.9 766.278 li
2904.25 766.278 li
2904.25 798.026 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
2865.7 797.876 mo
(M)sh
grestore
gsave
2926 798.326 mo
2910.45 798.326 li
2910.45 774.177 li
2926 774.177 li
2926 798.326 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
2908.45 797.876 mo
(s)sh
grestore
gsave
2950.1 806.776 mo
2929.3 806.776 li
2929.3 774.227 li
2950.1 774.227 li
2950.1 806.776 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
2928 797.876 mo
(g)sh
grestore
gsave
2986.73 798.026 mo
2963.99 798.026 li
2963.99 766.127 li
2986.73 766.127 li
2986.73 798.026 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A0860A05CDAB07FCC8C6F1456010984E043BC1080A8E4
004C7A6F96FF4AD7F2A4B870B666CC1C7EA11B61E750FAAE008DD2598CE85BEE
4C2722299D9BDE6BD901B361B9FFD1A74A6881105044BA6119A67BABA2C5AA34
4BC5F5DC3AF8B4A3D3F44101FD3AF23A3469D02149FFD63F48CC3EA80D9EB13A
8494F7709B008152FFA0D84385AFFDE11B5FA65E8FC9AAD2BCC7E5E382783235
F954A8738DCC9A5760FEB582741B59F3C495CA1895A9F6120A54415FC0BB4494
CFF5A03D1CB88055E001BDA6B35B19BB5CD64D26C1A126C3877F4B0A8ECE9817
BE4A2EC5FA3C6FC9FCDEF6FA038892760F02C70AC24D1AFF24D0C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 4{/.notdef}rp 
/zero /one /two /.notdef /four 7{/.notdef}rp /less /equal 
/.notdef /question /.notdef /A /B /C /D /.notdef 
/F 2{/.notdef}rp /I 3{/.notdef}rp /M /N /.notdef /P 
/.notdef /R /S 5{/.notdef}rp /Y 7{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /.notdef /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
2962.84 797.876 mo
(4)sh
grestore
3000.23 829.511 mo
2966.48 829.511 li
2965.85 829.511 2965.35 829.008 2965.35 828.386 cv
2965.35 827.765 2965.85 827.261 2966.48 827.261 cv
3000.23 827.261 li
3000.85 827.261 3001.35 827.765 3001.35 828.386 cv
3001.35 829.008 3000.85 829.511 3000.23 829.511 cv
2946.23 829.511 mo
2912.48 829.511 li
2911.85 829.511 2911.35 829.008 2911.35 828.386 cv
2911.35 827.765 2911.85 827.261 2912.48 827.261 cv
2946.23 827.261 li
2946.85 827.261 2947.35 827.765 2947.35 828.386 cv
2947.35 829.008 2946.85 829.511 2946.23 829.511 cv
2892.23 829.511 mo
2858.48 829.511 li
2857.85 829.511 2857.35 829.008 2857.35 828.386 cv
2857.35 827.765 2857.85 827.261 2858.48 827.261 cv
2892.23 827.261 li
2892.85 827.261 2893.35 827.765 2893.35 828.386 cv
2893.35 829.008 2892.85 829.511 2892.23 829.511 cv
3003.53 829.381 mo
3002.91 829.381 3002.4 828.878 3002.4 828.257 cv
3002.4 827.635 3002.91 827.131 3003.53 827.131 cv
3003.53 827.132 li
3007.14 827.131 3010.39 825.672 3012.75 823.307 cv
3014.94 821.122 3016.35 818.176 3016.55 814.895 cv
3016.36 814.689 3016.25 814.418 3016.25 814.137 cv
3016.25 802.988 li
3016.25 802.366 3016.76 801.863 3017.38 801.863 cv
3018 801.863 3018.5 802.366 3018.5 802.988 cv
3018.5 813.29 li
3018.71 813.499 3018.82 813.782 3018.82 814.077 cv
3018.82 822.528 3011.98 829.381 3003.53 829.381 cv
2839.99 824.869 mo
2839.69 824.869 2839.39 824.749 2839.16 824.511 cv
2836.8 821.974 2835.28 818.62 2835.08 814.926 cv
2834.87 814.716 2834.75 814.433 2834.75 814.137 cv
2834.75 791.334 li
2834.75 790.713 2835.26 790.21 2835.88 790.21 cv
2836.5 790.21 2837 790.713 2837 791.334 cv
2837 813.311 li
2837.2 813.518 2837.3 813.79 2837.3 814.077 cv
2837.31 817.519 2838.63 820.641 2840.81 822.977 cv
2841.23 823.431 2841.21 824.143 2840.75 824.567 cv
2840.54 824.769 2840.26 824.869 2839.99 824.869 cv
3017.38 783.862 mo
3016.76 783.862 3016.25 783.359 3016.25 782.738 cv
3016.25 751.886 li
3016.25 751.598 3016.37 751.32 3016.56 751.113 cv
3016.54 750.52 3016.47 749.937 3016.37 749.367 cv
3016.26 748.755 3016.67 748.171 3017.28 748.063 cv
3017.35 748.051 3017.42 748.045 3017.48 748.045 cv
3018.02 748.045 3018.49 748.429 3018.59 748.974 cv
3018.74 749.848 3018.82 750.749 3018.82 751.666 cv
3018.82 751.965 3018.71 752.245 3018.5 752.453 cv
3018.5 782.738 li
3018.5 783.359 3018 783.862 3017.38 783.862 cv
2835.88 772.209 mo
2835.26 772.209 2834.75 771.706 2834.75 771.084 cv
2834.75 751.886 li
2834.75 751.597 2834.87 751.319 2835.06 751.112 cv
2835.25 745.939 2838.01 741.417 2842.09 738.794 cv
2842.28 738.673 2842.49 738.615 2842.7 738.615 cv
2843.07 738.615 2843.43 738.797 2843.64 739.132 cv
2843.98 739.654 2843.83 740.351 2843.31 740.686 cv
2839.69 743.01 2837.3 747.054 2837.3 751.666 cv
2837.3 751.952 2837.2 752.225 2837 752.432 cv
2837 771.084 li
2837 771.706 2836.5 772.209 2835.88 772.209 cv
3003.77 738.761 mo
2970.02 738.761 li
2969.39 738.761 2968.89 738.258 2968.89 737.637 cv
2968.89 737.015 2969.39 736.511 2970.02 736.511 cv
3003.77 736.511 li
3004.39 736.511 3004.89 737.015 3004.89 737.637 cv
3004.89 738.258 3004.39 738.761 3003.77 738.761 cv
2949.77 738.761 mo
2916.02 738.761 li
2915.39 738.761 2914.89 738.258 2914.89 737.637 cv
2914.89 737.015 2915.39 736.511 2916.02 736.511 cv
2949.77 736.511 li
2950.39 736.511 2950.89 737.015 2950.89 737.637 cv
2950.89 738.258 2950.39 738.761 2949.77 738.761 cv
2895.77 738.761 mo
2862.02 738.761 li
2861.39 738.761 2860.89 738.258 2860.89 737.637 cv
2860.89 737.015 2861.39 736.511 2862.02 736.511 cv
2895.77 736.511 li
2896.39 736.511 2896.89 737.015 2896.89 737.637 cv
2896.89 738.258 2896.39 738.761 2895.77 738.761 cv
1 /0 /CSD get_res sepcs
.0976547 sep
f
3002.09 826.817 mo
3009.92 826.817 3016.26 820.466 3016.26 812.636 cv
3016.63 812.636 li
3016.63 750.386 li
3016.26 750.226 li
3016.26 742.396 3009.92 736.057 3002.09 736.057 cv
3002.38 736.136 li
2848.63 736.136 li
2848.92 736.057 li
2841.09 736.057 2834.74 742.396 2834.74 750.226 cv
2834.38 750.386 li
2834.38 812.636 li
2834.74 812.636 li
2834.74 820.466 2841.09 826.817 2848.92 826.817 cv
2848.63 826.886 li
3002.38 826.886 li
.775753 .128634 1 0 cmyk
@
0 1 1 0 cmyk
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
2864.26 796.437 mo
(M)sh
2907.01 796.437 mo
(s)sh
2926.56 796.437 mo
(g)sh
2950.1 796.437 mo
( )sh
2961.4 796.437 mo
(4)sh
gsave
2904.25 1492.04 mo
2869.9 1492.04 li
2869.9 1460.29 li
2904.25 1460.29 li
2904.25 1492.04 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
2865.7 1491.89 mo
(M)sh
grestore
gsave
2926 1492.34 mo
2910.45 1492.34 li
2910.45 1468.19 li
2926 1468.19 li
2926 1492.34 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
2908.45 1491.89 mo
(s)sh
grestore
gsave
2950.1 1500.79 mo
2929.3 1500.79 li
2929.3 1468.24 li
2950.1 1468.24 li
2950.1 1500.79 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
2928 1491.89 mo
(g)sh
grestore
gsave
2985.14 1492.34 mo
2965.34 1492.34 li
2965.34 1459.84 li
2985.14 1459.84 li
2985.14 1492.34 li
clp
1 /0 /CSD get_res sepcs
.0976547 sep
true set_gvm
%ADOBeginSubsetFont: PBAAAA+CALIBRI AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2015 Adobe System Incorporated. All rights reserved.
systemdict begin
XNCYXN+CALIBRI dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/three <1C60D8A8C9B7A0860A2FEF09FCB80607108B3B71A30E2FFE5A0F53F1
F3CE33E25BDD9A37F12480657F287B11234D872A9341B8D761BAC5B337758ED3
4FBDB0155B2DB8FB089986F2CBFC580855A552E4E7BA3E50F802AF5BABA1A72C
62BC1E6D108EEB3A3C66741F416B352CC414FB931072A8C5863DBBAA93C49B22
4ADC9F8CAA75F5C9BFEB2915D3505CD6144D20AF6779286AAF407AAC26D69248
C394FBB9BF32373F684ACA2E19C0F36192202ACAF72B1025D6F0CF7066494E82
7BB306A2A776E0F2B6F3F0E76AC8A13169FA8D6AD525762CBAE08E1976BA0FA8
68484244B2C6286C74EE91A2C98728E442E286200142B1A5906E7DF9201821B2
7907537A9A18D5757AABAE23C46953763B0140A749D71AFB31CB71FE8CEB3596
B5D9F27628C8660D823DA7A912BCD8F676248CEB1E8BAEB1BE8A438B018DEAB6
2C462D1458D0606C924EBCEC79E3D916B8F995C300564C3F71FF08DB1F5BD306
FF743BF5E6C612870C09ECDB532B05A7DD75F09723F8164F23FA51923DA26610
7C0EB4976641F969687AA087A6CC3FBA3B6B49CB68C88F765064561D586CDB15
837CCCDF95B1ED2288DB0948C8291CEF223BB458BF8475B7D75BEC1205D90B55
55DC2429D51153DF3C83901B6982E60F7C7F061954215DB5FAEB8718AB7756E4
DAA99626BD231EE3CF4090380F8238B83D56E35DB5099A025EA0320D1A3DE89D
5285DD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
XNCYXN+CALIBRI /Encoding get
dup 51 /three put
pop
%ADOEndSubsetFont
reset_gvm
/XNCYXN+CALIBRI*1 
[32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright /.notdef /plus 4{/.notdef}rp 
/zero /one /two /three /four 7{/.notdef}rp /less /equal 
/.notdef /question /.notdef /A /B /C /D /.notdef 
/F 2{/.notdef}rp /I 3{/.notdef}rp /M /N /.notdef /P 
/.notdef /R /S 5{/.notdef}rp /Y 7{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /.notdef 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /.notdef /y 134{/.notdef}rp]
XNCYXN+CALIBRI nf
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
2962.84 1491.89 mo
(3)sh
grestore
3003.53 1523.39 mo
3002.91 1523.39 3002.4 1522.89 3002.4 1522.27 cv
3002.4 1521.64 3002.91 1521.14 3003.53 1521.14 cv
3007.14 1521.14 3010.39 1519.68 3012.75 1517.32 cv
3014.99 1515.08 3016.42 1512.04 3016.56 1508.66 cv
3016.37 1508.45 3016.25 1508.18 3016.25 1507.89 cv
3016.25 1496.79 li
3016.25 1496.17 3016.76 1495.66 3017.38 1495.66 cv
3018 1495.66 3018.5 1496.17 3018.5 1496.79 cv
3018.5 1507.3 li
3018.71 1507.51 3018.82 1507.79 3018.82 1508.09 cv
3018.82 1516.54 3011.98 1523.39 3003.53 1523.39 cv
3000.27 1523.26 mo
2966.52 1523.26 li
2965.9 1523.26 2965.4 1522.76 2965.4 1522.14 cv
2965.4 1521.52 2965.9 1521.01 2966.52 1521.01 cv
3000.27 1521.01 li
3000.89 1521.01 3001.4 1521.52 3001.4 1522.14 cv
3001.4 1522.76 3000.89 1523.26 3000.27 1523.26 cv
2946.27 1523.26 mo
2912.52 1523.26 li
2911.9 1523.26 2911.4 1522.76 2911.4 1522.14 cv
2911.4 1521.52 2911.9 1521.01 2912.52 1521.01 cv
2946.27 1521.01 li
2946.89 1521.01 2947.4 1521.52 2947.4 1522.14 cv
2947.4 1522.76 2946.89 1523.26 2946.27 1523.26 cv
2892.27 1523.26 mo
2858.52 1523.26 li
2857.9 1523.26 2857.4 1522.76 2857.4 1522.14 cv
2857.4 1521.52 2857.9 1521.01 2858.52 1521.01 cv
2892.27 1521.01 li
2892.89 1521.01 2893.4 1521.52 2893.4 1522.14 cv
2893.4 1522.76 2892.89 1523.26 2892.27 1523.26 cv
2840.02 1518.91 mo
2839.72 1518.91 2839.42 1518.79 2839.2 1518.56 cv
2836.75 1515.95 2835.21 1512.48 2835.06 1508.66 cv
2834.87 1508.46 2834.75 1508.18 2834.75 1507.89 cv
2834.75 1485.18 li
2834.75 1484.56 2835.26 1484.06 2835.88 1484.06 cv
2836.5 1484.06 2837 1484.56 2837 1485.18 cv
2837 1507.32 li
2837.2 1507.53 2837.3 1507.8 2837.3 1508.09 cv
2837.31 1511.54 2838.65 1514.68 2840.84 1517.02 cv
2841.26 1517.47 2841.24 1518.18 2840.79 1518.61 cv
2840.57 1518.81 2840.29 1518.91 2840.02 1518.91 cv
3017.38 1477.66 mo
3016.76 1477.66 3016.25 1477.16 3016.25 1476.54 cv
3016.25 1445.64 li
3016.25 1445.35 3016.36 1445.08 3016.55 1444.88 cv
3016.52 1444.36 3016.46 1443.86 3016.37 1443.36 cv
3016.26 1442.75 3016.67 1442.17 3017.28 1442.06 cv
3017.35 1442.05 3017.41 1442.04 3017.48 1442.04 cv
3018.01 1442.04 3018.49 1442.42 3018.59 1442.97 cv
3018.74 1443.85 3018.82 1444.75 3018.82 1445.68 cv
3018.82 1445.97 3018.71 1446.25 3018.5 1446.46 cv
3018.5 1476.54 li
3018.5 1477.16 3018 1477.66 3017.38 1477.66 cv
2835.88 1466.06 mo
2835.26 1466.06 2834.75 1465.56 2834.75 1464.93 cv
2834.75 1445.64 li
2834.75 1445.34 2834.87 1445.06 2835.08 1444.85 cv
2835.35 1439.8 2838.06 1435.4 2842.06 1432.82 cv
2842.25 1432.7 2842.46 1432.64 2842.67 1432.64 cv
2843.04 1432.64 2843.4 1432.82 2843.62 1433.16 cv
2843.95 1433.68 2843.8 1434.37 2843.28 1434.71 cv
2839.68 1437.04 2837.3 1441.07 2837.3 1445.68 cv
2837.3 1445.96 2837.2 1446.23 2837 1446.44 cv
2837 1464.93 li
2837 1465.56 2836.5 1466.06 2835.88 1466.06 cv
3003.74 1432.51 mo
2969.99 1432.51 li
2969.37 1432.51 2968.87 1432.01 2968.87 1431.39 cv
2968.87 1430.77 2969.37 1430.26 2969.99 1430.26 cv
3003.74 1430.26 li
3004.37 1430.26 3004.87 1430.77 3004.87 1431.39 cv
3004.87 1432.01 3004.37 1432.51 3003.74 1432.51 cv
2949.74 1432.51 mo
2915.99 1432.51 li
2915.37 1432.51 2914.87 1432.01 2914.87 1431.39 cv
2914.87 1430.77 2915.37 1430.26 2915.99 1430.26 cv
2949.74 1430.26 li
2950.37 1430.26 2950.87 1430.77 2950.87 1431.39 cv
2950.87 1432.01 2950.37 1432.51 2949.74 1432.51 cv
2895.74 1432.51 mo
2861.99 1432.51 li
2861.37 1432.51 2860.87 1432.01 2860.87 1431.39 cv
2860.87 1430.77 2861.37 1430.26 2861.99 1430.26 cv
2895.74 1430.26 li
2896.37 1430.26 2896.87 1430.77 2896.87 1431.39 cv
2896.87 1432.01 2896.37 1432.51 2895.74 1432.51 cv
1 /0 /CSD get_res sepcs
.0976547 sep
f
3002.09 1520.83 mo
3009.92 1520.83 3016.26 1514.48 3016.26 1506.65 cv
3016.63 1506.39 li
3016.63 1444.14 li
3016.26 1444.24 li
3016.26 1436.41 3009.92 1430.07 3002.09 1430.07 cv
3002.38 1429.89 li
2848.63 1429.89 li
2848.92 1430.07 li
2841.09 1430.07 2834.74 1436.41 2834.74 1444.24 cv
2834.38 1444.14 li
2834.38 1506.39 li
2834.74 1506.65 li
2834.74 1514.48 2841.09 1520.83 2848.92 1520.83 cv
2848.63 1520.64 li
3002.38 1520.64 li
.775753 .128634 1 0 cmyk
@
.827878 .528222 0 0 cmyk
XNCYXN+CALIBRI*1 [49.9997 0 0 -49.9997 0 0 ]msf
2864.26 1490.45 mo
(M)sh
2907.01 1490.45 mo
(s)sh
2926.56 1490.45 mo
(g)sh
2950.1 1490.45 mo
( )sh
2961.4 1490.45 mo
(3)sh
6 lw
[] 0 dsh
1597.63 442.886 mo
1597.63 385.886 li
774.13 385.886 li
774.13 406.886 li
1 /1 /CSD get_res sepcs
.749 sep
@
774.13 406.886 mo
759.13 376.886 li
759.06 377.146 li
768.5 381.866 779.62 381.866 789.06 377.146 cv
789.13 376.886 li
774.13 406.886 li
cp
ef
2133.13 232.886 mo
2121.88 232.886 li
2121.88 220.886 li
2133.13 220.886 li
2133.13 232.886 li
1 /0 /CSD get_res sepcs
.0976547 sep
f
gsave
2121.88 220.886 mo
2121.88 232.886 li
2133.13 232.886 li
2133.13 220.886 li
2121.88 220.886 li
-152.87 -171.364 mo
3045.13 -171.364 li
3045.13 2578.89 li
-152.87 2578.89 li
-152.87 -171.364 li
eclp
2133.13 233.011 mo
2121.88 233.011 li
2121.75 232.886 li
2121.75 220.886 li
2121.79 220.798 li
2121.88 220.762 li
2133.13 220.762 li
2133.22 220.798 li
2133.25 220.886 li
2133.25 232.886 li
2133.22 232.975 li
2133.13 233.011 li
2121.88 232.886 mo
2121.88 232.886 li
2133.13 232.886 li
2133.13 220.886 li
2121.88 220.886 li
2121.88 232.886 li
f
grestore
gsave
2120.38 231.386 mo
2131.63 231.386 li
2131.63 220.136 li
2120.38 220.136 li
2120.38 231.386 li
eclp
2119.77 231.906 mo
2132.61 231.906 li
2132.61 219.067 li
2119.77 219.067 li
cp
level3{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
<<
/PatternType 2
/Shading
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [2279.05 2346.98 2279.05 2359.82 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!!!!9!!!!8!!!!8!!!!8!!!!7!!!!7!!!!7!!!!6!!!!6!!!!6!!!!5!!!!5!!!!5!!!!4!!!!4!!!!4
!!!!3!!!!3!!!!2!!!!2!!!!2!!!!1!!!!1!!!!1!!!!0!!!!0!!!!0!!!!/!!!!/!!!!/!!!!.!!!!.
!!!!-!!!!-!!!!-!!!!,!!!!,!!!!+!!!!+!!!!+!!!!*!!!!*!!!!)!!!!)!!!!)!!!!(!!!!(!!!!'
!!!!'!!!!'!!!!&!!!!&!!!!%!!!!%!!!!%!!!!$!!!!$!!!!#!!!!#!!!!#!!!!"!!!!"z!!!!!~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>> /Gradient add_res /11 /Gradient get_res >> matrix makepattern grestore setpattern
}if
level3{
ef
}if
level3 not{
gsave
[1 0 0 -1 -152.87 2578.89 ]ct
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 <~(Ddl((D[c%()@Z$()@Z$()7Q!'bqGu'bqGu'bh>r'GM5q'GM5q'GD,n',)#m',)#m'+toj&eYfi&eYfi
&eYcg&J5Te&J5Qc&.fBa&.fBa&.f?_%hB0]%hB0]%hB-[%LrsY%LrsY%LrpW%1NaU%1NaU%1N^S$k*OQ
$k*OP$O[=M$O[=M$O[=L$47+I$47+H#mgnE#mgnE#mgnD#RC\A#RC\@#6tJ=#6tJ=#6tJ<"pP89"pP88
"U,&5"U,&5"U,&5"9\i1"9\i1!s8W-!s8W-!s8W-!WiE)!WiE)!<E3%!<E3%!<E3%zz!!!!!~>
]
>>
2279.05 2346.98 2279.05 2359.82 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res <<
/PatternType 1
/PaintType 1
/TilingType 3
/BBox [-10 -10 10 10]
/XStep 20
/YStep 20
/PaintProc{ begin
save
/11 /Gradient get_res exec restore end}
>> matrix makepattern grestore setpattern
ef
}if
grestore
.25 lw
2120.38 231.386 mo
2131.63 231.386 li
2131.63 220.136 li
2120.38 220.136 li
cp
1 /1 /CSD get_res sepcs
.749 sep
@
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 ]]
] del_res
true set_gvm
/XNCYXO+CALIBRI,Bold*1 uf
/XNCYXO+CALIBRI,Bold uf
/HIBBAA+CALIBRI,Bold uf
reset_gvm
true set_gvm
/XNCYXN+CALIBRI*1 uf
/XNCYXN+CALIBRI uf
/PBAAAA+CALIBRI uf
reset_gvm
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
